{"version":3,"sources":["contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","components/Layout/Row.tsx","state/mint/actions.ts","state/swap/actions.ts","hooks/useActiveWeb3React.ts","utils/addressHelpers.ts","components/Layout/Column.tsx","utils/formatBalance.ts","utils/bigNumber.ts","config/constants/contracts.ts","utils/index.ts","config/constants/index.ts","hooks/useRefresh.ts","state/hooks.ts","config/constants/multicall/index.ts","hooks/useContract.ts","components/Balance.tsx","config/constants/tokens.ts","utils/contractHelpers.ts","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","utils/wrappedCurrency.ts","state/multicall/hooks.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/user/hooks/index.tsx","utils/multicall.ts","views/Pools/helpers.tsx","config/index.ts","config/constants/lists.ts","config/constants/tokenLists/index.ts","state/lists/hooks.ts","state/lists/actions.ts","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","utils/prices.ts","state/actions.ts","state/multicall/actions.ts","state/user/actions.ts","components/QuestionHelper/index.tsx","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","config/constants/pools.ts","hooks/useToast.ts","state/wallet/hooks.ts","hooks/useTheme.ts","components/Card/index.tsx","config/localization/languages.ts","components/UnlockButton.tsx","config/constants/types.ts","state/transactions/hooks.tsx","utils/providers.ts","state/swap/hooks.ts","hooks/useParsedQueryString.ts","state/transactions/actions.ts","utils/compoundApyHelpers.ts","hooks/usePairs.ts","hooks/useDebounce.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","utils/isZero.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/profile/getProfile.ts","state/profile/index.tsx","utils/wallet.ts","utils/currencyId.ts","state/application/hooks.ts","utils/uriToHttp.ts","state/user/hooks/helpers.ts","config/constants/farms.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","utils/calls/farms.ts","components/App/Settings/TransactionSettings.tsx","components/App/Settings/SettingsModal.tsx","components/App/Settings/index.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","components/Tags.tsx","utils/getRpcUrl.ts","utils/ENS/parseENSAddress.ts","hooks/useAuth.ts","components/Loader/CircleLoader.tsx","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","components/SearchModal/filtering.ts","utils/web3React.ts","components/Loader/Dots.tsx","hooks/useTotalSupply.ts","state/user/hooks/useUserAddedTokens.ts","state/pools/helpers.ts","config/constants/meta.ts","components/Layout/Page.tsx","components/Menu/SubNav.tsx","views/Page.tsx","components/TokenImage/index.tsx","state/block/index.ts","components/Layout/Container.tsx","components/ApyCalculatorModal/index.tsx","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/application/actions.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","utils/farmsPriceHelpers.ts","contexts/RefreshContext.tsx","contexts/ThemeContext.tsx","assets/image/loading.gif","hooks/usePreviousValue.ts","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/burn/actions.ts","hooks/usePersistState.ts","utils/latinise.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","components/PositionCard/index.tsx","components/PageHeader/PageHeader.tsx","utils/farmHelpers.ts","utils/apr.ts","components/Layout/Flex.tsx","components/Select/Select.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/SearchInput/SearchInput.tsx","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","views/Pools/components/ToggleView/ToggleView.tsx","hooks/useEagerConnect.ts","components/DatePicker/DatePickerPortal.tsx","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/Loader/PageLoader.tsx","components/EasterEgg/EasterEgg.tsx","routerHistory.ts","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","hooks/useLastUpdated.ts","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","utils/getTimePeriods.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","assets/image/autoClaim.png","views/Pools/components/BountyModal.tsx","views/Pools/index.tsx","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/TokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["LS_KEY","fetchLocale","locale","fetch","process","response","json","data","getLanguageCodeFromLS","localStorage","getItem","EN","initialState","isFetching","currentLanguage","languageMap","Map","set","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","languages","state","setState","useEffect","a","enLocale","get","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","setItem","translate","useCallback","key","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Field","typeInput","createAction","resetMintState","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","ChainId","TESTNET","getAddress","address","addresses","networkId","MAINNET","getFactoryAddress","factory","getCakeAddress","tokens","pcn","getMasterChefAddress","masterChef","getMulticallAddress","multiCall","getWbnbAddress","wcxs","getLotteryV2Address","lotteryV2","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","getTradingCompetitionAddress","tradingCompetition","getEasterNftAddress","easterNft","getCakeVaultAddress","cakeVault","getPredictionsAddress","predictions","getChainlinkOracleAddress","chainlinkOracle","getBunnySpecialCakeVaultAddress","bunnySpecialCakeVault","getBunnySpecialPredictionAddress","bunnySpecialPrediction","Column","ColumnCenter","AutoColumn","getDecimalAmount","amount","decimals","BigNumber","times","BIG_TEN","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","BIG_ZERO","BIG_ONE","sousChef","REACT_APP_SOUSCHEF","pancakeProfile","REACT_APP_PANCAKEPROFILE","REACT_APP_PANCAKERABBITS","REACT_APP_BUNNYFACTORY","REACT_APP_CLAIMREFUND","REACT_APP_POINTCENTERIFO","REACT_APP_BUNNYSPECIAL","REACT_APP_TRADINGCOMPETITION","REACT_APP_EASERNFT","REACT_APP_BUNNYSPECIALCAKEFAULT","REACT_APP_BUNNYSPECIALPREDICTION","busd","usdt","corn","nextep","cxsPcnLp","cxsBusdLp","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","Token","BASES_TO_CHECK_TRADES_AGAINST","WETH","PCN","BUSD","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","WCXS","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","useRefresh","RefreshContext","fastRefresh","fast","slowRefresh","slow","usePollFarmsData","includeArchive","dispatch","useAppDispatch","pids","farmsConfig","nonArchivedFarms","map","farmToFetch","pid","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","usePollCoreFarmData","usePollBlockNumber","interval","setInterval","getBlockNumber","blockNumber","setBlock","clearInterval","useFarms","useSelector","farms","useFarmFromPid","find","f","useFarmUser","farm","allowance","userData","tokenBalance","stakedBalance","earnings","useBusdPriceFromPid","token","busdPrice","useLpTokenPrice","symbol","lpSymbol","farmTokenPriceInUsd","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","useFetchPublicPoolsData","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fetchPoolsUserDataAsync","pools","userDataLoaded","transformPool","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","isLoading","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","useMemo","useFetchProfile","fetchProfile","usePriceCakeBusd","cakeBnbFarm","useBlock","block","MULTICALL_NETWORKS","String","ContractAddress","useERC20","getBep20Contract","useCake","getCakeContract","useMasterchef","getMasterchefContract","useSousChef","id","getSouschefContract","useCakeVaultContract","getCakeVaultContract","useContract","withSignerIfPossible","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","MULTICALL_ABI","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","duration","separator","cxs","projectLink","abi","signer","signerOrProvider","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","config","poolsConfig","pool","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","cakeAbi","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getFactoryContract","factoryABI","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","reduce","newMap","tokenMap_","useAllTokens","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","includes","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","loading","result","useCurrency","currencyId","isBNB","toUpperCase","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","blocksPerFetch","Infinity","useCallsData","calls","callResults","multicall","useDispatch","serializedCallKeys","JSON","stringify","filter","c","toCallKey","sort","callKeys","parse","parseCallKey","addMulticallListeners","removeMulticallListeners","call","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","decodeFunctionResult","debug","useSingleContractMultipleData","contract","methodName","callInputs","interface","getFunction","results","inputs","callData","encodeFunctionData","useBlockNumber","useMultipleContractSingleData","useTokenAllowance","ApprovalState","owner","spender","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","summary","approval","useApproveCallbackFromTrade","trade","allowedSlippage","computeSlippageAdjustedAmounts","INPUT","useAudioModeManager","audioPlay","user","toggleSetAudioMode","muteAudio","unmuteAudio","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","updateUserExpertMode","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","updateUserSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","updateUserSlippageTolerance","useUserTransactionTTL","userDeadline","deadline","updateUserDeadline","useAddUserToken","addSerializedToken","serializedToken","serializeToken","useRemoveUserAddedToken","removeSerializedToken","serializePair","pair","token0","token1","usePairAdder","addSerializedPair","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","pinnedPairs","generatedPairs","flatMap","base","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","memo","sorted","sortsBefore","multi","itf","utils","Interface","calldata","toLowerCase","name","params","aggregate","returnData","res","i","multicallv2","requireSuccess","tryAggregate","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","cake","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","apr","isHighValueToken","Math","round","roundingDecimals","compoundFrequency","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand365D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","getRoi","amountEarned","amountInvested","getCakeVaultEarnings","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","window","location","origin","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","UNSUPPORTED_LIST_URLS","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","Number","sortByListPriority","urlA","urlB","first","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","lists","byUrl","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","activeListUrls","url","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","fetchTokenList","pending","fulfilled","rejected","addList","removeList","enableList","disableList","acceptListUpdate","createReducer","builder","addCase","updateBlockNumber","action","payload","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","lastUpdateVersionTimestamp","removeSerializedPair","tokenAAddress","tokenBAddress","now","transactions","hash","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","typedValue","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","listUrl","requestId","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","push","errorMessage","u","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","store","configureStore","devTools","reducer","blockReducer","farmsReducer","poolsReducer","application","swap","mint","burn","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","split","QuestionWrapper","QuestionHelper","text","useTooltip","placement","trigger","targetRef","tooltip","tooltipVisible","ref","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","index","toJSON","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","accum","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","method","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","cakeVaultContract","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","parseFloat","tokenPerBlock","setPoolsPublicData","stakingLimitData","stakingTokenBalances","stakingTokenBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","createAsyncThunk","publicVaultInfo","vaultFees","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","CORE","harvest","sortOrder","useToast","toastContext","ToastsContext","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","useTheme","ThemeContext","isDark","toggleTheme","theme","StyledThemeContext","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","code","languageList","UnlockButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","PoolIds","NftType","LotteryStatus","useAllTransactions","isTransactionRecent","allTransactions","RPC_URL","getRpcUrl","providers","JsonRpcProvider","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","parseUnits","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","isNaN","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","getTokenLogoURL","toLocaleLowerCase","StyledLogo","uriLocations","isZero","hexNumberString","priceHelperLps","lpAddresses","quoteToken","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","getFarmFromTokenSymbol","tokenSymbol","preferredQuoteTokens","farmsWithTokenSymbol","filterFarmsByQuoteToken","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","getProfile","REACT_APP_API_PROFILE","hasRegistered","profile","userId","points","teamId","tokenId","username","nftAddress","isInitialized","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","profileClear","addPoints","setupNetwork","ethereum","parseInt","request","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","image","tokenAdded","uriToHttp","uri","substr","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","src","fontSize","bold","small","textAlign","TransactionSubmittedContent","onDismiss","currencyToAdd","strokeWidth","external","href","isMetaMask","variant","mt","asset","marginLeft","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","message","justifyContent","pt","TransactionConfirmationModal","title","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","stakeFarm","enterStaking","wait","status","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","rawSlippage","setRawSlippage","setDeadline","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","RiskyLow","RiskyHigh","InvalidInput","flexWrap","gridTemplateColumns","gridGap","mb","mr","scale","placeholder","onBlur","onChange","e","target","isWarning","isSuccess","paddingTop","pl","SettingsModal","showConfirmExpertModal","setShowConfirmExpertModal","setUserslippageTolerance","ttl","setTtl","toggleExpertMode","setSingleHopOnly","onBack","maxWidth","prompt","checked","alignItems","SettingsTab","useModal","onPresentSettingsModal","show","TransactionState","primary","IconWrapper","failure","Transaction","CircleLoader","newTransactionsFirst","b","renderTransactions","flexDirection","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","Transactions","onPresentTransactionsModal","AppHeaderContainer","Flex","AppHeader","subtitle","helper","backTo","noConfig","position","as","flex","right","marginTop","BodyWrapper","AppBody","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","getNodeUrl","sample","parseENSAddress","ensAddress","ensPath","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","walletconnect","close","rotate","keyframes","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","ok","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","toasts","setToasts","toast","description","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","ToastListener","onRemove","StyledInput","input","textSubtle","inputRegex","Input","React","event","nextUserInput","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","className","display","cursor","val","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","WalletLink","BSC","getLibrary","Web3Provider","Dots","span","useTotalSupply","totalSupply","serializedTokensMap","transformUserData","quoteTokenAddress","DEFAULT_META","StyledPage","mediaQueries","sm","lg","PageMeta","pathname","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","pageTitle","join","property","Page","StyledNav","nav","Nav","activeIndex","Link","xs","SubNav","flexGrow","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","blockSlice","initialBlock","px","mx","Grid","GridItem","GridHeaderItem","BulletList","ul","ApyCalculatorModal","displayApr","linkLabel","linkHref","earningTokenSymbol","isFarm","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","textTransform","freq","fee","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","preferredFarm","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","prev","CACHE_KEY","ThemeContextProvider","isDarkUserSetting","setIsDark","light","usePreviousValue","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","refresh","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridTemplateRows","userSelect","disabled","maxAmountSpend","greaterThan","ens","resolvedContentHash","useENSContentHash","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","Latinise","latin_map","τ","Τ","latinise","ZERO","useMintState","ConfirmAddModalBottom","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","history","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","txHash","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","my","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginBottom","showUnwrapped","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","Outer","Inner","PageHeader","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","FlexLayout","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","option","selectedIndex","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","isActive","opacity","currencyKey","StyledBalanceText","Text","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","inputRef","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","Footer","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","ButtonMenu","Manage","showLists","setShowLists","onItemClick","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","InputWrapper","SearchInput","onChangeCallback","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","on","removeListener","debouncedState","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","resolve","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","reject","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","ViewMode","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","GlobalStyle","createGlobalStyle","icon","Menu","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","PageLoader","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","createBrowserHistory","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","onPresentApyModal","PromotedGradient","StyledCard","isPromoted","isDesktop","StyledCardInner","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CakeVaultTokenPairImage","CardHeader","StyledCardHeader","isStaking","isCakePool","useLastUpdated","lastUpdated","setStateLastUpdated","previousLastUpdated","setLastUpdated","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","cakeContract","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","endIcon","spin","StyledLink","NotEnoughTokensModal","gradients","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","floor","currencyValue","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","days","hours","minutes","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","stakingTokenSymbol","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","lte","withdrawAll","handleDeposit","log","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isXl","useMatchBreakpoints","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","PoolTabButtons","stakedOnly","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","isXs","isSm","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","BaseCell","CellContent","StyledCell","NameCell","hasVaultShares","showStakedTag","showSubtitle","HelpIconWrapper","EarningsCell","labelText","Apr","showIcon","openRoiModal","md","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","lineHeight","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","Divider","backgroundDisabled","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","CardLayout","PoolControls","SearchSortContainer","ControlStretch","AutoClaimContent","AutoTextContent","h4","AutoImgContent","img","AutoBalanceCard","h1","AutoActionCard","InfoContent","InfoText","ActionButton","button","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","sortOption","setSortOption","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","showFinishedPools","fontWeight","onPresentBountyModal","poolsToShow","chosenPools","lowercaseQuery","poolsToSort","orderBy","sortPools","cardLayout","tableLayout","paddingBottom","backgroundSize","backgroundColor","autoClaimImg","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","radii","default","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","TokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","el","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","Farms","lazy","FarmAuction","NotFound","Pool","PoolFinder","RemoveLiquidity","Global","exact","strict","component","iterations","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ce322857.chunk.js","sourcesContent":["import { EN } from 'config/localization/languages'\r\n\r\nconst publicUrl = process.env.PUBLIC_URL\r\n\r\nexport const LS_KEY = 'pancakeswap_language'\r\n\r\nexport const fetchLocale = async (locale) => {\r\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getLanguageCodeFromLS = () => {\r\n  try {\r\n    const codeFromStorage = localStorage.getItem(LS_KEY)\r\n\r\n    return codeFromStorage || EN.locale\r\n  } catch {\r\n    return EN.locale\r\n  }\r\n}\r\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\r\nimport { Language } from '@pancakeswap/uikit'\r\nimport { EN, languages } from 'config/localization/languages'\r\nimport translations from 'config/localization/translations.json'\r\nimport { ContextApi, ContextData, ProviderState } from './types'\r\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\r\n\r\nconst initialState: ProviderState = {\r\n  isFetching: true,\r\n  currentLanguage: EN,\r\n}\r\n\r\n// Export the translations directly\r\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\r\nlanguageMap.set(EN.locale, translations)\r\n\r\nexport const LanguageContext = createContext<ContextApi>(undefined)\r\n\r\nexport const LanguageProvider: React.FC = ({ children }) => {\r\n  const [state, setState] = useState<ProviderState>(() => {\r\n    const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n    return {\r\n      ...initialState,\r\n      currentLanguage: languages[codeFromStorage],\r\n    }\r\n  })\r\n  const { currentLanguage } = state\r\n\r\n  useEffect(() => {\r\n    const fetchInitialLocales = async () => {\r\n      const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n      if (codeFromStorage !== EN.locale) {\r\n        const enLocale = languageMap.get(EN.locale)\r\n        const currentLocale = await fetchLocale(codeFromStorage)\r\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\r\n      }\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n      }))\r\n    }\r\n\r\n    fetchInitialLocales()\r\n  }, [setState])\r\n\r\n  const setLanguage = async (language: Language) => {\r\n    if (!languageMap.has(language.locale)) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: true,\r\n      }))\r\n\r\n      const locale = await fetchLocale(language.locale)\r\n      const enLocale = languageMap.get(EN.locale)\r\n\r\n      // Merge the EN locale to ensure that any locale fetched has all the keys\r\n      languageMap.set(language.locale, { ...enLocale, ...locale })\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    } else {\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    }\r\n  }\r\n\r\n  const translate = useCallback(\r\n    (key: string, data?: ContextData) => {\r\n      const translationSet = languageMap.has(currentLanguage.locale)\r\n        ? languageMap.get(currentLanguage.locale)\r\n        : languageMap.get(EN.locale)\r\n      const translatedText = translationSet[key] || key\r\n\r\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\r\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\r\n\r\n      if (includesVariable && data) {\r\n        let interpolatedText = translatedText\r\n        Object.keys(data).forEach((dataKey) => {\r\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\r\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\r\n        })\r\n\r\n        return interpolatedText\r\n      }\r\n\r\n      return translatedText\r\n    },\r\n    [currentLanguage],\r\n  )\r\n\r\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\r\n}\r\n","import { useContext } from 'react'\r\nimport { LanguageContext } from './Provider'\r\n\r\nconst useTranslation = () => {\r\n  const languageContext = useContext(LanguageContext)\r\n\r\n  if (languageContext === undefined) {\r\n    throw new Error('Language context is undefined')\r\n  }\r\n\r\n  return languageContext\r\n}\r\n\r\nexport default useTranslation\r\n","import styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst Row = styled(Box) <{\r\n  width?: string\r\n  align?: string\r\n  justify?: string\r\n  padding?: string\r\n  border?: string\r\n  borderRadius?: string\r\n}>`\r\n  width: ${({ width }) => width ?? '100%'};\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => align ?? 'center'};\r\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  background:transparent;\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row) <{ gap?: string; justify?: string }>`\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row) <{ gap?: string; justify?: string }>`\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`\r\n\r\nexport default Row\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  CURRENCY_A = 'CURRENCY_A',\r\n  CURRENCY_B = 'CURRENCY_B',\r\n}\r\n\r\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\r\nexport const resetMintState = createAction<void>('mint/resetMintState')\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  INPUT = 'INPUT',\r\n  OUTPUT = 'OUTPUT',\r\n}\r\n\r\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\r\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\r\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\r\nexport const replaceSwapState = createAction<{\r\n  field: Field\r\n  typedValue: string\r\n  inputCurrencyId?: string\r\n  outputCurrencyId?: string\r\n  recipient: string | null\r\n}>('swap/replaceSwapState')\r\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport { ChainId } from '@pancakeswap/sdk'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\r\n\r\n/**\r\n * Provides a web3 provider with or without user's signer\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\r\n  const { library, chainId, ...web3React } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setprovider(library || simpleRpcProvider)\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return { library: provider, chainId: chainId ?? ChainId.TESTNET, ...web3React }\r\n}\r\n\r\nexport default useActiveWeb3React\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport addresses from 'config/constants/contracts'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Address } from 'config/constants/types'\r\n\r\nexport const getAddress = (address: Address): string => {\r\n  const chainId = addresses.networkId;\r\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\r\n}\r\nexport const getFactoryAddress = () => {\r\n  return getAddress(addresses.factory)\r\n}\r\nexport const getCakeAddress = () => {\r\n  return getAddress(tokens.pcn.address)\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return getAddress(addresses.masterChef)\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return getAddress(addresses.multiCall)\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return getAddress(tokens.wcxs.address)\r\n}\r\nexport const getLotteryV2Address = () => {\r\n  return getAddress(addresses.lotteryV2)\r\n}\r\nexport const getPancakeProfileAddress = () => {\r\n  return getAddress(addresses.pancakeProfile)\r\n}\r\nexport const getPancakeRabbitsAddress = () => {\r\n  return getAddress(addresses.pancakeRabbits)\r\n}\r\nexport const getBunnyFactoryAddress = () => {\r\n  return getAddress(addresses.bunnyFactory)\r\n}\r\nexport const getClaimRefundAddress = () => {\r\n  return getAddress(addresses.claimRefund)\r\n}\r\nexport const getPointCenterIfoAddress = () => {\r\n  return getAddress(addresses.pointCenterIfo)\r\n}\r\nexport const getBunnySpecialAddress = () => {\r\n  return getAddress(addresses.bunnySpecial)\r\n}\r\nexport const getTradingCompetitionAddress = () => {\r\n  return getAddress(addresses.tradingCompetition)\r\n}\r\nexport const getEasterNftAddress = () => {\r\n  return getAddress(addresses.easterNft)\r\n}\r\nexport const getCakeVaultAddress = () => {\r\n  return getAddress(addresses.cakeVault)\r\n}\r\nexport const getPredictionsAddress = () => {\r\n  return getAddress(addresses.predictions)\r\n}\r\nexport const getChainlinkOracleAddress = () => {\r\n  return getAddress(addresses.chainlinkOracle)\r\n}\r\nexport const getBunnySpecialCakeVaultAddress = () => {\r\n  return getAddress(addresses.bunnySpecialCakeVault)\r\n}\r\nexport const getBunnySpecialPredictionAddress = () => {\r\n  return getAddress(addresses.bunnySpecialPrediction)\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\nexport const ColumnCenter = styled(Column)`\r\n  width: 100%;\r\n  align-items: center;\r\n`\r\n\r\nexport const AutoColumn = styled.div<{\r\n  gap?: 'sm' | 'md' | 'lg' | string\r\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\r\n}>`\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\r\n  justify-items: ${({ justify }) => justify && justify};\r\n`\r\n\r\nexport default Column\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport { BIG_TEN } from './bigNumber'\r\n\r\n/**\r\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\r\n */\r\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\r\n}\r\n\r\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\r\n}\r\n\r\n/**\r\n * This function is not really necessary but is used throughout the site.\r\n */\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  return getBalanceAmount(balance, decimals).toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\r\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\r\n}\r\n\r\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\r\n  const options = {\r\n    minimumFractionDigits: minPrecision,\r\n    maximumFractionDigits: maxPrecision,\r\n  }\r\n  return number.toLocaleString(undefined, options)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object\r\n * Note: does NOT round\r\n */\r\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\r\n  return formatUnits(number.sub(remainder), decimals)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\r\n * Note: rounds\r\n */\r\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const formattedString = formatUnits(number, decimals)\r\n  return (+formattedString).toFixed(displayDecimals)\r\n}\r\n\r\n/**\r\n * Formats a FixedNumber like BigNumber\r\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\r\n */\r\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\r\n  // Remove decimal\r\n  const [leftSide] = number.toString().split('.')\r\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { SerializedBigNumber } from 'state/types'\r\n\r\nexport const BIG_ZERO = new BigNumber(0)\r\nexport const BIG_ONE = new BigNumber(1)\r\nexport const BIG_NINE = new BigNumber(9)\r\nexport const BIG_TEN = new BigNumber(10)\r\n\r\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\r\n  ethersToBigNumber(ethersBn).toJSON()\r\n\r\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\r\n","import { ChainId } from '@pancakeswap/sdk'\r\n\r\nexport default {\r\n  networkId: process.env.REACT_APP_CHAIN_ID,\r\n  factory: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_FACTORY,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_FACTORY,\r\n  },\r\n  masterChef: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_MASTERCHEF,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_MASTERCHEF,\r\n  },\r\n  sousChef: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_SOUSCHEF,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_SOUSCHEF,\r\n  },\r\n  lotteryV2: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_LOTTERY,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_LOTTERY,\r\n  },\r\n  multiCall: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_MULTICALL,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_MULTICALL,\r\n  },\r\n  pancakeProfile: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_PANCAKEPROFILE,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_PANCAKEPROFILE,\r\n  },\r\n  pancakeRabbits: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_PANCAKERABBITS,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_PANCAKERABBITS,\r\n  },\r\n  bunnyFactory: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_BUNNYFACTORY,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_BUNNYFACTORY,\r\n  },\r\n  claimRefund: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_CLAIMREFUND,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_CLAIMREFUND,\r\n  },\r\n  pointCenterIfo: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_POINTCENTERIFO,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_POINTCENTERIFO,\r\n  },\r\n  bunnySpecial: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_BUNNYSPECIAL,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_BUNNYSPECIAL,\r\n  },\r\n  tradingCompetition: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_TRADINGCOMPETITION,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_TRADINGCOMPETITION,\r\n  },\r\n  easterNft: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_EASERNFT,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_EASERNFT,\r\n  },\r\n  cakeVault: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_CAKEFAULT,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_CAKEFAULT,\r\n  },\r\n  predictions: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_PREDICTIONS,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_PREDICTIONS,\r\n  },\r\n  chainlinkOracle: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_CHAINLINKORACLE,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_CHAINLINKORACLE,\r\n  },\r\n  bunnySpecialCakeVault: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_BUNNYSPECIALCAKEFAULT,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_BUNNYSPECIALCAKEFAULT,\r\n  },\r\n  bunnySpecialPrediction: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_BUNNYSPECIALPREDICTION,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_BUNNYSPECIALPREDICTION,\r\n  },\r\n\r\n  // tokens\r\n\r\n  wcxs: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_WCXS,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_WCXS,\r\n  },\r\n  busd: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_BUSD,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_BUSD,\r\n  },\r\n  pcn: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_PCN,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_PCN,\r\n  },\r\n  usdt: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_USDT,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_USDT,\r\n  },\r\n  corn: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_CORN,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_CORN,\r\n  },\r\n  nextep: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_NEXTEP,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_NEXTEP,\r\n  },\r\n  cxsPcnLp: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_CXSPCNLP,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_CXSPCNLP,\r\n  },\r\n  cxsBusdLp: {\r\n    [ChainId.TESTNET]: process.env.REACT_APP_CXSBUSDLP,\r\n    [ChainId.MAINNET]: process.env.REACT_APP_CXSBUSDLP,\r\n  }\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { getAddress } from '@ethersproject/address'\r\nimport { AddressZero } from '@ethersproject/constants'\r\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\r\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\r\nimport { ROUTER_ADDRESS } from '../config/constants'\r\nimport { BASE_BSC_SCAN_URLS } from '../config'\r\nimport { TokenAddressMap } from '../state/lists/hooks'\r\n\r\n// returns the checksummed address if the address is valid, otherwise returns false\r\nexport function isAddress(value: any): string | false {\r\n  try {\r\n    return getAddress(value)\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\nexport function getBscScanLink(\r\n  data: string | number,\r\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\r\n  chainId: ChainId = ChainId.MAINNET,\r\n): string {\r\n  switch (type) {\r\n    case 'transaction': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\r\n    }\r\n    case 'token': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\r\n    }\r\n    case 'block': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\r\n    }\r\n    case 'countdown': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\r\n    }\r\n    default: {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\r\n    }\r\n  }\r\n}\r\n\r\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\r\nexport function shortenAddress(address: string, chars = 4): string {\r\n  const parsed = isAddress(address)\r\n  if (!parsed) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`)\r\n  }\r\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\r\n}\r\n\r\n// add 10%\r\nexport function calculateGasMargin(value: BigNumber): BigNumber {\r\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\r\n}\r\n\r\n// converts a basis points value to a sdk percent\r\nexport function basisPointsToPercent(num: number): Percent {\r\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\r\n}\r\n\r\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\r\n  if (slippage < 0 || slippage > 10000) {\r\n    throw Error(`Unexpected slippage value: ${slippage}`)\r\n  }\r\n  return [\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\r\n  ]\r\n}\r\n\r\n// account is not optional\r\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\r\n  return library.getSigner(account).connectUnchecked()\r\n}\r\n\r\n// account is optional\r\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\r\n  return account ? getSigner(library, account) : library\r\n}\r\n\r\n// account is optional\r\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\r\n  if (!isAddress(address) || address === AddressZero) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`)\r\n  }\r\n\r\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\r\n}\r\n\r\n// account is optional\r\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\r\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\r\n}\r\n\r\nexport function escapeRegExp(string: string): string {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\r\n}\r\n\r\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\r\n  if (currency === ETHER) return true\r\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\r\n}\r\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\r\nimport { BUSD, PCN, WCXS, } from './tokens'\r\n\r\nexport const ROUTER_ADDRESS = process.env.REACT_APP_ROUTER;\r\n\r\n// a list of tokens by chain\r\ntype ChainTokenList = {\r\n  readonly [chainId in ChainId]: Token[]\r\n}\r\n\r\n// used to construct intermediary pairs for trading\r\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\r\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], PCN[ChainId.MAINNET], BUSD[ChainId.MAINNET]],\r\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], PCN[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\r\n}\r\n\r\n/**\r\n * Addittional bases for specific tokens\r\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\r\n */\r\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {},\r\n}\r\n\r\n/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\r\n */\r\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {},\r\n}\r\n\r\n// used for display in the default list when adding liquidity\r\nexport const SUGGESTED_BASES: ChainTokenList = {\r\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], PCN[ChainId.MAINNET], WCXS],\r\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], PCN[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\r\n}\r\n\r\n// used to construct the list of all pairs we consider by default in the frontend\r\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\r\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], BUSD[ChainId.MAINNET]],\r\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], PCN[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\r\n}\r\n\r\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\r\n  [ChainId.MAINNET]: [\r\n    [PCN[ChainId.MAINNET], WCXS[ChainId.MAINNET]],\r\n    [BUSD[ChainId.MAINNET], WCXS[ChainId.MAINNET]]\r\n  ],\r\n}\r\n\r\nexport const NetworkContextName = 'NETWORK'\r\n\r\n// default allowed slippage, in bips\r\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\r\n// 20 minutes, denominated in seconds\r\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\r\n\r\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\r\n\r\n// one basis point\r\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\r\nexport const BIPS_BASE = JSBI.BigInt(10000)\r\n// used for warning states\r\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\r\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\r\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\r\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\r\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\r\n// for non expert mode disable swaps above this\r\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\r\n\r\n// used to ensure the user doesn't send so much BNB so they end up with <.01\r\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\r\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\r\n\r\nexport const ZERO_PERCENT = new Percent('0')\r\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\r\n\r\n// SDN OFAC addresses\r\nexport const BLOCKED_ADDRESSES: string[] = [\r\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\r\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\r\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\r\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\r\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\r\n]\r\n\r\nexport { default as farmsConfig } from './farms'\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import { useEffect, useMemo } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { ethers } from 'ethers'\r\nimport { minBy, orderBy } from 'lodash'\r\nimport { useAppDispatch } from 'state'\r\nimport { farmsConfig } from 'config/constants'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { getBalanceAmount, formatBigNumber } from 'utils/formatBalance'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\r\nimport tokens from 'config/constants/tokens'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport cakeAbi from 'config/abi/cake.json'\r\nimport factoryAbi from 'config/abi/factory.json'\r\nimport lpAbi from 'config/abi/lpToken.json'\r\nimport { getMasterchefContract, getFactoryContract } from 'utils/contractHelpers';\r\n\r\nimport {\r\n  fetchFarmsPublicDataAsync,\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  fetchCakeVaultPublicData,\r\n  fetchCakeVaultUserData,\r\n  fetchCakeVaultFees,\r\n  setBlock,\r\n} from './actions'\r\nimport {\r\n  State,\r\n  Farm,\r\n  Pool,\r\n  ProfileState,\r\n  AchievementState,\r\n  FarmsState,\r\n  NodeRound,\r\n  ReduxNodeLedger,\r\n  NodeLedger,\r\n  ReduxNodeRound,\r\n} from './types'\r\nimport { fetchProfile } from './profile'\r\nimport { transformPool } from './pools/helpers'\r\nimport { fetchPoolsStakingLimitsAsync } from './pools'\r\nimport { fetchFarmUserDataAsync, nonArchivedFarms } from './farms'\r\n\r\n\r\nexport const usePollFarmsData = (includeArchive = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\r\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\r\n\r\n    dispatch(fetchFarmsPublicDataAsync(pids))\r\n\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\r\n    }\r\n  }, [includeArchive, dispatch, slowRefresh, account])\r\n}\r\n\r\n/**\r\n * Fetches the \"core\" farm data used globally\r\n * 251 = CAKE-BNB LP\r\n * 252 = BUSD-BNB LP\r\n */\r\nexport const usePollCoreFarmData = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync([1, 2]))\r\n  }, [dispatch, fastRefresh])\r\n}\r\n\r\nexport const usePollBlockNumber = () => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\r\n      dispatch(setBlock(blockNumber))\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [dispatch])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): FarmsState => {\r\n  const farms = useSelector((state: State) => state.farms)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\r\n  }\r\n}\r\n\r\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\r\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\r\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\r\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\r\n  return filteredFarm\r\n}\r\n\r\n// Return the base token price for a farm, from a given pid\r\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\r\n  const farm = useFarmFromPid(pid)\r\n  return farm && new BigNumber(farm.token.busdPrice)\r\n}\r\n\r\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber => {\r\n  const tokenFarm = useFarmFromTokenSymbol(tokenSymbol)\r\n  const tokenPrice = useBusdPriceFromPid(tokenFarm?.pid)\r\n  return tokenPrice\r\n}\r\n\r\nexport const useLpTokenPrice = (symbol: string) => {\r\n  const farm = useFarmFromLpSymbol(symbol)\r\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\r\n  let lpTokenPrice = BIG_ZERO\r\n\r\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\r\n    // Total value of base token in LP\r\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\r\n    // Double it to get overall value in LP\r\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\r\n    // Divide total value of all tokens, by the number of LP tokens\r\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\r\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\r\n  }\r\n  return lpTokenPrice\r\n}\r\n\r\n// Pools\r\n\r\nexport const useFetchPublicPoolsData = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchPoolsPublicData = async () => {\r\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\r\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\r\n    }\r\n\r\n    fetchPoolsPublicData()\r\n    dispatch(fetchPoolsStakingLimitsAsync())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\nexport const getCirculationgSupply = async () => {\r\n  const cakeVault = getMasterchefContract()\r\n  const totalSupplyCall = { address: tokens.pcn.address[process.env.REACT_APP_CHAIN_ID], name: 'totalSupply' }\r\n  const burnedTokenCall = {\r\n    address: tokens.pcn.address[process.env.REACT_APP_CHAIN_ID],\r\n    name: 'balanceOf',\r\n    params: ['0x000000000000000000000000000000000000dEaD'],\r\n  }\r\n  const [tokenDataResultRaw] = await Promise.all([\r\n    multicallv2(cakeAbi, [totalSupplyCall, burnedTokenCall], {\r\n      requireSuccess: false,\r\n    })\r\n  ])\r\n  const [totalSupply, burned] = tokenDataResultRaw.flat()\r\n\r\n  const totalBurned = burned;\r\n  const circulating = totalSupply.sub(totalBurned);\r\n  const circulatingSupply = await formatBigNumber(circulating);\r\n\r\n  return { circulatingSupply, totalBurned };\r\n}\r\n\r\nexport const getAllPairs = async () => {\r\n  const factory = getFactoryContract();\r\n  const pairsLength = await factory.allPairsLength();\r\n  const pairInfoCall = [];\r\n  const tokenArray = [];\r\n  for (let i = 0; i < pairsLength; i++) {\r\n    pairInfoCall.push({\r\n      address: factory.address,\r\n      name: 'allPairs',\r\n      params: [i],\r\n    })\r\n  }\r\n  const [DataResult] = await Promise.all([\r\n    multicallv2(factoryAbi, pairInfoCall, {\r\n      requireSuccess: false,\r\n    })\r\n  ])\r\n  for (let i = 0; i < pairsLength; i++) {\r\n    tokenArray.push({\r\n      address: DataResult[i][0],\r\n      name: 'token0',\r\n    })\r\n    tokenArray.push({\r\n      address: DataResult[i][0],\r\n      name: 'token1',\r\n    })\r\n  }\r\n  const [tokenResult] = await Promise.all([\r\n    multicallv2(lpAbi, tokenArray, {\r\n      requireSuccess: false,\r\n    })\r\n  ])\r\n  let tokensOfDex = [];\r\n  tokenResult.forEach((element) => {\r\n    tokensOfDex.push(...element)\r\n  });\r\n  tokensOfDex = [...new Set(tokensOfDex)];\r\n\r\n  return { pairsLength, tokensOfDex };\r\n}\r\n\r\nexport const usePools = (account: string): { pools: Pool[]; userDataLoaded: boolean } => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useAppDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\r\n    pools: state.pools.data,\r\n    userDataLoaded: state.pools.userDataLoaded,\r\n  }))\r\n  return { pools: pools.map(transformPool), userDataLoaded }\r\n}\r\n\r\nexport const usePoolFromPid = (sousId: number): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return transformPool(pool)\r\n}\r\n\r\nexport const useFetchCakeVault = () => {\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultPublicData())\r\n  }, [dispatch, fastRefresh])\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultUserData({ account }))\r\n  }, [dispatch, fastRefresh, account])\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultFees())\r\n  }, [dispatch])\r\n}\r\n\r\nexport const useCakeVault = () => {\r\n  const {\r\n    totalShares: totalSharesAsString,\r\n    pricePerFullShare: pricePerFullShareAsString,\r\n    totalCakeInVault: totalCakeInVaultAsString,\r\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\r\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\r\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\r\n    userData: {\r\n      isLoading,\r\n      userShares: userSharesAsString,\r\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\r\n      lastDepositedTime,\r\n      lastUserActionTime,\r\n    },\r\n  } = useSelector((state: State) => state.pools.cakeVault)\r\n\r\n  const estimatedCakeBountyReward = useMemo(() => {\r\n    return new BigNumber(estimatedCakeBountyRewardAsString)\r\n  }, [estimatedCakeBountyRewardAsString])\r\n\r\n  const totalPendingCakeHarvest = useMemo(() => {\r\n    return new BigNumber(totalPendingCakeHarvestAsString)\r\n  }, [totalPendingCakeHarvestAsString])\r\n\r\n  const totalShares = useMemo(() => {\r\n    return new BigNumber(totalSharesAsString)\r\n  }, [totalSharesAsString])\r\n\r\n  const pricePerFullShare = useMemo(() => {\r\n    return new BigNumber(pricePerFullShareAsString)\r\n  }, [pricePerFullShareAsString])\r\n\r\n  const totalCakeInVault = useMemo(() => {\r\n    return new BigNumber(totalCakeInVaultAsString)\r\n  }, [totalCakeInVaultAsString])\r\n\r\n  const userShares = useMemo(() => {\r\n    return new BigNumber(userSharesAsString)\r\n  }, [userSharesAsString])\r\n\r\n  const cakeAtLastUserAction = useMemo(() => {\r\n    return new BigNumber(cakeAtLastUserActionAsString)\r\n  }, [cakeAtLastUserActionAsString])\r\n\r\n  return {\r\n    totalShares,\r\n    pricePerFullShare,\r\n    totalCakeInVault,\r\n    estimatedCakeBountyReward,\r\n    totalPendingCakeHarvest,\r\n    fees: {\r\n      performanceFee,\r\n      callFee,\r\n      withdrawalFee,\r\n      withdrawalFeePeriod,\r\n    },\r\n    userData: {\r\n      isLoading,\r\n      userShares,\r\n      cakeAtLastUserAction,\r\n      lastDepositedTime,\r\n      lastUserActionTime,\r\n    },\r\n  }\r\n}\r\n\r\n// Profile\r\n\r\nexport const useFetchProfile = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProfile(account))\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\r\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\r\n}\r\n\r\n\r\nexport const useAchievements = () => {\r\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\r\n  return achievements\r\n}\r\n\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  const bnbBusdFarm = useFarmFromPid(2)\r\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  const cakeBnbFarm = useFarmFromPid(1)\r\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\r\n}\r\n\r\n// Block\r\nexport const useBlock = () => {\r\n  return useSelector((state: State) => state.block)\r\n}\r\n\r\nexport const useInitialBlock = () => {\r\n  return useSelector((state: State) => state.block.initialBlock)\r\n}\r\n\r\nexport const useGetIsClaimable = (epoch) => {\r\n  const claimableStatuses = useSelector((state: State) => state.predictions.claimableStatuses)\r\n  return claimableStatuses[epoch] || false\r\n}\r\n\r\n/**\r\n * Used to get the range of rounds to poll for\r\n */\r\nexport const useGetEarliestEpoch = () => {\r\n  return useSelector((state: State) => {\r\n    const earliestRound = minBy(Object.values(state.predictions.rounds), 'epoch')\r\n    return earliestRound?.epoch\r\n  })\r\n}\r\n\r\nexport const useIsHistoryPaneOpen = () => {\r\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\r\n}\r\n\r\nexport const useIsChartPaneOpen = () => {\r\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\r\n}\r\n\r\nexport const useGetCurrentEpoch = () => {\r\n  return useSelector((state: State) => state.predictions.currentEpoch)\r\n}\r\n\r\nexport const useGetIntervalBlocks = () => {\r\n  return useSelector((state: State) => state.predictions.intervalBlocks)\r\n}\r\n\r\nexport const useGetBufferBlocks = () => {\r\n  return useSelector((state: State) => state.predictions.bufferBlocks)\r\n}\r\n\r\nexport const useGetTotalIntervalBlocks = () => {\r\n  const intervalBlocks = useGetIntervalBlocks()\r\n  const bufferBlocks = useGetBufferBlocks()\r\n  return intervalBlocks + bufferBlocks\r\n}\r\n\r\nexport const useGetPredictionsStatus = () => {\r\n  return useSelector((state: State) => state.predictions.status)\r\n}\r\n\r\nexport const useGetCurrentRoundBlockNumber = () => {\r\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\r\n}\r\n\r\nexport const useGetMinBetAmount = () => {\r\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\r\n  return useMemo(() => ethers.BigNumber.from(minBetAmount), [minBetAmount])\r\n}\r\n\r\nexport const useGetRewardRate = () => {\r\n  const rewardRate = useSelector((state: State) => state.predictions.rewardRate)\r\n  return rewardRate / 100\r\n}\r\n\r\nexport const useGetIsFetchingHistory = () => {\r\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\r\n}\r\n\r\nexport const useGetHistory = () => {\r\n  return useSelector((state: State) => state.predictions.history)\r\n}\r\n\r\nexport const useGetHistoryByAccount = (account: string) => {\r\n  const bets = useGetHistory()\r\n  return bets ? bets[account] : []\r\n}\r\n\r\nexport const useGetLedgerByRoundId = (account: string, roundId: string) => {\r\n  const ledgers = useSelector((state: State) => state.predictions.ledgers)\r\n\r\n  if (!ledgers[account]) {\r\n    return null\r\n  }\r\n\r\n  if (!ledgers[account][roundId]) {\r\n    return null\r\n  }\r\n\r\n  return ledgers[account][roundId]\r\n}\r\n\r\nexport const useGetLastOraclePrice = () => {\r\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\r\n  return useMemo(() => {\r\n    return ethers.BigNumber.from(lastOraclePrice)\r\n  }, [lastOraclePrice])\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport MULTICALL_ABI from './abi.json';\r\nimport ContractAddress from '../contracts';\r\n\r\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\r\n  [ChainId.MAINNET]: String(ContractAddress.multiCall[ChainId.MAINNET]),\r\n  [ChainId.TESTNET]: String(ContractAddress.multiCall[ChainId.TESTNET]),\r\n}\r\n\r\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\r\n","import { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport {\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getIfoV1Contract,\r\n  getIfoV2Contract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n  getTradingCompetitionContract,\r\n  getEasterNftContract,\r\n  getErc721Contract,\r\n  getCakeVaultContract,\r\n  getPredictionsContract,\r\n  getChainlinkOracleContract,\r\n  getSouschefV2Contract,\r\n  getLotteryV2Contract,\r\n  getBunnySpecialCakeVaultContract,\r\n  getBunnySpecialPredictionContract,\r\n} from 'utils/contractHelpers'\r\n\r\n// Imports below migrated from Exchange useContract.ts\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { ChainId, WETH } from '@pancakeswap/sdk'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\r\nimport ENS_ABI from '../config/abi/ens-registrar.json'\r\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\r\nimport ERC20_ABI from '../config/abi/erc20.json'\r\nimport WETH_ABI from '../config/abi/weth.json'\r\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall'\r\nimport { getContract } from '../utils'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoV1Contract = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\nexport const useIfoV2Contract = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\n/**\r\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\r\n */\r\nexport const useERC721 = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useLotteryV2Contract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\r\n}\r\n\r\nexport const useSousChefV2 = (id) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useTradingCompetitionContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useEasterNftContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useCakeVaultContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const usePredictionsContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useChainlinkOracleContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useSpecialBunnyCakeVaultContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useSpecialBunnyPredictionContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\r\n}\r\n\r\n// Code below migrated from Exchange useContract.ts\r\n\r\n// returns null on errors\r\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\r\n  const { library, account } = useActiveWeb3React()\r\n\r\n  return useMemo(() => {\r\n    if (!address || !ABI || !library) return null\r\n    try {\r\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\r\n    } catch (error) {\r\n      console.error('Failed to get contract', error)\r\n      return null\r\n    }\r\n  }, [address, ABI, library, withSignerIfPossible, account])\r\n}\r\n\r\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  let address: string | undefined\r\n  if (chainId) {\r\n    // eslint-disable-next-line default-case\r\n    switch (chainId) {\r\n      case ChainId.MAINNET:\r\n      case ChainId.TESTNET:\r\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\r\n        break\r\n    }\r\n  }\r\n  return useContract(address, ENS_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useMulticallContract(): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value: number\r\n  decimals?: number\r\n  unit?: string\r\n  isDisabled?: boolean\r\n  prefix?: string\r\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\r\n}\r\n\r\nconst Balance: React.FC<BalanceProps> = ({\r\n  value,\r\n  color = 'text',\r\n  decimals = 3,\r\n  isDisabled = false,\r\n  unit,\r\n  prefix,\r\n  onClick,\r\n  ...props\r\n}) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n\r\n  return (\r\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\r\n      {prefix && <span>{prefix}</span>}\r\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\r\n      {unit && <span>{unit}</span>}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import { ChainId, Token } from '@pancakeswap/sdk';\r\nimport ContractAddress from './contracts';\r\n\r\nexport const PCN: { [chainId: number]: Token } = {\r\n  [ChainId.MAINNET]: new Token(\r\n    ChainId.MAINNET,\r\n    ContractAddress.pcn[ChainId.MAINNET],\r\n    18,\r\n    'PCN',\r\n    'Popcorn Token',\r\n  ),\r\n  [ChainId.TESTNET]: new Token(\r\n    ChainId.TESTNET,\r\n    ContractAddress.pcn[ChainId.TESTNET],\r\n    18,\r\n    'PCN',\r\n    'Popcorn Token',\r\n  ),\r\n}\r\nexport const BUSD: { [chainId: number]: Token } = {\r\n  [ChainId.MAINNET]: new Token(\r\n    ChainId.MAINNET,\r\n    ContractAddress.busd[ChainId.MAINNET],\r\n    18,\r\n    'USDT',\r\n    'Pegged USDT',\r\n  ),\r\n  [ChainId.TESTNET]: new Token(\r\n    ChainId.TESTNET,\r\n    ContractAddress.busd[ChainId.TESTNET],\r\n    18,\r\n    'USDT',\r\n    'Pegged USDT',\r\n  ),\r\n}\r\n\r\nexport const WCXS = new Token(ChainId.MAINNET, ContractAddress.wcxs[ChainId.MAINNET], 18, 'WCXS', 'Wrapped CXS')\r\n\r\n\r\nconst tokens = {\r\n  cxs: {\r\n    symbol: 'CXS',\r\n    projectLink: 'https://neonlink.io/',\r\n  },\r\n  pcn: {\r\n    symbol: 'PCN',\r\n    address: {\r\n      [ChainId.MAINNET]: ContractAddress.pcn[ChainId.MAINNET],\r\n      [ChainId.TESTNET]: ContractAddress.pcn[ChainId.TESTNET],\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dex.neonlink.io/',\r\n  },\r\n  wcxs: {\r\n    symbol: 'WCXS',\r\n    address: {\r\n      [ChainId.MAINNET]: ContractAddress.wcxs[ChainId.MAINNET],\r\n      [ChainId.TESTNET]: ContractAddress.wcxs[ChainId.TESTNET],\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dex.neonlink.io/',\r\n  },\r\n  busd: {\r\n    symbol: 'USDT',\r\n    address: {\r\n      [ChainId.MAINNET]: ContractAddress.busd[ChainId.MAINNET],\r\n      [ChainId.TESTNET]: ContractAddress.busd[ChainId.TESTNET],\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://tether.io',\r\n  },\r\n  corn: {\r\n    symbol: 'CORN',\r\n    address: {\r\n      [ChainId.MAINNET]: ContractAddress.corn[ChainId.MAINNET],\r\n      [ChainId.TESTNET]: ContractAddress.corn[ChainId.TESTNET],\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dex.neonlink.io/',\r\n  }\r\n}\r\n\r\nexport default tokens\r\n","import { ethers } from 'ethers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\n\r\n// Addresses\r\nimport {\r\n  getAddress,\r\n  getFactoryAddress,\r\n  getPancakeProfileAddress,\r\n  getPancakeRabbitsAddress,\r\n  getBunnyFactoryAddress,\r\n  getBunnySpecialAddress,\r\n  getCakeAddress,\r\n  getLotteryV2Address,\r\n  getMasterChefAddress,\r\n  getPointCenterIfoAddress,\r\n  getClaimRefundAddress,\r\n  getTradingCompetitionAddress,\r\n  getEasterNftAddress,\r\n  getCakeVaultAddress,\r\n  getPredictionsAddress,\r\n  getChainlinkOracleAddress,\r\n  getMulticallAddress,\r\n  getBunnySpecialCakeVaultAddress,\r\n  getBunnySpecialPredictionAddress,\r\n} from 'utils/addressHelpers'\r\n\r\n// ABI\r\nimport factoryABI from 'config/abi/factory.json';\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\r\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\r\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\r\nimport bep20Abi from 'config/abi/erc20.json'\r\nimport erc721Abi from 'config/abi/erc721.json'\r\nimport lpTokenAbi from 'config/abi/lpToken.json'\r\nimport cakeAbi from 'config/abi/cake.json'\r\nimport ifoV1Abi from 'config/abi/ifoV1.json'\r\nimport ifoV2Abi from 'config/abi/ifoV2.json'\r\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\r\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\nimport claimRefundAbi from 'config/abi/claimRefund.json'\r\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\r\nimport easterNftAbi from 'config/abi/easterNft.json'\r\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\r\nimport predictionsAbi from 'config/abi/predictions.json'\r\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\r\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\r\nimport { ChainLinkOracleContract, PredictionsContract } from './types'\r\n\r\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const signerOrProvider = signer ?? simpleRpcProvider\r\n  return new ethers.Contract(address, abi, signerOrProvider)\r\n}\r\n\r\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bep20Abi, address, signer)\r\n}\r\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(erc721Abi, address, signer)\r\n}\r\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(lpTokenAbi, address, signer)\r\n}\r\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(ifoV1Abi, address, signer)\r\n}\r\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(ifoV2Abi, address, signer)\r\n}\r\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  return getContract(abi, getAddress(config.contractAddress), signer)\r\n}\r\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\r\n}\r\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\r\n}\r\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(cakeAbi, getCakeAddress(), signer)\r\n}\r\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\r\n}\r\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\r\n}\r\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\r\n}\r\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\r\n}\r\nexport const getFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(factoryABI, getFactoryAddress(), signer);\r\n}\r\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(masterChef, getMasterChefAddress(), signer)\r\n}\r\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\r\n}\r\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\r\n}\r\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\r\n}\r\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\r\n}\r\n\r\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\r\n}\r\n\r\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\r\n}\r\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\r\n}\r\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\r\n}\r\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\r\n}\r\n\r\n","import { Currency } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport CurrencyLogo from './CurrencyLogo'\r\n\r\nconst Wrapper = styled.div<{ margin: boolean }>`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-right: ${({ margin }) => margin && '4px'};\r\n`\r\n\r\ninterface DoubleCurrencyLogoProps {\r\n  margin?: boolean\r\n  size?: number\r\n  currency0?: Currency\r\n  currency1?: Currency\r\n}\r\n\r\nexport default function DoubleCurrencyLogo({\r\n  currency0,\r\n  currency1,\r\n  size = 20,\r\n  margin = false,\r\n}: DoubleCurrencyLogoProps) {\r\n  return (\r\n    <Wrapper margin={margin}>\r\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\r\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\nimport Logo from './Logo'\r\n\r\nconst StyledListLogo = styled(Logo) <{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function ListLogo({\r\n  logoURI,\r\n  style,\r\n  size = '24px',\r\n  alt,\r\n}: {\r\n  logoURI: string\r\n  size?: string\r\n  style?: React.CSSProperties\r\n  alt?: string\r\n}) {\r\n  const srcs: string[] = useHttpLocations(logoURI)\r\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { parseBytes32String } from '@ethersproject/strings'\r\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { arrayify } from 'ethers/lib/utils'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport {\r\n  TokenAddressMap,\r\n  useDefaultTokenList,\r\n  useUnsupportedTokenList,\r\n  useCombinedActiveList,\r\n  useCombinedInactiveList,\r\n} from '../state/lists/hooks'\r\n\r\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\r\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\r\nimport { isAddress } from '../utils'\r\n\r\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\r\nimport { filterTokens } from '../components/SearchModal/filtering'\r\n\r\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\r\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\r\n  const { chainId } = useActiveWeb3React()\r\n  const userAddedTokens = useUserAddedTokens()\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return {}\r\n\r\n    // reduce to just tokens\r\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\r\n      newMap[address] = tokenMap[chainId][address].token\r\n      return newMap\r\n    }, {})\r\n\r\n    if (includeUserAdded) {\r\n      return (\r\n        userAddedTokens\r\n          // reduce into all ALL_TOKENS filtered by the current chain\r\n          .reduce<{ [address: string]: Token }>(\r\n            (tokenMap_, token) => {\r\n              tokenMap_[token.address] = token\r\n              return tokenMap_\r\n            },\r\n            // must make a copy because reduce modifies the map, and we do not\r\n            // want to make a copy in every iteration\r\n            { ...mapWithoutUrls },\r\n          )\r\n      )\r\n    }\r\n\r\n    return mapWithoutUrls\r\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\r\n}\r\n\r\nexport function useDefaultTokens(): { [address: string]: Token } {\r\n  const defaultList = useDefaultTokenList()\r\n  return useTokensFromMap(defaultList, false)\r\n}\r\n\r\nexport function useAllTokens(): { [address: string]: Token } {\r\n  const allTokens = useCombinedActiveList()\r\n  return useTokensFromMap(allTokens, true)\r\n}\r\n\r\nexport function useAllInactiveTokens(): { [address: string]: Token } {\r\n  // get inactive tokens\r\n  const inactiveTokensMap = useCombinedInactiveList()\r\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\r\n  // filter out any token that are on active list\r\n  const activeTokensAddresses = Object.keys(useAllTokens())\r\n  const filteredInactive = activeTokensAddresses\r\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\r\n      if (!activeTokensAddresses.includes(address)) {\r\n        newMap[address] = inactiveTokens[address]\r\n      }\r\n      return newMap\r\n    }, {})\r\n    : inactiveTokens\r\n\r\n  return filteredInactive\r\n}\r\n\r\nexport function useUnsupportedTokens(): { [address: string]: Token } {\r\n  const unsupportedTokensMap = useUnsupportedTokenList()\r\n  return useTokensFromMap(unsupportedTokensMap, false)\r\n}\r\n\r\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\r\n  const activeTokens = useAllTokens()\r\n\r\n  if (!activeTokens || !token) {\r\n    return false\r\n  }\r\n\r\n  return !!activeTokens[token.address]\r\n}\r\n\r\n// used to detect extra search results\r\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const inactiveTokens = useAllInactiveTokens()\r\n\r\n  return useMemo(() => {\r\n    if (!chainId || searchQuery === '') {\r\n      return undefined\r\n    }\r\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\r\n    return tokens\r\n  }, [chainId, inactiveTokens, searchQuery])\r\n}\r\n\r\n// Check if currency is included in custom list from user storage\r\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\r\n  const userAddedTokens = useUserAddedTokens()\r\n\r\n  if (!currency) {\r\n    return false\r\n  }\r\n\r\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\r\n}\r\n\r\n// parse a name or symbol from a token response\r\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\r\n\r\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\r\n  return str && str.length > 0\r\n    ? str\r\n    : // need to check for proper bytes string and valid terminator\r\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\r\n      ? parseBytes32String(bytes32)\r\n      : defaultValue\r\n}\r\n\r\n// undefined if invalid or does not exist\r\n// null if loading\r\n// otherwise returns the token\r\nexport function useToken(tokenAddress?: string): Token | undefined | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  const address = isAddress(tokenAddress)\r\n\r\n  const tokenContract = useTokenContract(address || undefined, false)\r\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\r\n  const token: Token | undefined = address ? tokens[address] : undefined\r\n\r\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\r\n  const tokenNameBytes32 = useSingleCallResult(\r\n    token ? undefined : tokenContractBytes32,\r\n    'name',\r\n    undefined,\r\n    NEVER_RELOAD,\r\n  )\r\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\r\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\r\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\r\n\r\n  return useMemo(() => {\r\n    if (token) return token\r\n    if (!chainId || !address) return undefined\r\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\r\n    if (decimals.result) {\r\n      return new Token(\r\n        chainId,\r\n        address,\r\n        decimals.result[0],\r\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\r\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\r\n      )\r\n    }\r\n    return undefined\r\n  }, [\r\n    address,\r\n    chainId,\r\n    decimals.loading,\r\n    decimals.result,\r\n    symbol.loading,\r\n    symbol.result,\r\n    symbolBytes32.result,\r\n    token,\r\n    tokenName.loading,\r\n    tokenName.result,\r\n    tokenNameBytes32.result,\r\n  ])\r\n}\r\n\r\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\r\n  const isBNB = currencyId?.toUpperCase() === 'CXS'\r\n  const token = useToken(isBNB ? undefined : currencyId)\r\n  return isBNB ? ETHER : token\r\n}\r\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\r\n\r\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\r\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\r\n}\r\n\r\nexport function wrappedCurrencyAmount(\r\n  currencyAmount: CurrencyAmount | undefined,\r\n  chainId: ChainId | undefined,\r\n): TokenAmount | undefined {\r\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\r\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\r\n}\r\n\r\nexport function unwrappedToken(token: Token): Currency {\r\n  if (token.equals(WETH[token.chainId])) return ETHER\r\n  return token\r\n}\r\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useBlockNumber } from '../application/hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  addMulticallListeners,\r\n  Call,\r\n  removeMulticallListeners,\r\n  parseCallKey,\r\n  toCallKey,\r\n  ListenerOptions,\r\n} from './actions'\r\n\r\nexport interface Result extends ReadonlyArray<any> {\r\n  readonly [key: string]: any\r\n}\r\n\r\ntype MethodArg = string | number | BigNumber\r\ntype MethodArgs = Array<MethodArg | MethodArg[]>\r\n\r\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\r\n\r\nfunction isMethodArg(x: unknown): x is MethodArg {\r\n  return ['string', 'number'].indexOf(typeof x) !== -1\r\n}\r\n\r\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\r\n  return (\r\n    x === undefined ||\r\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\r\n  )\r\n}\r\n\r\ninterface CallResult {\r\n  readonly valid: boolean\r\n  readonly data: string | undefined\r\n  readonly blockNumber: number | undefined\r\n}\r\n\r\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\r\n\r\n// use this options object\r\nexport const NEVER_RELOAD: ListenerOptions = {\r\n  blocksPerFetch: Infinity,\r\n}\r\n\r\n// the lowest level call for subscribing to contract data\r\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\r\n\r\n  const chainId = 787;\r\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\r\n    (state) => state.multicall.callResults,\r\n  )\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const serializedCallKeys: string = useMemo(\r\n    () =>\r\n      JSON.stringify(\r\n        calls\r\n          ?.filter((c): c is Call => Boolean(c))\r\n          ?.map(toCallKey)\r\n          ?.sort() ?? [],\r\n      ),\r\n    [calls],\r\n  )\r\n\r\n  // update listeners when there is an actual change that persists for at least 100ms\r\n  useEffect(() => {\r\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\r\n    if (!chainId || callKeys.length === 0) return undefined\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    const calls = callKeys.map((key) => parseCallKey(key))\r\n\r\n    dispatch(\r\n      addMulticallListeners({\r\n        chainId,\r\n        calls,\r\n        options,\r\n      }),\r\n    )\r\n\r\n    return () => {\r\n      dispatch(\r\n        removeMulticallListeners({\r\n          chainId,\r\n          calls,\r\n          options,\r\n        }),\r\n      )\r\n    }\r\n  }, [chainId, dispatch, options, serializedCallKeys])\r\n\r\n  return useMemo(\r\n    () =>\r\n      calls.map<CallResult>((call) => {\r\n        if (!chainId || !call) return INVALID_RESULT\r\n\r\n        const result = callResults[chainId]?.[toCallKey(call)]\r\n\r\n        let data\r\n        if (result?.data && result?.data !== '0x') {\r\n          // eslint-disable-next-line prefer-destructuring\r\n          data = result.data\r\n        }\r\n\r\n        return { valid: true, data, blockNumber: result?.blockNumber }\r\n      }),\r\n    [callResults, calls, chainId],\r\n  )\r\n}\r\n\r\ninterface CallState {\r\n  readonly valid: boolean\r\n  // the result, or undefined if loading or errored/no data\r\n  readonly result: Result | undefined\r\n  // true if the result has never been fetched\r\n  readonly loading: boolean\r\n  // true if the result is not for the latest block\r\n  readonly syncing: boolean\r\n  // true if the call was made and is synced, but the return data is invalid\r\n  readonly error: boolean\r\n}\r\n\r\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\r\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\r\n\r\nfunction toCallState(\r\n  callResult: CallResult | undefined,\r\n  contractInterface: Interface | undefined,\r\n  fragment: FunctionFragment | undefined,\r\n  latestBlockNumber: number | undefined,\r\n): CallState {\r\n  if (!callResult) return INVALID_CALL_STATE\r\n  const { valid, data, blockNumber } = callResult\r\n  if (!valid) return INVALID_CALL_STATE\r\n  if (valid && !blockNumber) return LOADING_CALL_STATE\r\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\r\n  const success = data && data.length > 2\r\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\r\n  let result: Result | undefined\r\n  if (success && data) {\r\n    try {\r\n      result = contractInterface.decodeFunctionResult(fragment, data)\r\n    } catch (error) {\r\n      console.debug('Result data parsing failed', fragment, data)\r\n      return {\r\n        valid: true,\r\n        loading: false,\r\n        error: true,\r\n        syncing,\r\n        result,\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    valid: true,\r\n    loading: false,\r\n    syncing,\r\n    result,\r\n    error: !success,\r\n  }\r\n}\r\n\r\nexport function useSingleContractMultipleData(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  callInputs: OptionalMethodInputs[],\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      contract && fragment && callInputs && callInputs.length > 0\r\n        ? callInputs.map<Call>((inputs) => {\r\n          return {\r\n            address: contract.address,\r\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n          }\r\n        })\r\n        : [],\r\n    [callInputs, contract, fragment],\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\r\n  }, [fragment, contract, results, latestBlockNumber])\r\n}\r\n\r\nexport function useMultipleContractSingleData(\r\n  addresses: (string | undefined)[],\r\n  contractInterface: Interface,\r\n  methodName: string,\r\n  callInputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\r\n\r\n  const callData: string | undefined = useMemo(\r\n    () =>\r\n      fragment && isValidMethodArgs(callInputs)\r\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\r\n        : undefined,\r\n    [callInputs, contractInterface, fragment],\r\n  )\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      fragment && addresses && addresses.length > 0 && callData\r\n        ? addresses.map<Call | undefined>((address) => {\r\n          return address && callData\r\n            ? {\r\n              address,\r\n              callData,\r\n            }\r\n            : undefined\r\n        })\r\n        : [],\r\n    [addresses, callData, fragment],\r\n  )\r\n\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\r\n  }, [fragment, results, contractInterface, latestBlockNumber])\r\n}\r\n\r\nexport function useSingleCallResult(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  inputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo<Call[]>(() => {\r\n    return contract && fragment && isValidMethodArgs(inputs)\r\n      ? [\r\n        {\r\n          address: contract.address,\r\n          callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n        },\r\n      ]\r\n      : []\r\n  }, [contract, fragment, inputs])\r\n\r\n  const result = useCallsData(calls, options)[0]\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\r\n  }, [result, contract, fragment, latestBlockNumber])\r\n}\r\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\n\r\nimport { useTokenContract } from './useContract'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\n\r\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\r\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\r\n\r\n  return useMemo(\r\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\r\n    [token, allowance],\r\n  )\r\n}\r\n\r\nexport default useTokenAllowance\r\n","import { MaxUint256 } from '@ethersproject/constants'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\r\nimport { useCallback, useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { ROUTER_ADDRESS } from '../config/constants'\r\nimport useTokenAllowance from './useTokenAllowance'\r\nimport { Field } from '../state/swap/actions'\r\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\r\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\r\nimport { calculateGasMargin } from '../utils'\r\nimport { useTokenContract } from './useContract'\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nexport function useApproveCallback(\r\n  amountToApprove?: CurrencyAmount,\r\n  spender?: string,\r\n): [ApprovalState, () => Promise<void>] {\r\n  const { account } = useActiveWeb3React()\r\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\r\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\r\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\r\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lessThan(amountToApprove)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED\r\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\r\n\r\n  const tokenContract = useTokenContract(token?.address)\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily')\r\n      return\r\n    }\r\n    if (!token) {\r\n      console.error('no token')\r\n      return\r\n    }\r\n\r\n    if (!tokenContract) {\r\n      console.error('tokenContract is null')\r\n      return\r\n    }\r\n\r\n    if (!amountToApprove) {\r\n      console.error('missing amount to approve')\r\n      return\r\n    }\r\n\r\n    if (!spender) {\r\n      console.error('no spender')\r\n      return\r\n    }\r\n\r\n    let useExact = false\r\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\r\n      // general fallback for tokens who restrict approval amounts\r\n      useExact = true\r\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\r\n    })\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    return tokenContract\r\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\r\n        gasLimit: calculateGasMargin(estimatedGas),\r\n      })\r\n      .then((response: TransactionResponse) => {\r\n        addTransaction(response, {\r\n          summary: `Approve ${amountToApprove.currency.symbol}`,\r\n          approval: { tokenAddress: token.address, spender },\r\n        })\r\n      })\r\n      .catch((error: Error) => {\r\n        console.error('Failed to approve token', error)\r\n        throw error\r\n      })\r\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\r\n\r\n  return [approvalState, approve]\r\n}\r\n\r\n// wraps useApproveCallback in the context of a swap\r\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\r\n  const amountToApprove = useMemo(\r\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\r\n    [trade, allowedSlippage],\r\n  )\r\n\r\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\r\n}\r\n","import { Pair, Token } from '@pancakeswap/sdk'\r\nimport flatMap from 'lodash/flatMap'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAllTokens } from 'hooks/Tokens'\r\nimport { AppDispatch, AppState } from '../../index'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  updateUserDeadline,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  updateUserSingleHopOnly,\r\n  muteAudio,\r\n  unmuteAudio,\r\n} from '../actions'\r\nimport { serializeToken, deserializeToken } from './helpers'\r\n\r\nexport function useAudioModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\r\n\r\n  const toggleSetAudioMode = useCallback(() => {\r\n    if (audioPlay) {\r\n      dispatch(muteAudio())\r\n    } else {\r\n      dispatch(unmuteAudio())\r\n    }\r\n  }, [audioPlay, dispatch])\r\n\r\n  return [audioPlay, toggleSetAudioMode]\r\n}\r\n\r\nexport function useIsExpertMode(): boolean {\r\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\r\n}\r\n\r\nexport function useExpertModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const expertMode = useIsExpertMode()\r\n\r\n  const toggleSetExpertMode = useCallback(() => {\r\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\r\n  }, [expertMode, dispatch])\r\n\r\n  return [expertMode, toggleSetExpertMode]\r\n}\r\n\r\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\r\n    (state) => state.user.userSingleHopOnly,\r\n  )\r\n\r\n  const setSingleHopOnly = useCallback(\r\n    (newSingleHopOnly: boolean) => {\r\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [singleHopOnly, setSingleHopOnly]\r\n}\r\n\r\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\r\n    return state.user.userSlippageTolerance\r\n  })\r\n\r\n  const setUserSlippageTolerance = useCallback(\r\n    (slippage: number) => {\r\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userSlippageTolerance, setUserSlippageTolerance]\r\n}\r\n\r\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\r\n    return state.user.userDeadline\r\n  })\r\n\r\n  const setUserDeadline = useCallback(\r\n    (deadline: number) => {\r\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userDeadline, setUserDeadline]\r\n}\r\n\r\nexport function useAddUserToken(): (token: Token) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (token: Token) => {\r\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (chainId: number, address: string) => {\r\n      dispatch(removeSerializedToken({ chainId, address }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nfunction serializePair(pair: Pair): SerializedPair {\r\n  return {\r\n    token0: serializeToken(pair.token0),\r\n    token1: serializeToken(pair.token1),\r\n  }\r\n}\r\n\r\nexport function usePairAdder(): (pair: Pair) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (pair: Pair) => {\r\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\r\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\r\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'PCN-LP', 'Popcorn LPs')\r\n}\r\n\r\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\r\nexport function useTrackedTokenPairs(): [Token, Token][] {\r\n  const { chainId } = useWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  // pinned pairs\r\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\r\n\r\n  // pairs for every token against every base\r\n  const generatedPairs: [Token, Token][] = useMemo(\r\n    () =>\r\n      chainId\r\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\r\n          const token = tokens[tokenAddress]\r\n          // for each token on the current chain,\r\n          return (\r\n            // loop though all bases on the current chain\r\n            (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\r\n              // to construct pairs of the given token with each base\r\n              .map((base) => {\r\n                if (base.address === token.address) {\r\n                  return null\r\n                }\r\n                return [base, token]\r\n              })\r\n              .filter((p): p is [Token, Token] => p !== null)\r\n          )\r\n        })\r\n        : [],\r\n    [tokens, chainId],\r\n  )\r\n\r\n  // pairs saved by users\r\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\r\n\r\n  const userPairs: [Token, Token][] = useMemo(() => {\r\n    if (!chainId || !savedSerializedPairs) return []\r\n    const forChain = savedSerializedPairs[chainId]\r\n    if (!forChain) return []\r\n\r\n    return Object.keys(forChain).map((pairId) => {\r\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\r\n    })\r\n  }, [savedSerializedPairs, chainId])\r\n\r\n  const combinedList = useMemo(\r\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\r\n    [generatedPairs, pinnedPairs, userPairs],\r\n  )\r\n\r\n  return useMemo(() => {\r\n    // dedupes pairs of tokens in the combined list\r\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\r\n      const sorted = tokenA.sortsBefore(tokenB)\r\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\r\n      if (memo[key]) return memo\r\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return memo\r\n    }, {})\r\n\r\n    return Object.keys(keyed).map((key) => keyed[key])\r\n  }, [combinedList])\r\n}\r\n","import { ethers } from 'ethers'\r\nimport { getMulticallContract } from 'utils/contractHelpers'\r\nimport { MultiCallResponse } from './types'\r\n\r\nexport interface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (example: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\ninterface MulticallOptions {\r\n  requireSuccess?: boolean\r\n}\r\n\r\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\r\n  const multi = getMulticallContract()\r\n  const itf = new ethers.utils.Interface(abi)\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n\r\n  const { returnData } = await multi.aggregate(calldata)\r\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n  return res;\r\n}\r\n\r\n/**\r\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\r\n *\r\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\r\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\r\n */\r\nexport const multicallv2 = async <T = any>(\r\n  abi: any[],\r\n  calls: Call[],\r\n  options: MulticallOptions = { requireSuccess: true },\r\n): Promise<MultiCallResponse<T>> => {\r\n  const { requireSuccess } = options\r\n  const multi = getMulticallContract()\r\n  const itf = new ethers.utils.Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n\r\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\r\n  const res = returnData.map((call, i) => {\r\n    const [result, data] = call\r\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\r\n  })\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","import BigNumber from 'bignumber.js'\r\nimport { Pool } from 'state/types'\r\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\r\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\r\n\r\nexport const convertSharesToCake = (\r\n  shares: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\r\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\r\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\r\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\r\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\r\n}\r\n\r\nexport const convertCakeToShares = (\r\n  cake: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\r\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\r\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\r\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\r\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\r\n}\r\n\r\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\r\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\r\n\r\nexport const getAprData = (pool: Pool, performanceFee: number) => {\r\n  const { isAutoVault, earningTokenPrice, apr } = pool\r\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\r\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\r\n  const roundingDecimals = isHighValueToken ? 4 : 2\r\n\r\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\r\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\r\n\r\n  if (isAutoVault) {\r\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\r\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\r\n      numberOfDays: 365,\r\n      farmApr: apr,\r\n      tokenPrice: earningTokenPrice,\r\n      roundingDecimals,\r\n      compoundFrequency,\r\n      performanceFee,\r\n    })\r\n    const autoApr = getRoi({\r\n      amountEarned: tokenEarnedPerThousand365D,\r\n      amountInvested: oneThousandDollarsWorthOfToken,\r\n    })\r\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\r\n  }\r\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\r\n}\r\n\r\nexport const getCakeVaultEarnings = (\r\n  account: string,\r\n  cakeAtLastUserAction: BigNumber,\r\n  userShares: BigNumber,\r\n  pricePerFullShare: BigNumber,\r\n  earningTokenPrice: number,\r\n) => {\r\n  const hasAutoEarnings =\r\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\r\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\r\n\r\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\r\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\r\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\r\n}\r\n\r\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\r\n  const { startBlock, endBlock, isFinished } = pool\r\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\r\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\r\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\r\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\r\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\r\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const BSC_BLOCK_TIME = 3\r\n\r\nexport const BASE_BSC_SCAN_URLS = {\r\n  [ChainId.MAINNET]: 'http://testsitenextep.com/',\r\n  [ChainId.TESTNET]: 'https://testnet.nxchainscan.com',\r\n}\r\n\r\n// CAKE_PER_BLOCK details\r\n// 40 CAKE is minted per block\r\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\r\n// 10 CAKE per block goes to CAKE syrup pool\r\n// 9 CAKE per block goes to Yield farms and lottery\r\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\r\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 19 (40 - Amount sent to burn pool)\r\nexport const CAKE_PER_BLOCK = new BigNumber(40)\r\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\r\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\r\nexport const BASE_URL = window.location.origin\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\r\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\r\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\r\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\r\nexport const LOTTERY_TICKET_PRICE = 1\r\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\r\nexport const DEFAULT_GAS_LIMIT = 200000\r\nexport const DEFAULT_GAS_PRICE = 5\r\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\r\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\r\n\r\nexport const UNSUPPORTED_LIST_URLS: string[] = []\r\n\r\n// lower index == higher priority for token import\r\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\r\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\r\n]\r\n\r\n// default lists to be 'active' aka searched across\r\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\r\n","import ContractAddress from '../contracts';\r\n\r\nexport default {\r\n  \"name\": \"NextepDex Default List\",\r\n  \"timestamp\": \"2022-10-07T00:00:00Z\",\r\n  \"version\": {\r\n    \"major\": 3,\r\n    \"minor\": 0,\r\n    \"patch\": 0\r\n  },\r\n  \"tags\": {},\r\n  \"logoURI\": \"https://raw.githubusercontent.com/Nextep-Blockchain/token-icons/main/main/icons/NEXTEP.png\",\r\n  \"keywords\": [\r\n    \"pancake\",\r\n    \"default\"\r\n  ],\r\n  \"tokens\": [\r\n    {\r\n      \"name\": \"WCXS Token\",\r\n      \"symbol\": \"WCXS\",\r\n      \"address\": `${ContractAddress.wcxs[ContractAddress.networkId]}`,\r\n      \"chainId\": Number(ContractAddress.networkId),\r\n      \"decimals\": 18,\r\n      // \"logoURI\": `https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/${ContractAddress.wneon[ContractAddress.networkId].toLowerCase()}.svg`\r\n    },\r\n    {\r\n      \"name\": \"Pegged BUSD\",\r\n      \"symbol\": \"BUSD\",\r\n      \"address\": `${ContractAddress.busd[ContractAddress.networkId].toLowerCase()}`,\r\n      \"chainId\": Number(ContractAddress.networkId),\r\n      \"decimals\": 18,\r\n      // \"logoURI\": `https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/${ContractAddress.busd[ContractAddress.networkId].toLowerCase()}.svg`\r\n    },\r\n    // {\r\n    //   \"name\": \"PCN Token\",\r\n    //   \"symbol\": \"PCN\",\r\n    //   \"address\": `${ContractAddress.pcn[ContractAddress.networkId].toLowerCase()}`,\r\n    //   \"chainId\": Number(ContractAddress.networkId),\r\n    //   \"decimals\": 18,\r\n    //   // \"logoURI\": `https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/${ContractAddress.pcn[ContractAddress.networkId].toLowerCase()}.svg`\r\n    // },\r\n    {\r\n      \"name\": \"Nextep Token\",\r\n      \"symbol\": \"NEXTEP\",\r\n      \"address\": `${ContractAddress.nextep[ContractAddress.networkId].toLowerCase()}`,\r\n      \"chainId\": Number(ContractAddress.networkId),\r\n      \"decimals\": 18,\r\n      // \"logoURI\": `https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/${ContractAddress.pcn[ContractAddress.networkId].toLowerCase()}.svg`\r\n    },\r\n    {\r\n      \"name\": \"pegged USDT\",\r\n      \"symbol\": \"USDT\",\r\n      \"address\": `${ContractAddress.usdt[ContractAddress.networkId].toLowerCase()}`,\r\n      \"chainId\": Number(ContractAddress.networkId),\r\n      \"decimals\": 6,\r\n      // \"logoURI\": `https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/${ContractAddress.usdt[ContractAddress.networkId].toLowerCase()}.svg`\r\n    },\r\n    // {\r\n    //   \"name\": \"Ether\",\r\n    //   \"symbol\": \"ETH\",\r\n    //   \"address\": `${ContractAddress.pcn[ContractAddress.networkId].toLowerCase()}`,\r\n    //   \"chainId\": Number(ContractAddress.networkId),\r\n    //   \"decimals\": 18,\r\n    //   \"logoURI\": `https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/${ContractAddress.pcn[ContractAddress.networkId].toLowerCase()}.svg`\r\n    // },\r\n\r\n    // {\r\n    //   \"name\": \"Dogecoin\",\r\n    //   \"symbol\": \"D\",\r\n    //   \"address\": `${ContractAddress.pcn[ContractAddress.networkId].toLowerCase()}`,\r\n    //   \"chainId\": Number(ContractAddress.networkId),\r\n    //   \"decimals\": 18,\r\n    //   \"logoURI\": `https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/${ContractAddress.pcn[ContractAddress.networkId].toLowerCase()}.svg`\r\n    // },\r\n    // {\r\n    //   \"name\": \"Binance\",\r\n    //   \"symbol\": \"BNB\",\r\n    //   \"address\": `${ContractAddress.pcn[ContractAddress.networkId].toLowerCase()}`,\r\n    //   \"chainId\": Number(ContractAddress.networkId),\r\n    //   \"decimals\": 18,\r\n    //   \"logoURI\": `https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/${ContractAddress.pcn[ContractAddress.networkId].toLowerCase()}.svg`\r\n    // },\r\n    // {\r\n    //   \"name\": \"corn Token\",\r\n    //   \"symbol\": \"CORN\",\r\n    //   \"address\": `${String(ContractAddress.corn[ContractAddress.networkId])}`,\r\n    //   \"chainId\": Number(ContractAddress.networkId),\r\n    //   \"decimals\": 18,\r\n    //   \"logoURI\": \"/images/fantom.jpg\"\r\n    // },\r\n    // {\r\n    //   \"name\": \"pegged ETH\",\r\n    //   \"symbol\": \"ETH\",\r\n    //   \"address\": `0xeD330F35D1e4334CA1beCE39Faad839589D26D67`,\r\n    //   \"chainId\": Number(ContractAddress.networkId),\r\n    //   \"decimals\": 18,\r\n    //   \"logoURI\": `https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/${ContractAddress.eth[ContractAddress.networkId].toLowerCase()}.svg`\r\n    // },\r\n    // {\r\n    //   \"name\": \"pegged USDT\",\r\n    //   \"symbol\": \"USDT\",\r\n    //   \"address\": `0x55108d5c2C8EF54B4D2f2c7442E90e4B71fb1e3E`,\r\n    //   \"chainId\": Number(ContractAddress.networkId),\r\n    //   \"decimals\": 18,\r\n    //   \"logoURI\": \"https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/usdt.svg\"\r\n    // },\r\n    // {\r\n    //   \"name\": \"pegged USDC\",\r\n    //   \"symbol\": \"USDC\",\r\n    //   \"address\": `0xcA85FdCc0d1F0eaba22eE46609E151566a331Aa7`,\r\n    //   \"chainId\": Number(ContractAddress.networkId),\r\n    //   \"decimals\": 18,\r\n    //   \"logoURI\": \"https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/usdc.svg\"\r\n    // },\r\n    // {\r\n    //   \"name\": \"pegged TUSD\",\r\n    //   \"symbol\": \"TUSD\",\r\n    //   \"address\": `0x699ABb762e708f5e24772bDE77694Be1cAfAFB72`,\r\n    //   \"chainId\": Number(ContractAddress.networkId),\r\n    //   \"decimals\": 18,\r\n    //   \"logoURI\": \"https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/tusd.svg\"\r\n    // },\r\n    // {\r\n    //   \"name\": \"pegged WBTC\",\r\n    //   \"symbol\": \"WBTC\",\r\n    //   \"address\": `0xcd3248Ba831e48DA07221Dcd1a804BCFb42e78d2`,\r\n    //   \"chainId\": Number(ContractAddress.networkId),\r\n    //   \"decimals\": 18,\r\n    //   \"logoURI\": \"https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/wbtc.svg\"\r\n    // },\r\n    // {\r\n    //   \"name\": \"pegged LINK\",\r\n    //   \"symbol\": \"LINK\",\r\n    //   \"address\": `0x2dAbaad7ba131e2c85d7a81e90223D324c86563f`,\r\n    //   \"chainId\": Number(ContractAddress.networkId),\r\n    //   \"decimals\": 18,\r\n    //   \"logoURI\": \"https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/link.svg\"\r\n    // },\r\n    // {\r\n    //   \"name\": \"pegged UNI\",\r\n    //   \"symbol\": \"UNI\",\r\n    //   \"address\": `0x443827058dc895736bdd9AD7666CE7b3Fd60931e`,\r\n    //   \"chainId\": Number(ContractAddress.networkId),\r\n    //   \"decimals\": 18,\r\n    //   \"logoURI\": \"https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/uni.svg\"\r\n    // },\r\n    // {\r\n    //   \"name\": \"pegged BNB\",\r\n    //   \"symbol\": \"BNB\",\r\n    //   \"address\": `0xB5E287c915a7c093fdaF64a5b6b44230F2082917`,\r\n    //   \"chainId\": Number(ContractAddress.networkId),\r\n    //   \"decimals\": 18,\r\n    //   \"logoURI\": \"https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/bnb.svg\"\r\n    // },\r\n    // {\r\n    //   \"name\": \"Pegged AVAX\",\r\n    //   \"symbol\": \"AVAX\",\r\n    //   \"address\": `0x227b92D5cc3b5b2E4545b2AdAAcCE112821e9442`,\r\n    //   \"chainId\": Number(ContractAddress.networkId),\r\n    //   \"decimals\": 18,\r\n    //   \"logoURI\": \"https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/avax.svg\"\r\n    // },\r\n    // {\r\n    //   \"name\": \"pegged MATIC\",\r\n    //   \"symbol\": \"MATIC\",\r\n    //   \"address\": `0x89dd49E4E99771D512de60293120d2EfDE8388f3`,\r\n    //   \"chainId\": Number(ContractAddress.networkId),\r\n    //   \"decimals\": 18,\r\n    //   \"logoURI\": \"https://raw.githubusercontent.com/Neon-Blockchain/token-icons/main/icons/matic.svg\"\r\n    // }\r\n  ]\r\n}","import { ChainId, Token } from '@pancakeswap/sdk'\r\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\r\nimport { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\r\nimport { AppState } from '../index'\r\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists';\r\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\r\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/unsupported.json'\r\n\r\ntype TagDetails = Tags[keyof Tags]\r\nexport interface TagInfo extends TagDetails {\r\n\tid: string\r\n}\r\n\r\n// use ordering of default list of lists to assign priority\r\nfunction sortByListPriority(urlA: string, urlB: string) {\r\n\tconst first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\r\n\tconst second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\r\n\r\n\t// need reverse order to make sure mapping includes top priority last\r\n\tif (first < second) return 1\r\n\tif (first > second) return -1\r\n\treturn 0\r\n}\r\n\r\n/**\r\n * Token instances created from token info.\r\n */\r\nexport class WrappedTokenInfo extends Token {\r\n\tpublic readonly tokenInfo: TokenInfo\r\n\r\n\tpublic readonly tags: TagInfo[]\r\n\r\n\tconstructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\r\n\t\tsuper(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\r\n\t\tthis.tokenInfo = tokenInfo\r\n\t\tthis.tags = tags\r\n\t}\r\n\r\n\tpublic get logoURI(): string | undefined {\r\n\t\treturn this.tokenInfo.logoURI\r\n\t}\r\n}\r\n\r\nexport type TokenAddressMap = Readonly<\r\n\t{ [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\r\n>\r\n\r\n/**\r\n * An empty result, useful as a default.\r\n */\r\nconst EMPTY_LIST: TokenAddressMap = {\r\n\t[ChainId.MAINNET]: {},\r\n\t[ChainId.TESTNET]: {},\r\n}\r\n\r\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\r\n\ttypeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\r\n\r\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\r\n\tconst result = listCache?.get(list)\r\n\tif (result) return result\r\n\r\n\r\n\tconst map = list.tokens.reduce<TokenAddressMap>(\r\n\t\t(tokenMap, tokenInfo) => {\r\n\t\t\tconst tags: TagInfo[] =\r\n\t\t\t\ttokenInfo.tags\r\n\t\t\t\t\t?.map((tagId) => {\r\n\t\t\t\t\t\tif (!list.tags?.[tagId]) return undefined\r\n\t\t\t\t\t\treturn { ...list.tags[tagId], id: tagId }\r\n\t\t\t\t\t})\r\n\t\t\t\t\t?.filter((x): x is TagInfo => Boolean(x)) ?? []\r\n\t\t\tconst token = new WrappedTokenInfo(tokenInfo, tags)\r\n\t\t\tif (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\r\n\t\t\treturn {\r\n\t\t\t\t...tokenMap,\r\n\t\t\t\t[token.chainId]: {\r\n\t\t\t\t\t...tokenMap[token.chainId],\r\n\t\t\t\t\t[token.address]: {\r\n\t\t\t\t\t\ttoken,\r\n\t\t\t\t\t\tlist,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ ...EMPTY_LIST },\r\n\t)\r\n\tlistCache?.set(list, map)\r\n\treturn map\r\n}\r\n\r\nexport function useAllLists(): {\r\n\treadonly [url: string]: {\r\n\t\treadonly current: TokenList | null\r\n\t\treadonly pendingUpdate: TokenList | null\r\n\t\treadonly loadingRequestId: string | null\r\n\t\treadonly error: string | null\r\n\t}\r\n} {\r\n\treturn useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n}\r\n\r\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\r\n\treturn {\r\n\t\t[ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\r\n\t\t[ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\r\n\t}\r\n}\r\n\r\n// merge tokens contained within lists from urls\r\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\r\n\tconst lists = useAllLists()\r\n\r\n\treturn useMemo(() => {\r\n\t\tif (!urls) return EMPTY_LIST\r\n\r\n\t\treturn (\r\n\t\t\turls\r\n\t\t\t\t.slice()\r\n\t\t\t\t// sort by priority so top priority goes last\r\n\t\t\t\t.sort(sortByListPriority)\r\n\t\t\t\t.reduce((allTokens, currentUrl) => {\r\n\t\t\t\t\tconst current = lists[currentUrl]?.current\r\n\t\t\t\t\tif (!current) return allTokens\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst newTokens = Object.assign(listToTokenMap(current))\r\n\t\t\t\t\t\treturn combineMaps(allTokens, newTokens)\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tconsole.error('Could not show token list due to error', error)\r\n\t\t\t\t\t\treturn allTokens\r\n\t\t\t\t\t}\r\n\t\t\t\t}, EMPTY_LIST)\r\n\t\t)\r\n\t}, [lists, urls])\r\n}\r\n\r\n// filter out unsupported lists\r\nexport function useActiveListUrls(): string[] | undefined {\r\n\treturn useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\r\n\t\t(url) => !UNSUPPORTED_LIST_URLS.includes(url),\r\n\t)\r\n}\r\n\r\nexport function useInactiveListUrls(): string[] {\r\n\tconst lists = useAllLists()\r\n\tconst allActiveListUrls = useActiveListUrls()\r\n\treturn Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\r\n}\r\n\r\n// get all the tokens from active lists, combine with local default tokens\r\nexport function useCombinedActiveList(): TokenAddressMap {\r\n\tconst activeListUrls = useActiveListUrls()\r\n\tconst activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\r\n\tconst defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\r\n\treturn combineMaps(activeTokens, defaultTokenMap)\r\n}\r\n\r\n// all tokens from inactive lists\r\nexport function useCombinedInactiveList(): TokenAddressMap {\r\n\tconst allInactiveListUrls: string[] = useInactiveListUrls()\r\n\treturn useCombinedTokenMapFromUrls(allInactiveListUrls)\r\n}\r\n\r\n// used to hide warnings on import for default tokens\r\nexport function useDefaultTokenList(): TokenAddressMap {\r\n\treturn listToTokenMap(DEFAULT_TOKEN_LIST)\r\n}\r\n\r\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\r\nexport function useUnsupportedTokenList(): TokenAddressMap {\r\n\t// get hard coded unsupported tokens\r\n\tconst localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\r\n\r\n\t// get any loaded unsupported tokens\r\n\tconst loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\r\n\r\n\t// format into one token address map\r\n\treturn combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\r\n}\r\n\r\nexport function useIsListActive(url: string): boolean {\r\n\tconst activeListUrls = useActiveListUrls()\r\n\treturn Boolean(activeListUrls?.includes(url))\r\n}\r\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\r\nimport { TokenList, Version } from '@uniswap/token-lists'\r\n\r\nexport const fetchTokenList: Readonly<{\r\n\tpending: ActionCreatorWithPayload<{ url: string; requestId: string }>\r\n\tfulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\r\n\trejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\r\n}> = {\r\n\tpending: createAction('lists/fetchTokenList/pending'),\r\n\tfulfilled: createAction('lists/fetchTokenList/fulfilled'),\r\n\trejected: createAction('lists/fetchTokenList/rejected'),\r\n}\r\n// add and remove from list options\r\nexport const addList = createAction<string>('lists/addList')\r\nexport const removeList = createAction<string>('lists/removeList')\r\n\r\n// select which lists to search across from loaded lists\r\nexport const enableList = createAction<string>('lists/enableList')\r\nexport const disableList = createAction<string>('lists/disableList')\r\n\r\n// versioning\r\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\r\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { updateBlockNumber } from './actions'\r\n\r\nexport interface ApplicationState {\r\n  readonly blockNumber: { readonly [chainId: number]: number }\r\n}\r\n\r\nconst initialState: ApplicationState = {\r\n  blockNumber: {},\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder.addCase(updateBlockNumber, (state, action) => {\r\n    const { chainId, blockNumber } = action.payload\r\n    if (typeof state.blockNumber[chainId] !== 'number') {\r\n      state.blockNumber[chainId] = blockNumber\r\n    } else {\r\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\r\n    }\r\n  }),\r\n)\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\n// fired once when the app reloads but before the app renders\r\n// allows any updates to be applied to store data loaded from localStorage\r\nexport const updateVersion = createAction<void>('global/updateVersion')\r\n\r\nexport default updateVersion\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\r\nimport { updateVersion } from '../global/actions'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedPair,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  updateUserDeadline,\r\n  updateUserSingleHopOnly,\r\n  muteAudio,\r\n  unmuteAudio,\r\n} from './actions'\r\n\r\nconst currentTimestamp = () => new Date().getTime()\r\n\r\nexport interface UserState {\r\n  // the timestamp of the last updateVersion action\r\n  lastUpdateVersionTimestamp?: number\r\n\r\n  userExpertMode: boolean\r\n\r\n  // only allow swaps on direct pairs\r\n  userSingleHopOnly: boolean\r\n\r\n  // user defined slippage tolerance in bips, used in all txns\r\n  userSlippageTolerance: number\r\n\r\n  // deadline set by user in minutes, used in all txns\r\n  userDeadline: number\r\n\r\n  tokens: {\r\n    [chainId: number]: {\r\n      [address: string]: SerializedToken\r\n    }\r\n  }\r\n\r\n  pairs: {\r\n    [chainId: number]: {\r\n      // keyed by token0Address:token1Address\r\n      [key: string]: SerializedPair\r\n    }\r\n  }\r\n\r\n  timestamp: number\r\n  audioPlay: boolean\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n  return `${token0Address};${token1Address}`\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userExpertMode: false,\r\n  userSingleHopOnly: false,\r\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\r\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\r\n  tokens: {},\r\n  pairs: {},\r\n  timestamp: currentTimestamp(),\r\n  audioPlay: true,\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateVersion, (state) => {\r\n      // slippage isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userSlippageTolerance !== 'number') {\r\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\r\n      }\r\n\r\n      // deadline isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userDeadline !== 'number') {\r\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\r\n      }\r\n\r\n      state.lastUpdateVersionTimestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserExpertMode, (state, action) => {\r\n      state.userExpertMode = action.payload.userExpertMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSlippageTolerance, (state, action) => {\r\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserDeadline, (state, action) => {\r\n      state.userDeadline = action.payload.userDeadline\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSingleHopOnly, (state, action) => {\r\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\r\n    })\r\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n      if (!state.tokens) {\r\n        state.tokens = {}\r\n      }\r\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\r\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n      if (!state.tokens) {\r\n        state.tokens = {}\r\n      }\r\n      state.tokens[chainId] = state.tokens[chainId] || {}\r\n      delete state.tokens[chainId][address]\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n      if (\r\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n        serializedPair.token0.address !== serializedPair.token1.address\r\n      ) {\r\n        const { chainId } = serializedPair.token0\r\n        state.pairs[chainId] = state.pairs[chainId] || {}\r\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n      if (state.pairs[chainId]) {\r\n        // just delete both keys if either exists\r\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\r\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(muteAudio, (state) => {\r\n      state.audioPlay = false\r\n    })\r\n    .addCase(unmuteAudio, (state) => {\r\n      state.audioPlay = true\r\n    }),\r\n)\r\n","/* eslint-disable no-param-reassign */\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  addTransaction,\r\n  checkedTransaction,\r\n  clearAllTransactions,\r\n  finalizeTransaction,\r\n  SerializableTransactionReceipt,\r\n} from './actions'\r\n\r\nconst now = () => new Date().getTime()\r\n\r\nexport interface TransactionDetails {\r\n  hash: string\r\n  approval?: { tokenAddress: string; spender: string }\r\n  summary?: string\r\n  claim?: { recipient: string }\r\n  receipt?: SerializableTransactionReceipt\r\n  lastCheckedBlockNumber?: number\r\n  addedTime: number\r\n  confirmedTime?: number\r\n  from: string\r\n}\r\n\r\nexport interface TransactionState {\r\n  [chainId: number]: {\r\n    [txHash: string]: TransactionDetails\r\n  }\r\n}\r\n\r\nexport const initialState: TransactionState = {}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\r\n      if (transactions[chainId]?.[hash]) {\r\n        throw Error('Attempted to add existing transaction.')\r\n      }\r\n      const txs = transactions[chainId] ?? {}\r\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\r\n      transactions[chainId] = txs\r\n    })\r\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\r\n      if (!transactions[chainId]) return\r\n      transactions[chainId] = {}\r\n    })\r\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\r\n      const tx = transactions[chainId]?.[hash]\r\n      if (!tx) {\r\n        return\r\n      }\r\n      if (!tx.lastCheckedBlockNumber) {\r\n        tx.lastCheckedBlockNumber = blockNumber\r\n      } else {\r\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\r\n      }\r\n    })\r\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\r\n      const tx = transactions[chainId]?.[hash]\r\n      if (!tx) {\r\n        return\r\n      }\r\n      tx.receipt = receipt\r\n      tx.confirmedTime = now()\r\n    }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\r\n\r\nexport interface SwapState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n  readonly [Field.INPUT]: {\r\n    readonly currencyId: string | undefined\r\n  }\r\n  readonly [Field.OUTPUT]: {\r\n    readonly currencyId: string | undefined\r\n  }\r\n  // the typed recipient address or ENS name, or null if swap should go to sender\r\n  readonly recipient: string | null\r\n}\r\n\r\nconst initialState: SwapState = {\r\n  independentField: Field.INPUT,\r\n  typedValue: '',\r\n  [Field.INPUT]: {\r\n    currencyId: '',\r\n  },\r\n  [Field.OUTPUT]: {\r\n    currencyId: '',\r\n  },\r\n  recipient: null,\r\n}\r\n\r\nexport default createReducer<SwapState>(initialState, (builder) =>\r\n  builder\r\n    .addCase(\r\n      replaceSwapState,\r\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\r\n        return {\r\n          [Field.INPUT]: {\r\n            currencyId: inputCurrencyId,\r\n          },\r\n          [Field.OUTPUT]: {\r\n            currencyId: outputCurrencyId,\r\n          },\r\n          independentField: field,\r\n          typedValue,\r\n          recipient,\r\n        }\r\n      },\r\n    )\r\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\r\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n      if (currencyId === state[otherField].currencyId) {\r\n        // the case where we have to swap the order\r\n        return {\r\n          ...state,\r\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n          [field]: { currencyId },\r\n          [otherField]: { currencyId: state[field].currencyId },\r\n        }\r\n      }\r\n      // the normal case\r\n      return {\r\n        ...state,\r\n        [field]: { currencyId },\r\n      }\r\n    })\r\n    .addCase(switchCurrencies, (state) => {\r\n      return {\r\n        ...state,\r\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\r\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\r\n      }\r\n    })\r\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n      return {\r\n        ...state,\r\n        independentField: field,\r\n        typedValue,\r\n      }\r\n    })\r\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\r\n      state.recipient = recipient\r\n    }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, resetMintState, typeInput } from './actions'\r\n\r\nexport interface MintState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n  readonly otherTypedValue: string // for the case when there's no liquidity\r\n}\r\n\r\nconst initialState: MintState = {\r\n  independentField: Field.CURRENCY_A,\r\n  typedValue: '',\r\n  otherTypedValue: '',\r\n}\r\n\r\nexport default createReducer<MintState>(initialState, (builder) =>\r\n  builder\r\n    .addCase(resetMintState, () => initialState)\r\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\r\n      if (noLiquidity) {\r\n        // they're typing into the field they've last typed in\r\n        if (field === state.independentField) {\r\n          return {\r\n            ...state,\r\n            independentField: field,\r\n            typedValue,\r\n          }\r\n        }\r\n        // they're typing into a new field, store the other value\r\n\r\n        return {\r\n          ...state,\r\n          independentField: field,\r\n          typedValue,\r\n          otherTypedValue: state.typedValue,\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        independentField: field,\r\n        typedValue,\r\n        otherTypedValue: '',\r\n      }\r\n    }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { TokenList } from '@uniswap/token-lists/dist/types'\r\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\r\n\r\nimport { updateVersion } from '../global/actions'\r\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\r\n\r\nexport interface ListsState {\r\n  readonly byUrl: {\r\n    readonly [url: string]: {\r\n      readonly current: TokenList | null\r\n      readonly pendingUpdate: TokenList | null\r\n      readonly loadingRequestId: string | null\r\n      readonly error: string | null\r\n    }\r\n  }\r\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\r\n  readonly lastInitializedDefaultListOfLists?: string[]\r\n\r\n  // currently active lists\r\n  readonly activeListUrls: string[] | undefined\r\n}\r\n\r\ntype ListState = ListsState['byUrl'][string]\r\n\r\nconst NEW_LIST_STATE: ListState = {\r\n  error: null,\r\n  current: null,\r\n  loadingRequestId: null,\r\n  pendingUpdate: null,\r\n}\r\n\r\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\r\n\r\nconst initialState: ListsState = {\r\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\r\n  byUrl: {\r\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\r\n      memo[listUrl] = NEW_LIST_STATE\r\n      return memo\r\n    }, {}),\r\n  },\r\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\r\n      state.byUrl[url] = {\r\n        current: null,\r\n        pendingUpdate: null,\r\n        ...state.byUrl[url],\r\n        loadingRequestId: requestId,\r\n        error: null,\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\r\n      const current = state.byUrl[url]?.current\r\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\r\n\r\n      // no-op if update does nothing\r\n      if (current) {\r\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\r\n\r\n        if (upgradeType === VersionUpgrade.NONE) return\r\n        if (loadingRequestId === null || loadingRequestId === requestId) {\r\n          state.byUrl[url] = {\r\n            ...state.byUrl[url],\r\n            loadingRequestId: null,\r\n            error: null,\r\n            current,\r\n            pendingUpdate: tokenList,\r\n          }\r\n        }\r\n      } else {\r\n        // activate if on default active\r\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\r\n          state.activeListUrls?.push(url)\r\n        }\r\n\r\n        state.byUrl[url] = {\r\n          ...state.byUrl[url],\r\n          loadingRequestId: null,\r\n          error: null,\r\n          current: tokenList,\r\n          pendingUpdate: null,\r\n        }\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\r\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\r\n        // no-op since it's not the latest request\r\n        return\r\n      }\r\n\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        loadingRequestId: null,\r\n        error: errorMessage,\r\n        current: null,\r\n        pendingUpdate: null,\r\n      }\r\n    })\r\n    .addCase(addList, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n    })\r\n    .addCase(removeList, (state, { payload: url }) => {\r\n      if (state.byUrl[url]) {\r\n        delete state.byUrl[url]\r\n      }\r\n      // remove list from active urls if needed\r\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\r\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\r\n      }\r\n    })\r\n    .addCase(enableList, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n\r\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\r\n        state.activeListUrls.push(url)\r\n      }\r\n\r\n      if (!state.activeListUrls) {\r\n        state.activeListUrls = [url]\r\n      }\r\n    })\r\n    .addCase(disableList, (state, { payload: url }) => {\r\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\r\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\r\n      }\r\n    })\r\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]?.pendingUpdate) {\r\n        throw new Error('accept list update called without pending update')\r\n      }\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        pendingUpdate: null,\r\n        current: state.byUrl[url].pendingUpdate,\r\n      }\r\n    })\r\n    .addCase(updateVersion, (state) => {\r\n      // state loaded from localStorage, but new lists have never been initialized\r\n      if (!state.lastInitializedDefaultListOfLists) {\r\n        state.byUrl = initialState.byUrl\r\n        state.activeListUrls = initialState.activeListUrls\r\n      } else if (state.lastInitializedDefaultListOfLists) {\r\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\r\n          (s, l) => s.add(l),\r\n          new Set(),\r\n        )\r\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\r\n\r\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\r\n          if (!lastInitializedSet.has(listUrl)) {\r\n            state.byUrl[listUrl] = NEW_LIST_STATE\r\n          }\r\n        })\r\n\r\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\r\n          if (!newListOfListsSet.has(listUrl)) {\r\n            delete state.byUrl[listUrl]\r\n          }\r\n        })\r\n      }\r\n\r\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\r\n\r\n      // if no active lists, activate defaults\r\n      if (!state.activeListUrls) {\r\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\r\n\r\n        // for each list on default list, initialize if needed\r\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\r\n          if (!state.byUrl[listUrl]) {\r\n            state.byUrl[listUrl] = NEW_LIST_STATE\r\n          }\r\n          return true\r\n        })\r\n      }\r\n    }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, typeInput } from './actions'\r\n\r\nexport interface BurnState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n}\r\n\r\nconst initialState: BurnState = {\r\n  independentField: Field.LIQUIDITY_PERCENT,\r\n  typedValue: '0',\r\n}\r\n\r\nexport default createReducer<BurnState>(initialState, (builder) =>\r\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n    return {\r\n      ...state,\r\n      independentField: field,\r\n      typedValue,\r\n    }\r\n  }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  addMulticallListeners,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  removeMulticallListeners,\r\n  toCallKey,\r\n  updateMulticallResults,\r\n} from './actions'\r\n\r\nexport interface MulticallState {\r\n  callListeners?: {\r\n    // on a per-chain basis\r\n    [chainId: number]: {\r\n      // stores for each call key the listeners' preferences\r\n      [callKey: string]: {\r\n        // stores how many listeners there are per each blocks per fetch preference\r\n        [blocksPerFetch: number]: number\r\n      }\r\n    }\r\n  }\r\n\r\n  callResults: {\r\n    [chainId: number]: {\r\n      [callKey: string]: {\r\n        data?: string | null\r\n        blockNumber?: number\r\n        fetchingBlockNumber?: number\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState: MulticallState = {\r\n  callResults: {},\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\r\n      const listeners: MulticallState['callListeners'] = state.callListeners\r\n        ? state.callListeners\r\n        : (state.callListeners = {})\r\n      listeners[chainId] = listeners[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\r\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\r\n      })\r\n    })\r\n    .addCase(\r\n      removeMulticallListeners,\r\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\r\n        const listeners: MulticallState['callListeners'] = state.callListeners\r\n          ? state.callListeners\r\n          : (state.callListeners = {})\r\n\r\n        if (!listeners[chainId]) return\r\n        calls.forEach((call) => {\r\n          const callKey = toCallKey(call)\r\n          if (!listeners[chainId][callKey]) return\r\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\r\n\r\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\r\n            delete listeners[chainId][callKey][blocksPerFetch]\r\n          } else {\r\n            listeners[chainId][callKey][blocksPerFetch]--\r\n          }\r\n        })\r\n      },\r\n    )\r\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) {\r\n          state.callResults[chainId][callKey] = {\r\n            fetchingBlockNumber,\r\n          }\r\n        } else {\r\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\r\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) return // only should be dispatched if we are already fetching\r\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\r\n          delete current.fetchingBlockNumber\r\n          current.data = null\r\n          current.blockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      Object.keys(results).forEach((callKey) => {\r\n        const current = state.callResults[chainId][callKey]\r\n        if ((current?.blockNumber ?? 0) > blockNumber) return\r\n        state.callResults[chainId][callKey] = {\r\n          data: results[callKey],\r\n          blockNumber,\r\n        }\r\n      })\r\n    }),\r\n)\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { useDispatch } from 'react-redux';\r\nimport farmsReducer from './farms'\r\nimport poolsReducer from './pools'\r\nimport blockReducer from './block'\r\n\r\nimport application from './application/reducer'\r\nimport { updateVersion } from './global/actions'\r\nimport user from './user/reducer'\r\nimport transactions from './transactions/reducer'\r\nimport swap from './swap/reducer'\r\nimport mint from './mint/reducer'\r\nimport lists from './lists/reducer'\r\nimport burn from './burn/reducer'\r\nimport multicall from './multicall/reducer'\r\n\r\nconst store = configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    block: blockReducer,\r\n    farms: farmsReducer,\r\n    pools: poolsReducer,\r\n\r\n    // Exchange\r\n    application,\r\n    user,\r\n    transactions,\r\n    swap,\r\n    mint,\r\n    burn,\r\n    multicall,\r\n    lists,\r\n  },\r\n})\r\n\r\nstore.dispatch(updateVersion())\r\n\r\n/**\r\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\r\n */\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type AppState = ReturnType<typeof store.getState>\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\n\r\nexport default store\r\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap/sdk'\r\nimport {\r\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\r\n  ALLOWED_PRICE_IMPACT_HIGH,\r\n  ALLOWED_PRICE_IMPACT_LOW,\r\n  ALLOWED_PRICE_IMPACT_MEDIUM,\r\n} from '../config/constants'\r\n\r\nimport { Field } from '../state/swap/actions'\r\nimport { basisPointsToPercent } from './index'\r\n\r\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\r\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\r\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\r\n\r\n// computes price breakdown for the trade\r\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\r\n  priceImpactWithoutFee: Percent | undefined\r\n  realizedLPFee: CurrencyAmount | undefined | null\r\n} {\r\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\r\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\r\n  const realizedLPFee = !trade\r\n    ? undefined\r\n    : ONE_HUNDRED_PERCENT.subtract(\r\n        trade.route.pairs.reduce<Fraction>(\r\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\r\n          ONE_HUNDRED_PERCENT,\r\n        ),\r\n      )\r\n\r\n  // remove lp fees from price impact\r\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\r\n\r\n  // the x*y=k impact\r\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\r\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\r\n    : undefined\r\n\r\n  // the amount of the input that accrues to LPs\r\n  const realizedLPFeeAmount =\r\n    realizedLPFee &&\r\n    trade &&\r\n    (trade.inputAmount instanceof TokenAmount\r\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\r\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\r\n\r\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\r\n}\r\n\r\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\r\nexport function computeSlippageAdjustedAmounts(\r\n  trade: Trade | undefined,\r\n  allowedSlippage: number,\r\n): { [field in Field]?: CurrencyAmount } {\r\n  const pct = basisPointsToPercent(allowedSlippage)\r\n  return {\r\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\r\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\r\n  }\r\n}\r\n\r\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\r\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\r\n  return 0\r\n}\r\n\r\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\r\n  if (!trade) {\r\n    return ''\r\n  }\r\n  return inverted\r\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\r\n        trade.outputAmount.currency.symbol\r\n      }`\r\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\r\n        trade.inputAmount.currency.symbol\r\n      }`\r\n}\r\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\r\nexport {\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  fetchCakeVaultPublicData,\r\n  fetchCakeVaultUserData,\r\n  fetchCakeVaultFees,\r\n  updateUserAllowance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n  updateUserStakedBalance,\r\n} from './pools'\r\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\r\nexport { setBlock } from './block'\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport interface Call {\r\n  address: string\r\n  callData: string\r\n}\r\n\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\r\nexport function toCallKey(call: Call): string {\r\n  if (!ADDRESS_REGEX.test(call.address)) {\r\n    throw new Error(`Invalid address: ${call.address}`)\r\n  }\r\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\r\n    throw new Error(`Invalid hex: ${call.callData}`)\r\n  }\r\n  return `${call.address}-${call.callData}`\r\n}\r\n\r\nexport function parseCallKey(callKey: string): Call {\r\n  const pcs = callKey.split('-')\r\n  if (pcs.length !== 2) {\r\n    throw new Error(`Invalid call key: ${callKey}`)\r\n  }\r\n  return {\r\n    address: pcs[0],\r\n    callData: pcs[1],\r\n  }\r\n}\r\n\r\nexport interface ListenerOptions {\r\n  // how often this data should be fetched, by default 1\r\n  readonly blocksPerFetch?: number\r\n}\r\n\r\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/addMulticallListeners',\r\n)\r\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/removeMulticallListeners',\r\n)\r\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\r\n  'multicall/fetchingMulticallResults',\r\n)\r\nexport const errorFetchingMulticallResults = createAction<{\r\n  chainId: number\r\n  calls: Call[]\r\n  fetchingBlockNumber: number\r\n}>('multicall/errorFetchingMulticallResults')\r\nexport const updateMulticallResults = createAction<{\r\n  chainId: number\r\n  blockNumber: number\r\n  results: {\r\n    [callKey: string]: string | null\r\n  }\r\n}>('multicall/updateMulticallResults')\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport interface SerializedToken {\r\n  chainId: number\r\n  address: string\r\n  decimals: number\r\n  symbol?: string\r\n  name?: string\r\n}\r\n\r\nexport interface SerializedPair {\r\n  token0: SerializedToken\r\n  token1: SerializedToken\r\n}\r\n\r\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\r\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\r\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\r\n  'user/updateUserSlippageTolerance',\r\n)\r\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\r\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\r\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\r\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\r\nexport const removeSerializedPair =\r\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\r\n\r\nexport const muteAudio = createAction<void>('user/muteAudio')\r\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\r\n","import React from 'react'\r\nimport { HelpIcon, useTooltip, Box, BoxProps } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\ninterface Props extends BoxProps {\r\n  text: string | React.ReactNode\r\n}\r\n\r\nconst QuestionWrapper = styled.div`\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst QuestionHelper: React.FC<Props> = ({ text, ...props }) => {\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement: 'right-end', trigger: 'hover' })\r\n\r\n  return (\r\n    <Box {...props}>\r\n      {tooltipVisible && tooltip}\r\n      <QuestionWrapper ref={targetRef}>\r\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\r\n      </QuestionWrapper>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default QuestionHelper\r\n","import BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\r\n\r\nexport const fetchPoolsBlockLimits = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n\r\n  const starts = await multicall(sousChefABI, callsStartBlock)\r\n  const ends = await multicall(sousChefABI, callsEndBlock)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStaking = async () => {\r\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'CXS')\r\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'CXS')\r\n\r\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.stakingToken.address),\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const callsBnbPools = bnbPool.map((poolConfig) => {\r\n    return {\r\n      address: getWbnbAddress(),\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\r\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\r\n\r\n  return [\r\n    ...nonBnbPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n    ...bnbPool.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n\r\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\r\n  try {\r\n    const sousContract = getSouschefV2Contract(sousId)\r\n    const stakingLimit = await sousContract.poolLimitPerUser()\r\n    return new BigNumber(stakingLimit.toString())\r\n  } catch (error) {\r\n    return BIG_ZERO\r\n  }\r\n}\r\n\r\nexport const fetchPoolsStakingLimits = async (\r\n  poolsWithStakingLimit: number[],\r\n): Promise<{ [key: string]: BigNumber }> => {\r\n  const validPools = poolsConfig\r\n    .filter((p) => p.stakingToken.symbol !== 'CXS' && !p.isFinished)\r\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\r\n\r\n  // Get the staking limit for each valid pool\r\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\r\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\r\n  const stakingLimits = await Promise.all(stakingLimitPromises)\r\n\r\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\r\n    return {\r\n      ...accum,\r\n      [validPools[index].sousId]: stakingLimit,\r\n    }\r\n  }, {})\r\n}\r\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterchefContract } from 'utils/contractHelpers'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport BigNumber from 'bignumber.js'\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'CXS')\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'CXS')\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\nconst masterChefContract = getMasterchefContract()\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'allowance',\r\n    params: [account, getAddress(p.contractAddress)],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\r\n\r\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.pendingCake('0', account)\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\r\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\nexport const fetchPublicVaultData = async () => {\r\n  try {\r\n    const calls = [\r\n      'getPricePerFullShare',\r\n      'totalShares',\r\n      'calculateHarvestCakeRewards',\r\n      'calculateTotalPendingCakeRewards',\r\n    ].map((method) => ({\r\n      address: getCakeVaultAddress(),\r\n      name: method,\r\n    }))\r\n\r\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\r\n      cakeVaultAbi,\r\n      calls,\r\n    )\r\n\r\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\r\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\r\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\r\n    return {\r\n      totalShares: totalSharesAsBigNumber.toJSON(),\r\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\r\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\r\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\r\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      totalShares: null,\r\n      pricePerFullShare: null,\r\n      totalCakeInVault: null,\r\n      estimatedCakeBountyReward: null,\r\n      totalPendingCakeHarvest: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchVaultFees = async () => {\r\n  try {\r\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\r\n      address: getCakeVaultAddress(),\r\n      name: method,\r\n    }))\r\n\r\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\r\n\r\n    return {\r\n      performanceFee: performanceFee.toNumber(),\r\n      callFee: callFee.toNumber(),\r\n      withdrawalFee: withdrawalFee.toNumber(),\r\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      performanceFee: null,\r\n      callFee: null,\r\n      withdrawalFee: null,\r\n      withdrawalFeePeriod: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchPublicVaultData\r\n","import BigNumber from 'bignumber.js'\r\nimport { getCakeVaultContract } from 'utils/contractHelpers'\r\n\r\nconst cakeVaultContract = getCakeVaultContract()\r\n\r\nconst fetchVaultUser = async (account: string) => {\r\n  try {\r\n    const userContractResponse = await cakeVaultContract.userInfo(account)\r\n    return {\r\n      isLoading: false,\r\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\r\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\r\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\r\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      isLoading: true,\r\n      userShares: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n      cakeAtLastUserAction: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchVaultUser\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\r\nimport { getPoolApr } from 'utils/apr'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\r\nimport fetchVaultUser from './fetchVaultUser'\r\nimport { getTokenPricesFromFarm } from './helpers'\r\n\r\nconst initialState: PoolsState = {\r\n  data: [...poolsConfig],\r\n  userDataLoaded: false,\r\n  cakeVault: {\r\n    totalShares: null,\r\n    pricePerFullShare: null,\r\n    totalCakeInVault: null,\r\n    estimatedCakeBountyReward: null,\r\n    totalPendingCakeHarvest: null,\r\n    fees: {\r\n      performanceFee: null,\r\n      callFee: null,\r\n      withdrawalFee: null,\r\n      withdrawalFeePeriod: null,\r\n    },\r\n    userData: {\r\n      isLoading: true,\r\n      userShares: null,\r\n      cakeAtLastUserAction: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n    },\r\n  },\r\n}\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\r\n  const blockLimits = await fetchPoolsBlockLimits()\r\n  const totalStakings = await fetchPoolsTotalStaking()\r\n\r\n  const prices = getTokenPricesFromFarm(getState().farms.data)\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\r\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\r\n\r\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\r\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\r\n\r\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\r\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\r\n    const apr = !isPoolFinished\r\n      ? getPoolApr(\r\n        stakingTokenPrice,\r\n        earningTokenPrice,\r\n        getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\r\n        parseFloat(pool.tokenPerBlock),\r\n      )\r\n      : 0\r\n\r\n    return {\r\n      ...blockLimit,\r\n      ...totalStaking,\r\n      stakingTokenPrice,\r\n      earningTokenPrice,\r\n      apr,\r\n      isFinished: isPoolFinished,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\r\n  const poolsWithStakingLimit = getState()\r\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\r\n    .map((pool) => pool.sousId)\r\n\r\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\r\n\r\n  const stakingLimitData = poolsConfig.map((pool) => {\r\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\r\n      return { sousId: pool.sousId }\r\n    }\r\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\r\n    return {\r\n      sousId: pool.sousId,\r\n      stakingLimit: stakingLimit.toJSON(),\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(stakingLimitData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync =\r\n  (account: string) =>\r\n    async (dispatch) => {\r\n      const allowances = await fetchPoolsAllowance(account)\r\n      const stakingTokenBalances = await fetchUserBalances(account)\r\n      const stakedBalances = await fetchUserStakeBalances(account)\r\n      const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n      const userData = poolsConfig.map((pool) => ({\r\n        sousId: pool.sousId,\r\n        allowance: allowances[pool.sousId],\r\n        stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n        stakedBalance: stakedBalances[pool.sousId],\r\n        pendingReward: pendingRewards[pool.sousId],\r\n      }))\r\n\r\n      dispatch(setPoolsUserData(userData))\r\n    }\r\n\r\nexport const updateUserAllowance =\r\n  (sousId: number, account: string): AppThunk =>\r\n    async (dispatch) => {\r\n      const allowances = await fetchPoolsAllowance(account)\r\n      dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n    }\r\n\r\nexport const updateUserBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n    async (dispatch) => {\r\n      const tokenBalances = await fetchUserBalances(account)\r\n      dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n    }\r\n\r\nexport const updateUserStakedBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n    async (dispatch) => {\r\n      const stakedBalances = await fetchUserStakeBalances(account)\r\n      dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n    }\r\n\r\nexport const updateUserPendingReward =\r\n  (sousId: number, account: string): AppThunk =>\r\n    async (dispatch) => {\r\n      const pendingRewards = await fetchUserPendingRewards(account)\r\n      dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n    }\r\n\r\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\r\n  const publicVaultInfo = await fetchPublicVaultData()\r\n  return publicVaultInfo\r\n})\r\n\r\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\r\n  const vaultFees = await fetchVaultFees()\r\n  return vaultFees\r\n})\r\n\r\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\r\n  'cakeVault/fetchUser',\r\n  async ({ account }) => {\r\n    const userData = await fetchVaultUser(account)\r\n    return userData\r\n  },\r\n)\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n      state.userDataLoaded = true\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n\r\n      if (index >= 0) {\r\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Vault public data that updates frequently\r\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\r\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\r\n    })\r\n    // Vault fees\r\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\r\n      const fees = action.payload\r\n      state.cakeVault = { ...state.cakeVault, fees }\r\n    })\r\n    // Vault user data\r\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\r\n      const userData = action.payload\r\n      userData.isLoading = false\r\n      state.cakeVault = { ...state.cakeVault, userData }\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\nexport default PoolsSlice.reducer\r\n","import { ChainId } from '@pancakeswap/sdk';\r\nimport tokens from './tokens';\r\nimport { PoolConfig, PoolCategory } from './types';\r\nimport ContractAddress from './contracts';\r\n\r\nconst pools: PoolConfig[] = [\r\n  {\r\n    sousId: 0,\r\n    stakingToken: tokens.pcn,\r\n    earningToken: tokens.pcn,\r\n    contractAddress: {\r\n      [ChainId.MAINNET]: String(ContractAddress.masterChef[ChainId.MAINNET]),\r\n      [ChainId.TESTNET]: String(ContractAddress.masterChef[ChainId.TESTNET]),\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '10',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n  }\r\n]\r\n\r\nexport default pools\r\n","import { useContext } from 'react'\r\nimport { ToastsContext } from 'contexts/ToastsContext'\r\n\r\nconst useToast = () => {\r\n  const toastContext = useContext(ToastsContext)\r\n\r\n  if (toastContext === undefined) {\r\n    throw new Error('Toasts context undefined')\r\n  }\r\n\r\n  return toastContext\r\n}\r\n\r\nexport default useToast\r\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport ERC20_INTERFACE from 'config/abi/erc20'\r\nimport { useAllTokens } from 'hooks/Tokens'\r\nimport { useMulticallContract } from 'hooks/useContract'\r\nimport { isAddress } from 'utils'\r\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\r\n\r\n/**\r\n * Returns a map of the given addresses to their eventually consistent BNB balances.\r\n */\r\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\r\n  [address: string]: CurrencyAmount | undefined\r\n} {\r\n  const multicallContract = useMulticallContract()\r\n\r\n  const addresses: string[] = useMemo(\r\n    () =>\r\n      uncheckedAddresses\r\n        ? uncheckedAddresses\r\n          .map(isAddress)\r\n          .filter((a): a is string => a !== false)\r\n          .sort()\r\n        : [],\r\n    [uncheckedAddresses],\r\n  )\r\n\r\n  const results = useSingleContractMultipleData(\r\n    multicallContract,\r\n    'getEthBalance',\r\n    addresses.map((address) => [address]),\r\n  )\r\n\r\n  return useMemo(\r\n    () =>\r\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\r\n        const value = results?.[i]?.result?.[0]\r\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\r\n        return memo\r\n      }, {}),\r\n    [addresses, results],\r\n  )\r\n}\r\n\r\n/**\r\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\r\n */\r\nexport function useTokenBalancesWithLoadingIndicator(\r\n  address?: string,\r\n  tokens?: (Token | undefined)[],\r\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\r\n  const validatedTokens: Token[] = useMemo(\r\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\r\n    [tokens],\r\n  )\r\n\r\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\r\n\r\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\r\n\r\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\r\n\r\n  return [\r\n    useMemo(\r\n      () =>\r\n        address && validatedTokens.length > 0\r\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\r\n            const value = balances?.[i]?.result?.[0]\r\n            const amount = value ? JSBI.BigInt(value.toString()) : undefined\r\n            if (amount) {\r\n              memo[token.address] = new TokenAmount(token, amount)\r\n            }\r\n            return memo\r\n          }, {})\r\n          : {},\r\n      [address, validatedTokens, balances],\r\n    ),\r\n    anyLoading,\r\n  ]\r\n}\r\n\r\nexport function useTokenBalances(\r\n  address?: string,\r\n  tokens?: (Token | undefined)[],\r\n): { [tokenAddress: string]: TokenAmount | undefined } {\r\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\r\n}\r\n\r\n// get the balance for a single token/account combo\r\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\r\n  const tokenBalances = useTokenBalances(account, [token])\r\n  if (!token) return undefined\r\n  return tokenBalances[token.address]\r\n}\r\n\r\nexport function useCurrencyBalances(\r\n  account?: string,\r\n  currencies?: (Currency | undefined)[],\r\n): (CurrencyAmount | undefined)[] {\r\n  const tokens = useMemo(\r\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\r\n    [currencies],\r\n  )\r\n\r\n\r\n  const tokenBalances = useTokenBalances(account, tokens)\r\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\r\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\r\n\r\n  return useMemo(\r\n    () =>\r\n      currencies?.map((currency) => {\r\n        if (!account || !currency) return undefined\r\n        if (currency instanceof Token) return tokenBalances[currency.address]\r\n        if (currency === ETHER) return ethBalance[account]\r\n        return undefined\r\n      }) ?? [],\r\n    [account, currencies, ethBalance, tokenBalances],\r\n  )\r\n}\r\n\r\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\r\n  return useCurrencyBalances(account, [currency])[0]\r\n}\r\n\r\n// mimics useAllBalances\r\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\r\n  const { account } = useWeb3React()\r\n  const allTokens = useAllTokens()\r\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\r\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\r\n  return balances ?? {}\r\n}\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\r\nimport { ThemeContext } from 'contexts/ThemeContext'\r\n\r\nconst useTheme = () => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext)\r\n  const theme = useContext(StyledThemeContext)\r\n  return { isDark, toggleTheme, theme }\r\n}\r\n\r\nexport default useTheme\r\n","import styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst Card = styled(Box) <{\r\n  width?: string\r\n  padding?: string\r\n  border?: string\r\n  borderRadius?: string\r\n}>`\r\n  width: ${({ width }) => width ?? '100%'};\r\n  padding: 1.25rem;\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\nexport default Card\r\n\r\nexport const LightCard = styled(Card)`\r\n  border: 1px solid ${({ theme }) => theme.colors.background};\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n`\r\n\r\nexport const LightGreyCard = styled(Card)`\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\n\r\nexport const GreyCard = styled(Card)`\r\n  border-radius:16px;\r\n  background-color: ${({ theme }) => theme.colors.dropdown};\r\n`\r\n","import { Language } from '@pancakeswap/uikit'\r\n\r\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\r\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\r\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\r\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\r\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\r\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\r\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\r\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\r\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\r\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\r\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\r\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\r\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\r\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\r\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\r\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\r\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\r\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\r\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\r\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\r\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\r\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\r\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\r\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\r\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\r\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\r\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\r\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\r\n\r\nexport const languages = {\r\n  'ar-SA': AR,\r\n  'bn-BD': BN,\r\n  'en-US': EN,\r\n  'de-DE': DE,\r\n  'el-GR': EL,\r\n  'es-ES': ESES,\r\n  'fi-FI': FI,\r\n  'fil-PH': FIL,\r\n  'fr-FR': FR,\r\n  'hi-IN': HI,\r\n  'hu-HU': HU,\r\n  'id-ID': ID,\r\n  'it-IT': IT,\r\n  'ja-JP': JA,\r\n  'ko-KR': KO,\r\n  'nl-NL': NL,\r\n  'pl-PL': PL,\r\n  'pt-BR': PTBR,\r\n  'pt-PT': PTPT,\r\n  'ro-RO': RO,\r\n  'ru-RU': RU,\r\n  'sv-SE': SVSE,\r\n  'ta-IN': TA,\r\n  'tr-TR': TR,\r\n  'uk-UA': UK,\r\n  'vi-VN': VI,\r\n  'zh-CN': ZHCN,\r\n  'zh-TW': ZHTW,\r\n}\r\n\r\nexport const languageList = Object.values(languages)\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst UnlockButton = (props) => {\r\n  const { t } = useTranslation()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n\r\n  return (\r\n    <Button style={{ borderRadius: '16px' }} onClick={onPresentConnectModal} {...props}>\r\n      {t('Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import { ChainId } from '@pancakeswap/sdk';\r\nimport BigNumber from 'bignumber.js'\r\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\r\n\r\nexport interface Address {\r\n  [ChainId.TESTNET]: string\r\n  [ChainId.MAINNET]: string\r\n}\r\n\r\nexport interface Token {\r\n  symbol: string\r\n  address?: Address\r\n  decimals?: number\r\n  projectLink?: string\r\n  busdPrice?: string\r\n}\r\n\r\nexport enum PoolIds {\r\n  poolBasic = 'poolBasic',\r\n  poolUnlimited = 'poolUnlimited',\r\n}\r\n\r\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\r\n\r\ninterface IfoPoolInfo {\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  distributionRatio: number // Range [0-1]\r\n}\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  currency: Token\r\n  token: Token\r\n  releaseBlockNumber: number\r\n  articleUrl: string\r\n  campaignId: string\r\n  tokenOfferingPrice: number\r\n  version: number\r\n  [PoolIds.poolBasic]?: IfoPoolInfo\r\n  [PoolIds.poolUnlimited]: IfoPoolInfo\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n  'AUTO' = 'Auto',\r\n}\r\n\r\nexport interface FarmConfig {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  token: Token\r\n  quoteToken: Token\r\n  multiplier?: string\r\n  isCommunity?: boolean\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n}\r\n\r\nexport interface PoolConfig {\r\n  sousId: number\r\n  earningToken: Token\r\n  stakingToken: Token\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n  enableEmergencyWithdraw?: boolean\r\n}\r\n\r\nexport type Images = {\r\n  lg: string\r\n  md: string\r\n  sm: string\r\n  ipfs?: string\r\n}\r\n\r\nexport type NftImages = {\r\n  blur?: string\r\n} & Images\r\n\r\nexport type NftVideo = {\r\n  webm: string\r\n  mp4: string\r\n}\r\n\r\nexport type NftSource = {\r\n  [key in NftType]: {\r\n    address: Address\r\n    identifierKey: string\r\n  }\r\n}\r\n\r\nexport enum NftType {\r\n  PANCAKE = 'pancake',\r\n  MIXIE = 'mixie',\r\n}\r\n\r\nexport type Nft = {\r\n  description: string\r\n  name: string\r\n  images: NftImages\r\n  sortOrder: number\r\n  type: NftType\r\n  video?: NftVideo\r\n\r\n  // Uniquely identifies the nft.\r\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\r\n  identifier: string\r\n\r\n  // Used to be \"bunnyId\". Used when minting NFT\r\n  variationId?: number | string\r\n}\r\n\r\nexport type TeamImages = {\r\n  alt: string\r\n} & Images\r\n\r\nexport type Team = {\r\n  id: number\r\n  name: string\r\n  description: string\r\n  isJoinable?: boolean\r\n  users: number\r\n  points: number\r\n  images: TeamImages\r\n  background: string\r\n  textColor: string\r\n}\r\n\r\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\r\n\r\nexport type Campaign = {\r\n  id: string\r\n  type: CampaignType\r\n  title?: TranslatableText\r\n  description?: TranslatableText\r\n  badge?: string\r\n}\r\n\r\nexport type PageMeta = {\r\n  title: string\r\n  description?: string\r\n  image?: string\r\n}\r\n\r\nexport enum LotteryStatus {\r\n  PENDING = 'pending',\r\n  OPEN = 'open',\r\n  CLOSE = 'close',\r\n  CLAIMABLE = 'claimable',\r\n}\r\n\r\nexport interface LotteryTicket {\r\n  id: string\r\n  number: string\r\n  status: boolean\r\n  rewardBracket?: number\r\n  roundId?: string\r\n  cakeReward?: SerializedBigNumber\r\n}\r\n\r\nexport interface LotteryTicketClaimData {\r\n  ticketsWithUnclaimedRewards: LotteryTicket[]\r\n  allWinningTickets: LotteryTicket[]\r\n  cakeTotal: BigNumber\r\n  roundId: string\r\n}\r\n","import { TransactionResponse } from '@ethersproject/providers'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { addTransaction } from './actions'\r\nimport { TransactionDetails } from './reducer'\r\n\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder(): (\r\n  response: TransactionResponse,\r\n  customData?: {\r\n    summary?: string\r\n    approval?: { tokenAddress: string; spender: string }\r\n    claim?: { recipient: string }\r\n  },\r\n) => void {\r\n  const { chainId, account } = useWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (\r\n      response: TransactionResponse,\r\n      {\r\n        summary,\r\n        approval,\r\n        claim,\r\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\r\n    ) => {\r\n      if (!account) return\r\n      if (!chainId) return\r\n\r\n      const { hash } = response\r\n      if (!hash) {\r\n        throw Error('No transaction hash found.')\r\n      }\r\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\r\n    },\r\n    [dispatch, chainId, account],\r\n  )\r\n}\r\n\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\r\n  const { chainId } = useWeb3React()\r\n\r\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\r\n\r\n  return chainId ? state[chainId] ?? {} : {}\r\n}\r\n\r\nexport function useIsTransactionPending(transactionHash?: string): boolean {\r\n  const transactions = useAllTransactions()\r\n\r\n  if (!transactionHash || !transactions[transactionHash]) return false\r\n\r\n  return !transactions[transactionHash].receipt\r\n}\r\n\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\r\n  return new Date().getTime() - tx.addedTime < 86_400_000\r\n}\r\n\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\r\n  const allTransactions = useAllTransactions()\r\n  return useMemo(\r\n    () =>\r\n      typeof tokenAddress === 'string' &&\r\n      typeof spender === 'string' &&\r\n      Object.keys(allTransactions).some((hash) => {\r\n        const tx = allTransactions[hash]\r\n        if (!tx) return false\r\n        if (tx.receipt) {\r\n          return false\r\n        }\r\n        const { approval } = tx\r\n        if (!approval) return false\r\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\r\n      }),\r\n    [allTransactions, spender, tokenAddress],\r\n  )\r\n}\r\n","import { ethers } from 'ethers'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\n\r\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\r\n\r\nexport default null\r\n","import { parseUnits } from '@ethersproject/units'\r\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\r\nimport { ParsedQs } from 'qs'\r\nimport { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useENS from 'hooks/ENS/useENS'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCurrency } from 'hooks/Tokens'\r\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport { isAddress } from 'utils'\r\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { useCurrencyBalances } from '../wallet/hooks'\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\r\nimport { SwapState } from './reducer'\r\nimport { useUserSlippageTolerance } from '../user/hooks'\r\n\r\nexport function useSwapState(): AppState['swap'] {\r\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\r\n}\r\n\r\nexport function useSwapActionHandlers(): {\r\n  onCurrencySelection: (field: Field, currency: Currency) => void\r\n  onSwitchTokens: () => void\r\n  onUserInput: (field: Field, typedValue: string) => void\r\n  onChangeRecipient: (recipient: string | null) => void\r\n} {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const onCurrencySelection = useCallback(\r\n    (field: Field, currency: Currency) => {\r\n      dispatch(\r\n        selectCurrency({\r\n          field,\r\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'CXS' : '',\r\n        }),\r\n      )\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  const onSwitchTokens = useCallback(() => {\r\n    dispatch(switchCurrencies())\r\n  }, [dispatch])\r\n\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      dispatch(typeInput({ field, typedValue }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  const onChangeRecipient = useCallback(\r\n    (recipient: string | null) => {\r\n      dispatch(setRecipient({ recipient }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return {\r\n    onSwitchTokens,\r\n    onCurrencySelection,\r\n    onUserInput,\r\n    onChangeRecipient,\r\n  }\r\n}\r\n\r\n// try to parse a user entered amount for a given token\r\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\r\n  if (!value || !currency) {\r\n    return undefined\r\n  }\r\n  try {\r\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\r\n    if (typedValueParsed !== '0') {\r\n      return currency instanceof Token\r\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\r\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\r\n    }\r\n  } catch (error) {\r\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\r\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\r\n  }\r\n  // necessary for all paths to return a value\r\n  return undefined\r\n}\r\n\r\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\r\n  process.env.REACT_APP_FACTORY, // v2 factory\r\n  process.env.REACT_APP_ROUTER, // v2 router 01\r\n  process.env.REACT_APP_ROUTER, // v2 router 02\r\n]\r\n\r\n/**\r\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\r\n * @param trade to check for the given address\r\n * @param checksummedAddress address to check in the pairs and tokens\r\n */\r\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\r\n  return (\r\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\r\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\r\n  )\r\n}\r\n\r\n// from the current swap inputs, compute the best trade and return it.\r\nexport function useDerivedSwapInfo(): {\r\n  currencies: { [field in Field]?: Currency }\r\n  currencyBalances: { [field in Field]?: CurrencyAmount }\r\n  parsedAmount: CurrencyAmount | undefined\r\n  v2Trade: Trade | undefined\r\n  inputError?: string\r\n} {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const {\r\n    independentField,\r\n    typedValue,\r\n    [Field.INPUT]: { currencyId: inputCurrencyId },\r\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\r\n    recipient,\r\n  } = useSwapState()\r\n\r\n  const inputCurrency = useCurrency(inputCurrencyId)\r\n  const outputCurrency = useCurrency(outputCurrencyId)\r\n  const recipientLookup = useENS(recipient ?? undefined)\r\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\r\n\r\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\r\n    inputCurrency ?? undefined,\r\n    outputCurrency ?? undefined,\r\n  ])\r\n\r\n  const isExactIn: boolean = independentField === Field.INPUT\r\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\r\n\r\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\r\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\r\n\r\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\r\n\r\n  const currencyBalances = {\r\n    [Field.INPUT]: relevantTokenBalances[0],\r\n    [Field.OUTPUT]: relevantTokenBalances[1],\r\n  }\r\n\r\n  const currencies: { [field in Field]?: Currency } = {\r\n    [Field.INPUT]: inputCurrency ?? undefined,\r\n    [Field.OUTPUT]: outputCurrency ?? undefined,\r\n  }\r\n\r\n  let inputError: string | undefined\r\n  if (!account) {\r\n    inputError = 'Connect Wallet'\r\n  }\r\n\r\n  if (!parsedAmount) {\r\n    inputError = inputError ?? 'Enter an amount'\r\n  }\r\n\r\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\r\n    inputError = inputError ?? 'Select a token'\r\n  }\r\n\r\n  const formattedTo = isAddress(to)\r\n  if (!to || !formattedTo) {\r\n    inputError = inputError ?? 'Enter a recipient'\r\n  } else if (\r\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\r\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\r\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\r\n  ) {\r\n    inputError = inputError ?? 'Invalid recipient'\r\n  }\r\n\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\r\n\r\n  // compare input balance to max input based on version\r\n  const [balanceIn, amountIn] = [\r\n    currencyBalances[Field.INPUT],\r\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\r\n  ]\r\n\r\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\r\n    inputError = `Insufficient ${amountIn.currency.symbol} balance`\r\n  }\r\n\r\n  return {\r\n    currencies,\r\n    currencyBalances,\r\n    parsedAmount,\r\n    v2Trade: v2Trade ?? undefined,\r\n    inputError,\r\n  }\r\n}\r\n\r\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\r\n  if (typeof urlParam === 'string') {\r\n    const valid = isAddress(urlParam)\r\n    if (valid) return valid\r\n    if (urlParam.toUpperCase() === 'CXS') return 'CXS'\r\n    if (valid === false) return 'CXS'\r\n  }\r\n  return 'CXS' ?? ''\r\n}\r\n\r\nfunction parseTokenAmountURLParameter(urlParam: any): string {\r\n  // eslint-disable-next-line no-restricted-globals\r\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\r\n}\r\n\r\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\r\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\r\n}\r\n\r\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nfunction validatedRecipient(recipient: any): string | null {\r\n  if (typeof recipient !== 'string') return null\r\n  const address = isAddress(recipient)\r\n  if (address) return address\r\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\r\n  if (ADDRESS_REGEX.test(recipient)) return recipient\r\n  return null\r\n}\r\n\r\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\r\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\r\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\r\n  if (inputCurrency === outputCurrency) {\r\n    if (typeof parsedQs.outputCurrency === 'string') {\r\n      inputCurrency = ''\r\n    } else {\r\n      outputCurrency = ''\r\n    }\r\n  }\r\n\r\n  const recipient = validatedRecipient(parsedQs.recipient)\r\n\r\n  return {\r\n    [Field.INPUT]: {\r\n      currencyId: inputCurrency,\r\n    },\r\n    [Field.OUTPUT]: {\r\n      currencyId: outputCurrency,\r\n    },\r\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\r\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\r\n    recipient,\r\n  }\r\n}\r\n\r\n// updates the swap state to use the defaults for a given network\r\nexport function useDefaultsFromURLSearch():\r\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\r\n  | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const parsedQs = useParsedQueryString()\r\n  const [result, setResult] = useState<\r\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\r\n  >()\r\n\r\n  useEffect(() => {\r\n    if (!chainId) return\r\n    const parsed = queryParametersToSwapState(parsedQs)\r\n\r\n    dispatch(\r\n      replaceSwapState({\r\n        typedValue: parsed.typedValue,\r\n        field: parsed.independentField,\r\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\r\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\r\n        recipient: null,\r\n      }),\r\n    )\r\n\r\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, chainId])\r\n\r\n  return result\r\n}\r\n","import { parse, ParsedQs } from 'qs'\r\nimport { useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function useParsedQueryString(): ParsedQs {\r\n  const { search } = useLocation()\r\n  return useMemo(\r\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\r\n    [search],\r\n  )\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { ChainId } from '@pancakeswap/sdk'\r\n\r\nexport interface SerializableTransactionReceipt {\r\n  to: string\r\n  from: string\r\n  contractAddress: string\r\n  transactionIndex: number\r\n  blockHash: string\r\n  transactionHash: string\r\n  blockNumber: number\r\n  status?: number\r\n}\r\n\r\nexport const addTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  from: string\r\n  approval?: { tokenAddress: string; spender: string }\r\n  claim?: { recipient: string }\r\n  summary?: string\r\n}>('transactions/addTransaction')\r\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\r\nexport const finalizeTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  receipt: SerializableTransactionReceipt\r\n}>('transactions/finalizeTransaction')\r\nexport const checkedTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  blockNumber: number\r\n}>('transactions/checkedTransaction')\r\n","export const tokenEarnedPerThousandDollarsCompounding = ({\r\n  numberOfDays,\r\n  farmApr,\r\n  tokenPrice,\r\n  roundingDecimals = 2,\r\n  compoundFrequency = 1,\r\n  performanceFee = 0,\r\n}) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\r\n  const timesCompounded = 365 * compoundFrequency\r\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  let aprAsDecimal = farmApr / 100\r\n\r\n  if (performanceFee) {\r\n    // Reduce the APR by the % performance fee\r\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\r\n    const aprAfterFee = farmApr - feeRelativeToApr\r\n    aprAsDecimal = aprAfterFee / 100\r\n  }\r\n\r\n  const daysAsDecimalOfYear = numberOfDays / 365\r\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\r\n  const principal = 1000 / tokenPrice\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n\r\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\r\n}\r\n\r\nexport const getRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage\r\n}\r\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\n\r\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\r\n\r\nexport enum PairState {\r\n  LOADING,\r\n  NOT_EXISTS,\r\n  EXISTS,\r\n  INVALID,\r\n}\r\n\r\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const tokens = useMemo(\r\n    () =>\r\n      currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId),\r\n      ]),\r\n    [chainId, currencies],\r\n  )\r\n  const pairAddresses = useMemo(\r\n    () =>\r\n      tokens.map(([tokenA, tokenB]) => {\r\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\r\n      }),\r\n    [tokens],\r\n  )\r\n\r\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\r\n\r\n  return useMemo(() => {\r\n    return results.map((result, i) => {\r\n      const { result: reserves, loading } = result\r\n      const tokenA = tokens[i][0]\r\n      const tokenB = tokens[i][1]\r\n\r\n      if (loading) return [PairState.LOADING, null]\r\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\r\n      if (!reserves) return [PairState.NOT_EXISTS, null]\r\n      const { reserve0, reserve1 } = reserves\r\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return [\r\n        PairState.EXISTS,\r\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\r\n      ]\r\n    })\r\n  }, [results, tokens])\r\n}\r\n\r\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\r\n  return usePairs([[tokenA, tokenB]])[0]\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\n// modified from https://usehooks.com/useDebounce/\r\nexport default function useDebounce<T>(value: T, delay: number): T {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\r\n\r\n  useEffect(() => {\r\n    // Update debounced value after delay\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value)\r\n    }, delay)\r\n\r\n    // Cancel the timeout if value changes (also on delay change or unmount)\r\n    // This is how we prevent debounced value from updating if value is changed ...\r\n    // .. within the delay period. Timeout gets cleared and restarted.\r\n    return () => {\r\n      clearTimeout(handler)\r\n    }\r\n  }, [value, delay])\r\n\r\n  return debouncedValue\r\n}\r\n","const getTokenLogoURL = (address: string) =>\r\n  `https://raw.githubusercontent.com/Nextep-Blockchain/token-logo/main/main/icons/${address.toLocaleLowerCase()}.svg`\r\n\r\nexport default getTokenLogoURL\r\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { BinanceIcon } from '@pancakeswap/uikit'\r\nimport React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\r\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\r\nimport Logo from './Logo'\r\n\r\nconst StyledLogo = styled(Logo) <{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function CurrencyLogo({\r\n  currency,\r\n  size = '24px',\r\n  style,\r\n}: {\r\n  currency?: Currency\r\n  size?: string\r\n  style?: React.CSSProperties\r\n}) {\r\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\r\n\r\n  const srcs: string[] = useMemo(() => {\r\n    if (currency === ETHER) return []\r\n\r\n    if (currency instanceof Token) {\r\n      if (currency instanceof WrappedTokenInfo) {\r\n        return [...uriLocations, getTokenLogoURL(currency.address)]\r\n      }\r\n      return [getTokenLogoURL(currency.address)]\r\n    }\r\n    return []\r\n  }, [currency, uriLocations])\r\n\r\n  if (currency === ETHER) {\r\n    return <BinanceIcon width={size} style={style} />\r\n  }\r\n\r\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\r\n}\r\n","/**\r\n * Returns true if the string value is zero in hex\r\n * @param hexNumberString\r\n */\r\nexport default function isZero(hexNumberString: string) {\r\n  return /^0x0*$/.test(hexNumberString)\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk';\r\nimport tokens from './tokens'\r\nimport { FarmConfig } from './types'\r\nimport ContractAddress from './contracts';\r\n\r\nconst priceHelperLps: FarmConfig[] = [\r\n  /**\r\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\r\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\r\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\r\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\r\n   * Before storing to redux, farms without a PID are filtered out.\r\n   */\r\n  {\r\n    pid: 1,\r\n    lpSymbol: 'PCN-CXS LP',\r\n    lpAddresses: {\r\n      [ChainId.MAINNET]: String(ContractAddress.cxsPcnLp[ChainId.MAINNET]),\r\n      [ChainId.TESTNET]: String(ContractAddress.cxsPcnLp[ChainId.TESTNET]),\r\n    },\r\n    token: tokens.pcn,\r\n    quoteToken: tokens.wcxs,\r\n  },\r\n  {\r\n    pid: 2,\r\n    lpSymbol: 'BUSD-CXS LP',\r\n    lpAddresses: {\r\n      [ChainId.MAINNET]: String(ContractAddress.cxsBusdLp[ChainId.MAINNET]),\r\n      [ChainId.TESTNET]: String(ContractAddress.cxsBusdLp[ChainId.TESTNET]),\r\n    },\r\n    token: tokens.busd,\r\n    quoteToken: tokens.wcxs,\r\n  },\r\n]\r\n\r\nexport default priceHelperLps\r\n","import BigNumber from 'bignumber.js'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\r\nimport multicall from 'utils/multicall'\r\nimport { Farm, SerializedBigNumber } from '../types'\r\n\r\ntype PublicFarmData = {\r\n  tokenAmountMc: SerializedBigNumber\r\n  quoteTokenAmountMc: SerializedBigNumber\r\n  tokenAmountTotal: SerializedBigNumber\r\n  quoteTokenAmountTotal: SerializedBigNumber\r\n  lpTotalInQuoteToken: SerializedBigNumber\r\n  lpTotalSupply: SerializedBigNumber\r\n  tokenPriceVsQuote: SerializedBigNumber\r\n  poolWeight: SerializedBigNumber\r\n  multiplier: string\r\n}\r\n\r\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\r\n  const { pid, lpAddresses, token, quoteToken } = farm\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const calls = [\r\n    // Balance of token in the LP contract\r\n    {\r\n      address: getAddress(token.address),\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of quote token on LP contract\r\n    {\r\n      address: getAddress(quoteToken.address),\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of LP tokens in the master chef contract\r\n    {\r\n      address: lpAddress,\r\n      name: 'balanceOf',\r\n      params: [getMasterChefAddress()],\r\n    },\r\n    // Total supply of LP tokens\r\n    {\r\n      address: lpAddress,\r\n      name: 'totalSupply',\r\n    },\r\n    // Token decimals\r\n    {\r\n      address: getAddress(token.address),\r\n      name: 'decimals',\r\n    },\r\n    // Quote token decimals\r\n    {\r\n      address: getAddress(quoteToken.address),\r\n      name: 'decimals',\r\n    },\r\n  ]\r\n\r\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\r\n    await multicall(erc20, calls)\r\n\r\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\r\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n  // Raw amount of token in the LP, including those not staked\r\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\r\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\r\n\r\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\r\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\r\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\r\n\r\n  // Total staked in LP, in quote token value\r\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\r\n\r\n  // Only make masterchef calls if farm has pid\r\n  const [info, totalAllocPoint] =\r\n    pid || pid === 0\r\n      ? await multicall(masterchefABI, [\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'poolInfo',\r\n          params: [pid],\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'totalAllocPoint',\r\n        },\r\n      ])\r\n      : [null, null]\r\n\r\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\r\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\r\n\r\n  return {\r\n    tokenAmountMc: tokenAmountMc.toJSON(),\r\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\r\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\r\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\r\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\r\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\r\n    poolWeight: poolWeight.toJSON(),\r\n    multiplier: `${allocPoint.div(100).toString()}X`,\r\n  }\r\n}\r\n\r\nexport default fetchFarm\r\n","import { Farm } from 'state/types'\r\nimport fetchPublicFarmData from './fetchPublicFarmData'\r\n\r\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\r\n  const farmPublicData = await fetchPublicFarmData(farm)\r\n\r\n  return { ...farm, ...farmPublicData }\r\n}\r\n\r\nexport default fetchFarm\r\n","import { FarmConfig } from 'config/constants/types'\r\nimport fetchFarm from './fetchFarm'\r\n\r\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\r\n  const data = await Promise.all(\r\n    farmsToFetch.map(async (farmConfig) => {\r\n      const farm = await fetchFarm(farmConfig)\r\n      return farm\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import BigNumber from 'bignumber.js'\r\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\r\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\r\nimport { Farm } from 'state/types'\r\n\r\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\r\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\r\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\r\n  return filteredFarm\r\n}\r\n\r\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\r\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\r\n\r\n  if (farm.quoteToken.symbol === 'BUSD') {\r\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === 'WCXS') {\r\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  // Possible alternative farm quoteTokens:\r\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\r\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\r\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\r\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\r\n  if (quoteTokenFarm.quoteToken.symbol === 'WCXS') {\r\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\r\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\r\n  return BIG_ZERO\r\n}\r\n\r\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\r\n  if (farm.quoteToken.symbol === 'BUSD') {\r\n    return BIG_ONE\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === 'WCXS') {\r\n    return bnbPriceBusd\r\n  }\r\n\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'WCXS') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  return BIG_ZERO\r\n}\r\n\r\nconst fetchFarmsPrices = async (farms) => {\r\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 2)\r\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\r\n\r\n  const farmsWithPrices = farms.map((farm) => {\r\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\r\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\r\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\r\n    return { ...farm, token, quoteToken }\r\n  })\r\n\r\n  return farmsWithPrices\r\n}\r\n\r\nexport default fetchFarmsPrices\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { FarmConfig } from 'config/constants/types'\r\n\r\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\r\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\r\n  })\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'pendingCake',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(masterchefABI, calls)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n  return parsedEarnings\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport isArchivedPid from 'utils/farmHelpers'\r\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\r\nimport fetchFarms from './fetchFarms'\r\nimport fetchFarmsPrices from './fetchFarmsPrices'\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n} from './fetchFarmUser'\r\nimport { FarmsState, Farm } from '../types'\r\n\r\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\r\n  ...farm,\r\n  userData: {\r\n    allowance: '0',\r\n    tokenBalance: '0',\r\n    stakedBalance: '0',\r\n    earnings: '0',\r\n  },\r\n}))\r\n\r\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\r\n\r\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\r\n\r\n// Async thunks\r\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\r\n  'farms/fetchFarmsPublicDataAsync',\r\n  async (pids) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n\r\n    // Add price helper farms\r\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\r\n\r\n    const farms = await fetchFarms(farmsWithPriceHelpers)\r\n    const farmsWithPrices = await fetchFarmsPrices(farms)\r\n\r\n    // Filter out price helper LP config farms\r\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\r\n      return farm.pid || farm.pid === 0\r\n    })\r\n\r\n    return farmsWithoutHelperLps\r\n  },\r\n)\r\n\r\ninterface FarmUserDataResponse {\r\n  pid: number\r\n  allowance: string\r\n  tokenBalance: string\r\n  stakedBalance: string\r\n  earnings: string\r\n}\r\n\r\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\r\n  'farms/fetchFarmUserDataAsync',\r\n  async ({ account, pids }) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\r\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\r\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\r\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\r\n\r\n\r\n    return userFarmAllowances.map((farmAllowance, index) => {\r\n      return {\r\n        pid: farmsToFetch[index].pid,\r\n        allowance: userFarmAllowances[index],\r\n        tokenBalance: userFarmTokenBalances[index],\r\n        stakedBalance: userStakedBalances[index],\r\n        earnings: userFarmEarnings[index],\r\n      }\r\n    })\r\n  },\r\n)\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {\r\n    setLoadArchivedFarmsData: (state, action) => {\r\n      const loadArchivedFarmsData = action.payload\r\n      state.loadArchivedFarmsData = loadArchivedFarmsData\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Update farms with live data\r\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    })\r\n\r\n    // Update farms with user data\r\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\r\n      action.payload.forEach((userDataEl) => {\r\n        const { pid } = userDataEl\r\n        const index = state.data.findIndex((farm) => farm.pid === pid)\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n      state.userDataLoaded = true\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\r\n\r\nexport default farmsSlice.reducer\r\n","import Cookies from 'js-cookie'\r\nimport { Nft } from 'config/constants/types'\r\nimport { getNftByTokenId } from 'utils/collectibles'\r\nimport { Profile } from 'state/types'\r\nimport { transformProfileResponse } from './helpers'\r\n\r\nconst profileApi = process.env.REACT_APP_API_PROFILE\r\n\r\nexport interface GetProfileResponse {\r\n  hasRegistered: boolean\r\n  profile?: Profile\r\n}\r\n\r\nconst getUsername = async (address: string): Promise<string> => {\r\n  try {\r\n    const response = await fetch(`${profileApi}/api/users/${address}`)\r\n\r\n    if (!response.ok) {\r\n      return ''\r\n    }\r\n\r\n    const { username = '' } = await response.json()\r\n\r\n    return username\r\n  } catch (error) {\r\n    return ''\r\n  }\r\n}\r\n\r\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\r\n  try {\r\n    const hasRegistered = true as boolean\r\n\r\n    if (!hasRegistered) {\r\n      return { hasRegistered, profile: null }\r\n    }\r\n\r\n    const profile = {\r\n      userId: 1,\r\n      points: 1,\r\n      teamId: 1,\r\n      tokenId: 1,\r\n      username: \"sdd\",\r\n      nftAddress: \"0xasdasdsadwqe1232323\",\r\n    } as Profile\r\n\r\n    return { hasRegistered, profile }\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default getProfile\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ProfileState } from 'state/types'\r\nimport type { AppDispatch } from 'state'\r\nimport getProfile, { GetProfileResponse } from './getProfile'\r\n\r\nconst initialState: ProfileState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  hasRegistered: false,\r\n  data: null,\r\n}\r\n\r\nexport const profileSlice = createSlice({\r\n  name: 'profile',\r\n  initialState,\r\n  reducers: {\r\n    profileFetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\r\n      const { profile, hasRegistered } = action.payload\r\n\r\n      return {\r\n        isInitialized: true,\r\n        isLoading: false,\r\n        hasRegistered,\r\n        data: profile,\r\n      }\r\n    },\r\n    profileFetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    profileClear: () => ({\r\n      ...initialState,\r\n      isLoading: false,\r\n    }),\r\n    addPoints: (state, action: PayloadAction<number>) => {\r\n      state.data.points += action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\r\n  profileSlice.actions\r\n\r\n// Thunks\r\n// TODO: this should be an AsyncThunk\r\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\r\n  try {\r\n    dispatch(profileFetchStart())\r\n    const response = await getProfile(address)\r\n    dispatch(profileFetchSucceeded(response))\r\n  } catch (error) {\r\n    dispatch(profileFetchFailed())\r\n  }\r\n}\r\n\r\nexport default profileSlice.reducer\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\r\nimport { nodes } from './getRpcUrl';\r\nimport ContractAddress from '../config/constants/contracts';\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Nextep wallet, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = window.ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(ContractAddress.networkId, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'NX Chain',\r\n            nativeCurrency: {\r\n              name: 'CXS',\r\n              symbol: 'CXS',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error('Failed to setup the network in your wallet:', error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the Deam network on your wallet because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to your wallet\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\r\n  const tokenAdded = await window.ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\n\r\nexport function currencyId(currency: Currency): string {\r\n  if (currency === ETHER) return 'CXS'\r\n  if (currency instanceof Token) return currency.address\r\n  throw new Error('invalid currency')\r\n}\r\n\r\nexport default currencyId\r\n","import { useSelector } from 'react-redux'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { AppState } from '../index'\r\n\r\nexport function useBlockNumber(): number | undefined {\r\n\tconst chainId = 787;\r\n\r\n\treturn useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\r\n}\r\n\r\nexport default useBlockNumber\r\n","/* eslint-disable no-case-declarations */\r\n/**\r\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\r\n * @param uri to convert to fetch-able http url\r\n */\r\nexport default function uriToHttp(uri: string): string[] {\r\n  const protocol = uri.split(':')[0].toLowerCase()\r\n  switch (protocol) {\r\n    case 'https':\r\n      return [uri]\r\n    case 'http':\r\n      return [`https${uri.substr(4)}`, uri]\r\n    case 'ipfs':\r\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\r\n    case 'ipns':\r\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n","import { Token } from '@pancakeswap/sdk'\r\nimport { SerializedToken } from '../actions'\r\n\r\nexport function serializeToken(token: Token): SerializedToken {\r\n  return {\r\n    chainId: token.chainId,\r\n    address: token.address,\r\n    decimals: token.decimals,\r\n    symbol: token.symbol,\r\n    name: token.name,\r\n  }\r\n}\r\n\r\nexport function deserializeToken(serializedToken: SerializedToken): Token {\r\n  return new Token(\r\n    serializedToken.chainId,\r\n    serializedToken.address,\r\n    serializedToken.decimals,\r\n    serializedToken.symbol,\r\n    serializedToken.name,\r\n  )\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk';\r\nimport tokens from './tokens';\r\nimport { FarmConfig } from './types';\r\nimport ContractAddress from './contracts';\r\n\r\nconst farms: FarmConfig[] = [\r\n  /**\r\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\r\n   */\r\n  {\r\n    pid: 1,\r\n    lpSymbol: 'PCN-CXS LP',\r\n    lpAddresses: {\r\n      [ChainId.MAINNET]: String(ContractAddress.cxsPcnLp[ChainId.MAINNET]),\r\n      [ChainId.TESTNET]: String(ContractAddress.cxsPcnLp[ChainId.TESTNET]),\r\n    },\r\n    token: tokens.pcn,\r\n    quoteToken: tokens.wcxs,\r\n  },\r\n  {\r\n    pid: 2,\r\n    lpSymbol: 'USDT-CXS LP',\r\n    lpAddresses: {\r\n      [ChainId.MAINNET]: String(ContractAddress.cxsBusdLp[ChainId.MAINNET]),\r\n      [ChainId.TESTNET]: String(ContractAddress.cxsBusdLp[ChainId.TESTNET]),\r\n    },\r\n    token: tokens.busd,\r\n    quoteToken: tokens.wcxs,\r\n  }\r\n  /**\r\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\r\n   */\r\n\r\n]\r\n\r\nexport default farms\r\n","import React, { useCallback } from 'react'\r\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Button,\r\n  Text,\r\n  ErrorIcon,\r\n  ArrowUpIcon,\r\n  MetamaskIcon,\r\n  Flex,\r\n  Box,\r\n  Link,\r\n  Spinner,\r\n  Modal,\r\n  InjectedModalProps,\r\n} from '@pancakeswap/uikit'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { RowFixed } from '../Layout/Row'\r\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\r\nimport { getBscScanLink } from '../../utils';\r\nimport loading from '../../assets/image/loading.gif';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n`\r\nconst Section = styled(AutoColumn)`\r\n  padding: 24px;\r\n`\r\n\r\nconst ConfirmedIcon = styled(ColumnCenter)`\r\n  padding: 24px 0;\r\n`\r\n\r\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <ConfirmedIcon>\r\n        <img src={loading} alt=\"loading...\" width=\"100px\" />\r\n      </ConfirmedIcon>\r\n      <AutoColumn gap=\"12px\" justify=\"center\">\r\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\r\n        <AutoColumn gap=\"12px\" justify=\"center\">\r\n          <Text bold small textAlign=\"center\">\r\n            {pendingText}\r\n          </Text>\r\n        </AutoColumn>\r\n        <Text small color=\"textSubtle\" textAlign=\"center\">\r\n          {t('Confirm this transaction in your wallet')}\r\n        </Text>\r\n      </AutoColumn>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nfunction TransactionSubmittedContent({\r\n  onDismiss,\r\n  chainId,\r\n  hash,\r\n  currencyToAdd,\r\n}: {\r\n  onDismiss: () => void\r\n  hash: string | undefined\r\n  chainId: ChainId\r\n  currencyToAdd?: Currency | undefined\r\n}) {\r\n  const { library } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ConfirmedIcon>\r\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\r\n        </ConfirmedIcon>\r\n        <AutoColumn gap=\"12px\" justify=\"center\">\r\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\r\n          {chainId && hash && (\r\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\r\n              {t('View on Nxchain Scan')}\r\n            </Link>\r\n          )}\r\n          {currencyToAdd && library?.provider?.isMetaMask && (\r\n            <Button\r\n              variant=\"tertiary\"\r\n              mt=\"12px\"\r\n              width=\"fit-content\"\r\n              style={{ borderRadius: '16px' }}\r\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\r\n            >\r\n              <RowFixed >\r\n                {t('Add %asset% to your wallet', { asset: currencyToAdd.symbol })}\r\n                &nbsp;&nbsp;\r\n                <MetamaskIcon style={{ marginLeft: '6px' }} width=\"16px\" ml=\"6px\" />\r\n              </RowFixed>\r\n            </Button>\r\n          )}\r\n          <Button onClick={onDismiss} style={{ borderRadius: '16px' }} mt=\"20px\">\r\n            {t('Close')}\r\n          </Button>\r\n        </AutoColumn>\r\n      </Section>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport function ConfirmationModalContent({\r\n  bottomContent,\r\n  topContent,\r\n}: {\r\n  topContent: () => React.ReactNode\r\n  bottomContent: () => React.ReactNode\r\n}) {\r\n  return (\r\n    <Wrapper>\r\n      <Box>{topContent()}</Box>\r\n      <Box>{bottomContent()}</Box>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn justify=\"center\">\r\n        <ErrorIcon color=\"failure\" width=\"64px\" />\r\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\r\n          {message}\r\n        </Text>\r\n      </AutoColumn>\r\n\r\n      <Flex justifyContent=\"center\" pt=\"24px\">\r\n        <Button style={{ borderRadius: '16px' }} onClick={onDismiss}>{t('Dismiss')}</Button>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\ninterface ConfirmationModalProps {\r\n  title: string\r\n  customOnDismiss?: () => void\r\n  hash: string | undefined\r\n  content: () => React.ReactNode\r\n  attemptingTxn: boolean\r\n  pendingText: string\r\n  currencyToAdd?: Currency | undefined\r\n}\r\n\r\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\r\n  title,\r\n  onDismiss,\r\n  customOnDismiss,\r\n  attemptingTxn,\r\n  hash,\r\n  pendingText,\r\n  content,\r\n  currencyToAdd,\r\n}) => {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const handleDismiss = useCallback(() => {\r\n    if (customOnDismiss) {\r\n      customOnDismiss()\r\n    }\r\n    onDismiss()\r\n  }, [customOnDismiss, onDismiss])\r\n\r\n  if (!chainId) return null\r\n\r\n  return (\r\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\r\n      {attemptingTxn ? (\r\n        <ConfirmationPendingContent pendingText={pendingText} />\r\n      ) : hash ? (\r\n        <TransactionSubmittedContent\r\n          chainId={chainId}\r\n          hash={hash}\r\n          onDismiss={onDismiss}\r\n          currencyToAdd={currencyToAdd}\r\n        />\r\n      ) : (\r\n        content()\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransactionConfirmationModal\r\n","import { isAddress } from '../../utils'\r\nimport useENSAddress from './useENSAddress'\r\nimport useENSName from './useENSName'\r\n\r\n/**\r\n * Given a name or address, does a lookup to resolve to an address and name\r\n * @param nameOrAddress ENS name or address\r\n */\r\nexport default function useENS(nameOrAddress?: string | null): {\r\n  loading: boolean\r\n  address: string | null\r\n  name: string | null\r\n} {\r\n  const validated = isAddress(nameOrAddress)\r\n  const reverseLookup = useENSName(validated || undefined)\r\n  const lookup = useENSAddress(nameOrAddress)\r\n\r\n  return {\r\n    loading: reverseLookup.loading || lookup.loading,\r\n    address: validated || lookup.address,\r\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\r\n  }\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../../state/multicall/hooks'\r\nimport { isAddress } from '../../utils'\r\nimport isZero from '../../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\r\nimport useDebounce from '../useDebounce'\r\n\r\n/**\r\n * Does a reverse lookup for an address to find its ENS name.\r\n * Note this is not the same as looking up an ENS name to find an address.\r\n */\r\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\r\n  const debouncedAddress = useDebounce(address, 200)\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\r\n    try {\r\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [debouncedAddress])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddressResult = resolverAddress.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false,\r\n  )\r\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\r\n\r\n  const changed = debouncedAddress !== address\r\n  return {\r\n    ENSName: changed ? null : name.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || name.loading,\r\n  }\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../../state/multicall/hooks'\r\nimport isZero from '../../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\r\nimport useDebounce from '../useDebounce'\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its address.\r\n */\r\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\r\n  const debouncedName = useDebounce(ensName, 200)\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedName) return [undefined]\r\n    try {\r\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [debouncedName])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddressResult = resolverAddress.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false,\r\n  )\r\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\r\n\r\n  const changed = debouncedName !== ensName\r\n  return {\r\n    address: changed ? null : addr.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || addr.loading,\r\n  }\r\n}\r\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\r\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\r\n\r\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\r\nexport function isTradeBetter(\r\n  tradeA: Trade | undefined | null,\r\n  tradeB: Trade | undefined | null,\r\n  minimumDelta: Percent = ZERO_PERCENT,\r\n): boolean | undefined {\r\n  if (tradeA && !tradeB) return false\r\n  if (tradeB && !tradeA) return true\r\n  if (!tradeA || !tradeB) return undefined\r\n\r\n  if (\r\n    tradeA.tradeType !== tradeB.tradeType ||\r\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\r\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\r\n  ) {\r\n    throw new Error('Trades are not comparable')\r\n  }\r\n\r\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\r\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\r\n  }\r\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\r\n}\r\n\r\nexport default isTradeBetter\r\n","/* eslint-disable no-param-reassign */\r\nimport { isTradeBetter } from 'utils/trades'\r\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\r\nimport flatMap from 'lodash/flatMap'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\n\r\nimport { useUserSingleHopOnly } from 'state/user/hooks'\r\nimport {\r\n  BASES_TO_CHECK_TRADES_AGAINST,\r\n  CUSTOM_BASES,\r\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\r\n  ADDITIONAL_BASES,\r\n} from '../config/constants'\r\nimport { PairState, usePairs } from './usePairs'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nimport { useUnsupportedTokens } from './Tokens'\r\n\r\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const [tokenA, tokenB] = chainId\r\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n    : [undefined, undefined]\r\n\r\n  const bases: Token[] = useMemo(() => {\r\n    if (!chainId) return []\r\n\r\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\r\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\r\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\r\n\r\n    return [...common, ...additionalA, ...additionalB]\r\n  }, [chainId, tokenA, tokenB])\r\n\r\n\r\n  const basePairs: [Token, Token][] = useMemo(\r\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\r\n    [bases],\r\n  )\r\n\r\n  const allPairCombinations: [Token, Token][] = useMemo(\r\n    () =>\r\n      tokenA && tokenB\r\n        ? [\r\n          // the direct pair\r\n          [tokenA, tokenB],\r\n          // token A against all bases\r\n          ...bases.map((base): [Token, Token] => [tokenA, base]),\r\n          // token B against all bases\r\n          ...bases.map((base): [Token, Token] => [tokenB, base]),\r\n          // each base against all bases\r\n          ...basePairs,\r\n        ]\r\n          .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\r\n          .filter(([t0, t1]) => t0.address !== t1.address)\r\n          .filter(([tokenA_, tokenB_]) => {\r\n            if (!chainId) return true\r\n            const customBases = CUSTOM_BASES[chainId]\r\n\r\n            const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\r\n            const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\r\n\r\n            if (!customBasesA && !customBasesB) return true\r\n\r\n            if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\r\n            if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\r\n\r\n            return true\r\n          })\r\n        : [],\r\n    [tokenA, tokenB, bases, basePairs, chainId],\r\n  )\r\n\r\n  const allPairs = usePairs(allPairCombinations)\r\n\r\n  // only pass along valid pairs, non-duplicated pairs\r\n  return useMemo(\r\n    () =>\r\n      Object.values(\r\n        allPairs\r\n          // filter out invalid pairs\r\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\r\n          // filter out duplicated pairs\r\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\r\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\r\n            return memo\r\n          }, {}),\r\n      ),\r\n    [allPairs],\r\n  )\r\n}\r\n\r\nconst MAX_HOPS = 3\r\n\r\n/**\r\n * Returns the best trade for the exact amount of tokens in to the given token out\r\n */\r\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\r\n\r\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\r\n  const [singleHopOnly] = useUserSingleHopOnly()\r\n  return useMemo(() => {\r\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\r\n\r\n      if (singleHopOnly) {\r\n        return (\r\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\r\n          null\r\n        )\r\n      }\r\n      // search through trades with varying hops, find best trade out of them\r\n      let bestTradeSoFar: Trade | null = null\r\n      for (let i = 1; i <= MAX_HOPS; i++) {\r\n        const currentTrade: Trade | null =\r\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\r\n          null\r\n        // if current trade is best yet, save it\r\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\r\n          bestTradeSoFar = currentTrade\r\n        }\r\n      }\r\n      return bestTradeSoFar\r\n    }\r\n\r\n    return null\r\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\r\n}\r\n\r\n/**\r\n * Returns the best trade for the token in to the exact amount of token out\r\n */\r\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\r\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\r\n\r\n  const [singleHopOnly] = useUserSingleHopOnly()\r\n\r\n  return useMemo(() => {\r\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\r\n      if (singleHopOnly) {\r\n        return (\r\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\r\n          null\r\n        )\r\n      }\r\n      // search through trades with varying hops, find best trade out of them\r\n      let bestTradeSoFar: Trade | null = null\r\n      for (let i = 1; i <= MAX_HOPS; i++) {\r\n        const currentTrade =\r\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\r\n          null\r\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\r\n          bestTradeSoFar = currentTrade\r\n        }\r\n      }\r\n      return bestTradeSoFar\r\n    }\r\n    return null\r\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\r\n}\r\n\r\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\r\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\r\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\r\n\r\n  // if unsupported list loaded & either token on list, mark as unsupported\r\n  if (unsupportedTokens) {\r\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\r\n      return true\r\n    }\r\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.enterStaking(value, options)\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, value, options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.leaveStaking(value, options)\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.withdraw(pid, value, options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const harvestFarm = async (masterChefContract, pid) => {\r\n  if (pid === 0) {\r\n    const tx = await await masterChefContract.leaveStaking('0', options)\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, '0', options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Text, Button, Input, Flex, Grid } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport QuestionHelper from '../../QuestionHelper'\r\nimport { AutoColumn } from '../../Layout/Column'\r\nimport { RowBetween, RowFixed } from '../../Layout/Row'\r\n\r\nenum SlippageError {\r\n  InvalidInput = 'InvalidInput',\r\n  RiskyLow = 'RiskyLow',\r\n  RiskyHigh = 'RiskyHigh',\r\n}\r\n\r\nenum DeadlineError {\r\n  InvalidInput = 'InvalidInput',\r\n}\r\n\r\nexport interface SlippageTabsProps {\r\n  rawSlippage: number\r\n  setRawSlippage: (rawSlippage: number) => void\r\n  deadline: number\r\n  setDeadline: (deadline: number) => void\r\n}\r\n\r\nexport default function SlippageTabs({ rawSlippage, setRawSlippage, deadline, setDeadline }: SlippageTabsProps) {\r\n  const [slippageInput, setSlippageInput] = useState('')\r\n  const [deadlineInput, setDeadlineInput] = useState('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const slippageInputIsValid =\r\n    slippageInput === '' || (rawSlippage / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\r\n  const deadlineInputIsValid = deadlineInput === '' || (deadline / 60).toString() === deadlineInput\r\n\r\n  let slippageError: SlippageError | undefined\r\n  if (slippageInput !== '' && !slippageInputIsValid) {\r\n    slippageError = SlippageError.InvalidInput\r\n  } else if (slippageInputIsValid && rawSlippage < 50) {\r\n    slippageError = SlippageError.RiskyLow\r\n  } else if (slippageInputIsValid && rawSlippage > 500) {\r\n    slippageError = SlippageError.RiskyHigh\r\n  } else {\r\n    slippageError = undefined\r\n  }\r\n\r\n  let deadlineError: DeadlineError | undefined\r\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\r\n    deadlineError = DeadlineError.InvalidInput\r\n  } else {\r\n    deadlineError = undefined\r\n  }\r\n\r\n  function parseCustomSlippage(value: string) {\r\n    setSlippageInput(value)\r\n\r\n    try {\r\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\r\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\r\n        setRawSlippage(valueAsIntFromRoundedFloat)\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  function parseCustomDeadline(value: string) {\r\n    setDeadlineInput(value)\r\n\r\n    try {\r\n      const valueAsInt: number = Number.parseInt(value) * 60\r\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\r\n        setDeadline(valueAsInt)\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <AutoColumn gap=\"sm\">\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\">{t('Slippage Tolerance')}</Text>\r\n          <QuestionHelper\r\n            text={t('Your transaction will revert if the price changes unfavorably by more than this percentage.')}\r\n            ml=\"4px\"\r\n          />\r\n        </RowFixed>\r\n        <Flex flexWrap={['wrap', 'wrap', 'nowrap']}>\r\n          <Grid gridTemplateColumns=\"1fr 1fr 1fr\" gridGap=\"8px\" mb={['8px', '8px', 0]} mr={[0, 0, '8px']}>\r\n            <Button\r\n              style={{ borderRadius: '30px' }}\r\n              onClick={() => {\r\n                setSlippageInput('')\r\n                setRawSlippage(10)\r\n              }}\r\n              variant={rawSlippage === 10 ? 'primary' : 'tertiary'}\r\n            >\r\n              0.1%\r\n            </Button>\r\n            <Button\r\n              style={{ borderRadius: '30px' }}\r\n              onClick={() => {\r\n                setSlippageInput('')\r\n                setRawSlippage(50)\r\n              }}\r\n              variant={rawSlippage === 50 ? 'primary' : 'tertiary'}\r\n            >\r\n              0.5%\r\n            </Button>\r\n            <Button\r\n              style={{ borderRadius: '30px' }}\r\n              onClick={() => {\r\n                setSlippageInput('')\r\n                setRawSlippage(100)\r\n              }}\r\n              variant={rawSlippage === 100 ? 'primary' : 'tertiary'}\r\n            >\r\n              1%\r\n            </Button>\r\n          </Grid>\r\n          <RowBetween>\r\n            <Input\r\n              scale=\"lg\"\r\n              placeholder={(rawSlippage / 100).toFixed(2)}\r\n              value={slippageInput}\r\n              onBlur={() => {\r\n                parseCustomSlippage((rawSlippage / 100).toFixed(2))\r\n              }}\r\n              onChange={(e) => parseCustomSlippage(e.target.value)}\r\n              isWarning={!slippageInputIsValid}\r\n              isSuccess={![10, 50, 100].includes(rawSlippage)}\r\n              style={{ background: '#EFF4F5', borderRadius: '30px', border: 'none' }}\r\n            />\r\n            <Text color=\"primary\" bold ml=\"8px\">\r\n              %\r\n            </Text>\r\n          </RowBetween>\r\n        </Flex>\r\n        {!!slippageError && (\r\n          <RowBetween\r\n            style={{\r\n              fontSize: '14px',\r\n              paddingTop: '7px',\r\n              color: slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E',\r\n            }}\r\n          >\r\n            {slippageError === SlippageError.InvalidInput\r\n              ? t('Enter a valid slippage percentage')\r\n              : slippageError === SlippageError.RiskyLow\r\n                ? t('Your transaction may fail')\r\n                : t('Your transaction may be frontrun')}\r\n          </RowBetween>\r\n        )}\r\n      </AutoColumn>\r\n\r\n      <AutoColumn gap=\"sm\">\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\">Transaction deadline</Text>\r\n          <QuestionHelper text={t('Your transaction will revert if it is pending for more than this long.')} ml=\"4px\" />\r\n        </RowFixed>\r\n        <RowFixed>\r\n          <Input\r\n            color={deadlineError ? 'red' : undefined}\r\n            onBlur={() => {\r\n              parseCustomDeadline((deadline / 60).toString())\r\n            }}\r\n            placeholder={(deadline / 60).toString()}\r\n            value={deadlineInput}\r\n            onChange={(e) => parseCustomDeadline(e.target.value)}\r\n            style={{ background: '#EFF4F5', borderRadius: '30px', border: 'none' }}\r\n          />\r\n          <Text pl=\"8px\" fontSize=\"14px\">\r\n            {t('minutes')}\r\n          </Text>\r\n        </RowFixed>\r\n      </AutoColumn>\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Text, PancakeToggle, Flex, Message, Modal, ModalBody, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport {\r\n  useAudioModeManager,\r\n  useExpertModeManager,\r\n  useUserTransactionTTL,\r\n  useUserSlippageTolerance,\r\n  useUserSingleHopOnly,\r\n} from 'state/user/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nimport { useSwapActionHandlers } from 'state/swap/hooks'\r\nimport { AutoColumn } from '../../Layout/Column'\r\nimport QuestionHelper from '../../QuestionHelper'\r\nimport { RowBetween, RowFixed } from '../../Layout/Row'\r\nimport TransactionSettings from './TransactionSettings'\r\n\r\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\r\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\r\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\r\n  const [ttl, setTtl] = useUserTransactionTTL()\r\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\r\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\r\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\r\n  const { onChangeRecipient } = useSwapActionHandlers()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  if (showConfirmExpertModal) {\r\n    return (\r\n      <Modal\r\n        title={t('Are you sure?')}\r\n        onBack={() => setShowConfirmExpertModal(false)}\r\n        onDismiss={onDismiss}\r\n        style={{ maxWidth: '420px' }}\r\n      >\r\n        <ModalBody>\r\n          <Message variant=\"warning\" mb=\"24px\">\r\n            <Text>\r\n              {t(\r\n                \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\r\n              )}\r\n            </Text>\r\n          </Message>\r\n          <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\r\n          <Button\r\n            variant=\"danger\"\r\n            id=\"confirm-expert-mode\"\r\n            style={{ borderRadius: '16px' }}\r\n            onClick={() => {\r\n              // eslint-disable-next-line no-alert\r\n              if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\r\n                toggleExpertMode()\r\n                setShowConfirmExpertModal(false)\r\n              }\r\n            }}\r\n          >\r\n            {t('Turn On Expert Mode')}\r\n          </Button>\r\n        </ModalBody>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal title=\"Settings\" headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\r\n      <ModalBody>\r\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\r\n          <Text bold fontSize=\"20px\">\r\n            {t('Transaction Settings')}\r\n          </Text>\r\n          <TransactionSettings\r\n            rawSlippage={userSlippageTolerance}\r\n            setRawSlippage={setUserslippageTolerance}\r\n            deadline={ttl}\r\n            setDeadline={setTtl}\r\n          />\r\n          <Text bold fontSize=\"20px\" mt=\"32px\">\r\n            {t('Interface Settings')}\r\n          </Text>\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <Text fontSize=\"14px\">{t('Toggle Expert Mode')}</Text>\r\n              <QuestionHelper\r\n                text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\r\n                ml=\"4px\"\r\n              />\r\n            </RowFixed>\r\n            <PancakeToggle\r\n              id=\"toggle-expert-mode-button\"\r\n              checked={expertMode}\r\n              onChange={\r\n                expertMode\r\n                  ? () => {\r\n                    onChangeRecipient(null)\r\n                    toggleExpertMode()\r\n                  }\r\n                  : () => setShowConfirmExpertModal(true)\r\n              }\r\n            />\r\n          </RowBetween>\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <Text fontSize=\"14px\">{t('Disable Multihops')}</Text>\r\n              <QuestionHelper text={t('Restricts swaps to direct pairs only.')} ml=\"4px\" />\r\n            </RowFixed>\r\n            <PancakeToggle\r\n              id=\"toggle-disable-multihop-button\"\r\n              checked={singleHopOnly}\r\n              onChange={() => {\r\n                setSingleHopOnly(!singleHopOnly)\r\n              }}\r\n            />\r\n          </RowBetween>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n            <RowFixed>\r\n              <Text fontSize=\"14px\">{t('Audio')}</Text>\r\n              <QuestionHelper text={t('🐰 Turn down your volume a bit before you swap')} ml=\"4px\" />\r\n            </RowFixed>\r\n            <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} />\r\n          </Flex>\r\n        </AutoColumn>\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SettingsModal\r\n","import React from 'react'\r\nimport { Button, TuneIcon, NotificationDot, useModal } from '@pancakeswap/uikit'\r\nimport { useExpertModeManager } from 'state/user/hooks'\r\nimport SettingsModal from './SettingsModal'\r\n\r\nexport default function SettingsTab() {\r\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\r\n  const [expertMode] = useExpertModeManager()\r\n\r\n  return (\r\n    <NotificationDot show={expertMode}>\r\n      <Button variant=\"text\" p={0} onClick={onPresentSettingsModal} id=\"open-settings-dialog-button\">\r\n        <TuneIcon color=\"#7A6EAA\" width=\"24px\" />\r\n      </Button>\r\n    </NotificationDot>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport CircleLoader from '../../Loader/CircleLoader'\r\n\r\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  text-decoration: none !important;\r\n  border-radius: 0.5rem;\r\n  padding: 0.25rem 0rem;\r\n  font-weight: 500;\r\n  font-size: 0.825rem;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\r\n  color: ${({ pending, success, theme }) =>\r\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\r\n`\r\n\r\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const summary = tx?.summary\r\n  const pending = !tx?.receipt\r\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\r\n\r\n  if (!chainId) return null\r\n\r\n  return (\r\n    <TransactionState pending={pending} success={success}>\r\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\r\n      <IconWrapper pending={pending} success={success}>\r\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\r\n      </IconWrapper>\r\n    </TransactionState>\r\n  )\r\n}\r\n","import React, { useMemo, useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport { AppDispatch } from 'state'\r\nimport { clearAllTransactions } from 'state/transactions/actions'\r\nimport { AutoRow } from '../../Layout/Row'\r\nimport Transaction from './Transaction'\r\n\r\n// we want the latest one to come first, so return negative if a is after b\r\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\r\n  return b.addedTime - a.addedTime\r\n}\r\n\r\nfunction renderTransactions(transactions: TransactionDetails[]) {\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      {transactions.map((tx) => {\r\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\r\n      })}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\r\n  const { account, chainId } = useWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const allTransactions = useAllTransactions()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const sortedRecentTransactions = useMemo(() => {\r\n    const txs = Object.values(allTransactions)\r\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\r\n  }, [allTransactions])\r\n\r\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\r\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\r\n\r\n  const clearAllTransactionsCallback = useCallback(() => {\r\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\r\n  }, [dispatch, chainId])\r\n\r\n  return (\r\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\r\n      {account && (\r\n        <ModalBody>\r\n          {!!pending.length || !!confirmed.length ? (\r\n            <>\r\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\r\n                <Text>{t('Recent Transactions')}</Text>\r\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\r\n                  {t('clear all')}\r\n                </Button>\r\n              </AutoRow>\r\n              {renderTransactions(pending)}\r\n              {renderTransactions(confirmed)}\r\n            </>\r\n          ) : (\r\n            <Text>{t('No recent transactions')}</Text>\r\n          )}\r\n        </ModalBody>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransactionsModal\r\n","import React from 'react'\r\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\r\nimport TransactionsModal from './TransactionsModal'\r\n\r\nconst Transactions = () => {\r\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\r\n  return (\r\n    <>\r\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\r\n        <HistoryIcon color=\"#7A6EAA\" width=\"24px\" />\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Transactions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport Settings from './Settings'\r\nimport Transactions from './Transactions'\r\nimport QuestionHelper from '../QuestionHelper'\r\n\r\ninterface Props {\r\n  title: string\r\n  subtitle: string\r\n  helper?: string\r\n  backTo?: string\r\n  noConfig?: boolean\r\n}\r\n\r\nconst AppHeaderContainer = styled(Flex)`\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 25px 15px;\r\n  width: 100%;\r\n  border-top: 4px solid transparent;\r\n  border-bottom:1px #8080804f solid;\r\n`\r\n\r\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\r\n  return (\r\n    <AppHeaderContainer>\r\n      <Flex flexDirection=\"column\" width=\"100%\" position=\"relative\">\r\n        <Flex flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Heading as=\"h2\" style={{ textAlign: `${title === 'Swap' ? 'center' : 'left'}`, fontSize: \"24px\", flex: 2 }}>\r\n            {title}\r\n          </Heading>\r\n          {!noConfig && (\r\n            <Flex style={{ position: 'absolute', right: '15px' }}>\r\n              <Settings />\r\n              <Transactions />\r\n            </Flex>\r\n          )}\r\n        </Flex>\r\n\r\n        <Text style={{ color: \"#7A6EAA\", margin: 'auto', marginTop: '10px' }} fontSize=\"14px\">\r\n          {subtitle}\r\n        </Text>\r\n      </Flex>\r\n    </AppHeaderContainer>\r\n  )\r\n}\r\n\r\nexport default AppHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card } from '@pancakeswap/uikit'\r\n\r\n// background: linear - gradient(33.28deg, #12111C 0.32 %, #181726 89.33 %);\r\nexport const BodyWrapper = styled(Card)`\r\n  max-width: 350px;\r\n  width: 100%;\r\n  z-index: 1;\r\n  color:black !important;\r\n  box-shadow: 0px 0px 2px 1px #8080804d;\r\n  background:white;\r\n  border-radius:30px;\r\n  margin-bottom:16px;\r\n`\r\n\r\n/**\r\n * The styled container element that wraps the content of most pages and the tabs.\r\n */\r\nexport default function AppBody({ children }: { children: React.ReactNode }) {\r\n  return <BodyWrapper>{children}</BodyWrapper>\r\n}\r\n","import React from 'react'\r\nimport {\r\n  Tag,\r\n  VerifiedIcon,\r\n  CommunityIcon,\r\n  RefreshIcon,\r\n  AutoRenewIcon,\r\n  TagProps,\r\n  TimerIcon,\r\n  BlockIcon,\r\n  VoteIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst CoreTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Core')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CommunityTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\r\n      {t('Community')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst DualTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textSubtle\" outline {...props}>\r\n      {t('Dual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Manual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Auto')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst VoteNowTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Vote Now')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst SoonTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Soon')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ClosedTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\r\n      {t('Closed')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\r\n","import sample from 'lodash/sample'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  return sample(nodes)\r\n}\r\n\r\nexport default getNodeUrl\r\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\r\n\r\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\r\n  const match = ensAddress.match(ENS_NAME_REGEX)\r\n  if (!match) return undefined\r\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\r\n}\r\n\r\nexport default parseENSAddress\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector'\r\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\r\nimport { connectorsByName } from 'utils/web3React'\r\nimport { setupNetwork } from 'utils/wallet'\r\nimport useToast from 'hooks/useToast'\r\nimport { profileClear } from 'state/profile'\r\nimport { useAppDispatch } from 'state'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst useAuth = () => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const login = useCallback(\r\n    (connectorID: ConnectorNames) => {\r\n      const connector = connectorsByName[connectorID]\r\n      if (connector) {\r\n        activate(connector, async (error: Error) => {\r\n          if (error instanceof UnsupportedChainIdError) {\r\n            const hasSetup = await setupNetwork()\r\n            if (hasSetup) {\r\n              activate(connector)\r\n            }\r\n          } else {\r\n            window.localStorage.removeItem(connectorLocalStorageKey)\r\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n              toastError(t('Provider Error'), t('No provider was found'))\r\n            } else if (\r\n              error instanceof UserRejectedRequestErrorInjected ||\r\n              error instanceof UserRejectedRequestErrorWalletConnect\r\n            ) {\r\n              if (connector instanceof WalletConnectConnector) {\r\n                const walletConnector = connector as WalletConnectConnector\r\n                walletConnector.walletConnectProvider = null\r\n              }\r\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\r\n            } else {\r\n              toastError(error.name, error.message)\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\r\n      }\r\n    },\r\n    [t, activate, toastError],\r\n  )\r\n\r\n  const logout = useCallback(() => {\r\n    dispatch(profileClear())\r\n    deactivate()\r\n    // This localStorage key is set by @web3-react/walletconnect-connector\r\n    if (window.localStorage.getItem('walletconnect')) {\r\n      connectorsByName.walletconnect.close()\r\n      connectorsByName.walletconnect.walletConnectProvider = null\r\n    }\r\n  }, [deactivate, dispatch])\r\n\r\n  return { login, logout }\r\n}\r\n\r\nexport default useAuth\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\r\n  animation: 2s ${rotate} linear infinite;\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n  path {\r\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\r\n  }\r\n`\r\n\r\n/**\r\n * Takes in custom size and stroke for circle color, default to primary color as fill,\r\n * need ...rest for layered styles on top\r\n */\r\nexport default function CircleLoader({\r\n  size = '16px',\r\n  stroke,\r\n  ...rest\r\n}: {\r\n  size?: string\r\n  stroke?: string\r\n  [k: string]: any\r\n}) {\r\n  return (\r\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\r\n      <path\r\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\r\n        strokeWidth=\"2.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </StyledSVG>\r\n  )\r\n}\r\n","/* eslint-disable no-continue */\r\n/* eslint-disable no-await-in-loop */\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\r\nimport Ajv from 'ajv'\r\nimport contenthashToUri from './contenthashToUri'\r\nimport { parseENSAddress } from './ENS/parseENSAddress'\r\nimport uriToHttp from './uriToHttp'\r\n\r\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\r\n\r\n/**\r\n * Contains the logic for resolving a list URL to a validated token list\r\n * @param listUrl list url\r\n * @param resolveENSContentHash resolves an ens name to a contenthash\r\n */\r\nexport default async function getTokenList(\r\n  listUrl: string,\r\n  resolveENSContentHash: (ensName: string) => Promise<string>,\r\n): Promise<TokenList> {\r\n  const parsedENS = parseENSAddress(listUrl)\r\n  let urls: string[]\r\n  if (parsedENS) {\r\n    let contentHashUri\r\n    try {\r\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\r\n    } catch (error) {\r\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\r\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\r\n    }\r\n    let translatedUri\r\n    try {\r\n      translatedUri = contenthashToUri(contentHashUri)\r\n    } catch (error) {\r\n      console.error('Failed to translate contenthash to URI', contentHashUri)\r\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\r\n    }\r\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\r\n  } else {\r\n    urls = uriToHttp(listUrl)\r\n  }\r\n  for (let i = 0; i < urls.length; i++) {\r\n    const url = urls[i]\r\n    const isLast = i === urls.length - 1\r\n    let response\r\n    try {\r\n      response = await fetch(url)\r\n    } catch (error) {\r\n      console.error('Failed to fetch list', listUrl, error)\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      continue\r\n    }\r\n\r\n    if (!response.ok) {\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      continue\r\n    }\r\n\r\n    const json = await response.json()\r\n    if (!tokenListValidator(json)) {\r\n      const validationErrors: string =\r\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\r\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\r\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\r\n        }, '') ?? 'unknown error'\r\n      throw new Error(`Token list failed validation: ${validationErrors}`)\r\n    }\r\n    return json as TokenList\r\n  }\r\n  throw new Error('Unrecognized list URL protocol.')\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { Provider } from '@ethersproject/abstract-provider'\r\nimport { namehash } from 'ethers/lib/utils'\r\n\r\nconst REGISTRAR_ABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: 'node',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    name: 'resolver',\r\n    outputs: [\r\n      {\r\n        name: 'resolverAddress',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n]\r\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\r\n\r\nconst RESOLVER_ABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'node',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    name: 'contenthash',\r\n    outputs: [\r\n      {\r\n        internalType: 'bytes',\r\n        name: '',\r\n        type: 'bytes',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n]\r\n\r\n// cache the resolver contracts since most of them are the public resolver\r\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\r\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\r\n}\r\n\r\n/**\r\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\r\n * @param ensName to resolve\r\n * @param provider provider to use to fetch the data\r\n */\r\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\r\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\r\n  const hash = namehash(ensName)\r\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\r\n  return resolverContract(resolverAddress, provider).contenthash(hash)\r\n}\r\n","import { nanoid } from '@reduxjs/toolkit'\r\nimport { ChainId } from '@pancakeswap/sdk'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { AppDispatch } from '../state'\r\nimport { fetchTokenList } from '../state/lists/actions'\r\nimport getTokenList from '../utils/getTokenList'\r\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\r\nimport useWeb3Provider from './useActiveWeb3React'\r\n\r\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\r\n  const { library } = useWeb3Provider()\r\n  const { chainId } = useWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const ensResolver = useCallback(\r\n    (ensName: string) => {\r\n      if (chainId !== ChainId.MAINNET) {\r\n        throw new Error('Could not construct mainnet ENS resolver')\r\n      }\r\n      return resolveENSContentHash(ensName, library)\r\n    },\r\n    [chainId, library],\r\n  )\r\n\r\n  // note: prevent dispatch if using for list search or unsupported list\r\n  return useCallback(\r\n    async (listUrl: string, sendDispatch = true) => {\r\n      const requestId = nanoid()\r\n      if (sendDispatch) {\r\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\r\n      }\r\n      return getTokenList(listUrl, ensResolver)\r\n        .then((tokenList) => {\r\n          if (sendDispatch) {\r\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\r\n          }\r\n          return tokenList\r\n        })\r\n        .catch((error) => {\r\n          console.error(`Failed to get list at url ${listUrl}`, error)\r\n          if (sendDispatch) {\r\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\r\n          }\r\n          throw error\r\n        })\r\n    },\r\n    [dispatch, ensResolver],\r\n  )\r\n}\r\n\r\nexport default useFetchListCallback\r\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\r\nimport { kebabCase } from 'lodash'\r\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\r\nimport { ToastContextApi } from './types'\r\n\r\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\r\n\r\nexport const ToastsProvider: React.FC = ({ children }) => {\r\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\r\n\r\n  const toast = useCallback(\r\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\r\n      setToasts((prevToasts) => {\r\n        const id = kebabCase(title)\r\n\r\n        // Remove any existing toasts with the same id\r\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\r\n\r\n        return [\r\n          {\r\n            id,\r\n            title,\r\n            description,\r\n            type,\r\n          },\r\n          ...currentToasts,\r\n        ]\r\n      })\r\n    },\r\n    [setToasts],\r\n  )\r\n\r\n  const toastError = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.DANGER })\r\n  }\r\n  const toastInfo = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.INFO })\r\n  }\r\n  const toastSuccess = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.SUCCESS })\r\n  }\r\n  const toastWarning = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.WARNING })\r\n  }\r\n  const clear = () => setToasts([])\r\n  const remove = (id: string) => {\r\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\r\n  }\r\n\r\n  return (\r\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\r\n      {children}\r\n    </ToastsContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ToastContainer } from '@pancakeswap/uikit'\r\nimport useToast from 'hooks/useToast'\r\n\r\nconst ToastListener = () => {\r\n  const { toasts, remove } = useToast()\r\n\r\n  const handleRemove = (id: string) => remove(id)\r\n\r\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\r\n}\r\n\r\nexport default ToastListener\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { escapeRegExp } from '../../utils'\r\n\r\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\r\n  color: black;\r\n  width: 0;\r\n  position: relative;\r\n  font-weight: 500;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: transparent;\r\n  font-size: 18px;\r\n  text-align: ${({ align }) => align && align};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  [type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n`\r\n\r\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\r\n\r\nexport const Input = React.memo(function InnerInput({\r\n  value,\r\n  onUserInput,\r\n  placeholder,\r\n  ...rest\r\n}: {\r\n  value: string | number\r\n  onUserInput: (input: string) => void\r\n  error?: boolean\r\n  fontSize?: string\r\n  align?: 'right' | 'left'\r\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\r\n  const enforcer = (nextUserInput: string) => {\r\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\r\n      onUserInput(nextUserInput)\r\n    }\r\n  }\r\n\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <StyledInput\r\n      {...rest}\r\n      value={value}\r\n      onChange={(event) => {\r\n        // replace commas with periods, because we exclusively uses period as the decimal separator\r\n        enforcer(event.target.value.replace(/,/g, '.'))\r\n      }}\r\n      // universal input options\r\n      inputMode=\"decimal\"\r\n      title={t('Token Amount')}\r\n      autoComplete=\"off\"\r\n      autoCorrect=\"off\"\r\n      // text-specific options\r\n      type=\"text\"\r\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\r\n      placeholder={placeholder || '0.0'}\r\n      minLength={1}\r\n      maxLength={79}\r\n      spellCheck=\"false\"\r\n    />\r\n  )\r\n})\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport { Currency, Pair } from '@pancakeswap/sdk'\r\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\r\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\r\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\r\n\r\nimport { RowBetween } from '../Layout/Row'\r\nimport { Input as NumericalInput } from './NumericalInput'\r\n\r\nconst InputRow = styled.div<{ selected: boolean }>`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\r\n`\r\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\r\n  padding: 0 0.5rem;\r\n  width:100%;\r\n`\r\nconst LabelRow = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n  padding: 0.75rem 1rem 0 1rem;\r\n`\r\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n  border-radius: ${({ hideInput }) => (hideInput ? '30px' : '20px')};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  z-index: 1;\r\n  color:black;\r\n`\r\nconst Container = styled.div<{ hideInput: boolean }>`\r\n  background-color: #eeeaf4;\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n  border-radius:16px;\r\n\r\n`\r\ninterface CurrencyInputPanelProps {\r\n  value: string\r\n  onUserInput: (value: string) => void\r\n  onMax?: () => void\r\n  showMaxButton: boolean\r\n  label?: string\r\n  onCurrencySelect: (currency: Currency) => void\r\n  currency?: Currency | null\r\n  disableCurrencySelect?: boolean\r\n  hideBalance?: boolean\r\n  pair?: Pair | null\r\n  hideInput?: boolean\r\n  otherCurrency?: Currency | null\r\n  id: string\r\n  showCommonBases?: boolean\r\n}\r\nexport default function CurrencyInputPanel({\r\n  value,\r\n  onUserInput,\r\n  onMax,\r\n  showMaxButton,\r\n  label,\r\n  onCurrencySelect,\r\n  currency,\r\n  disableCurrencySelect = false,\r\n  hideBalance = false,\r\n  pair = null, // used for double token logo\r\n  hideInput = false,\r\n  otherCurrency,\r\n  id,\r\n  showCommonBases,\r\n}: CurrencyInputPanelProps) {\r\n  const { account } = useActiveWeb3React()\r\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\r\n  const { t } = useTranslation()\r\n  const translatedLabel = label || t('Input')\r\n\r\n  const [onPresentCurrencyModal] = useModal(\r\n    <CurrencySearchModal\r\n      onCurrencySelect={onCurrencySelect}\r\n      selectedCurrency={currency}\r\n      otherSelectedCurrency={otherCurrency}\r\n      showCommonBases={showCommonBases}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <div >\r\n      <CurrencySelectButton\r\n        selected={!!currency}\r\n        className=\"open-currency-select-button\"\r\n        onClick={() => {\r\n          if (!disableCurrencySelect) {\r\n            onPresentCurrencyModal()\r\n          }\r\n        }}\r\n      >\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\" style={{ gap: '5px' }}>\r\n            {pair ? (\r\n              <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\r\n            ) : currency ? (\r\n              <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\r\n            ) : null}\r\n            {pair ? (\r\n              <Text id=\"pair\">\r\n                {pair?.token0.symbol}:{pair?.token1.symbol}\r\n              </Text>\r\n            ) : (\r\n              <Text id=\"pair\">\r\n                {(currency && currency.symbol && currency.symbol.length > 20\r\n                  ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\r\n                    currency.symbol.length - 5,\r\n                    currency.symbol.length,\r\n                  )}`\r\n                  : currency?.symbol) || t('Select a currency')}\r\n              </Text>\r\n            )}\r\n            {!disableCurrencySelect && <ChevronDownIcon />}\r\n          </Flex>\r\n          <Flex>\r\n            {account && (\r\n              <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\r\n                {!hideBalance && !!currency && selectedCurrencyBalance\r\n                  ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\r\n                  : ' -'}\r\n              </Text>\r\n            )}\r\n          </Flex>\r\n        </Flex>\r\n      </CurrencySelectButton>\r\n      <InputPanel id={id}>\r\n        <Container hideInput={hideInput}>\r\n          <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\r\n            {!hideInput && (\r\n              <>\r\n                <NumericalInput\r\n                  className=\"token-amount-input\"\r\n                  value={value}\r\n                  onUserInput={(val) => {\r\n                    onUserInput(val)\r\n                  }}\r\n                />\r\n                {account && currency && showMaxButton && label !== 'To' && (\r\n                  <Button onClick={onMax} scale=\"sm\" variant=\"text\">\r\n                    MAX\r\n                  </Button>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n          </InputRow>\r\n          {!hideInput && (\r\n            <LabelRow>\r\n              <RowBetween>\r\n                {/* <Text fontSize=\"14px\">{translatedLabel}</Text> */}\r\n\r\n              </RowBetween>\r\n            </LabelRow>\r\n          )}\r\n        </Container>\r\n      </InputPanel>\r\n    </div>\r\n  )\r\n}\r\n","import { useMemo } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { isAddress } from '../../utils'\r\n\r\nexport function filterTokens(tokens: Token[], search: string): Token[] {\r\n  if (search.length === 0) return tokens\r\n\r\n  const searchingAddress = isAddress(search)\r\n\r\n  if (searchingAddress) {\r\n    return tokens.filter((token) => token.address === searchingAddress)\r\n  }\r\n\r\n  const lowerSearchParts = search\r\n    .toLowerCase()\r\n    .split(/\\s+/)\r\n    .filter((s) => s.length > 0)\r\n\r\n  if (lowerSearchParts.length === 0) {\r\n    return tokens\r\n  }\r\n\r\n  const matchesSearch = (s: string): boolean => {\r\n    const sParts = s\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter((s_) => s_.length > 0)\r\n\r\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\r\n  }\r\n\r\n  return tokens.filter((token) => {\r\n    const { symbol, name } = token\r\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\r\n  })\r\n}\r\n\r\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\r\n  return useMemo(() => {\r\n    if (!tokens) {\r\n      return []\r\n    }\r\n\r\n    const symbolMatch = searchQuery\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter((s) => s.length > 0)\r\n\r\n    if (symbolMatch.length > 1) {\r\n      return tokens\r\n    }\r\n\r\n    const exactMatches: Token[] = []\r\n    const symbolSubtrings: Token[] = []\r\n    const rest: Token[] = []\r\n\r\n    // sort tokens by exact match -> subtring on symbol match -> rest\r\n    tokens.map((token) => {\r\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\r\n        return exactMatches.push(token)\r\n      }\r\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\r\n        return symbolSubtrings.push(token)\r\n      }\r\n      return rest.push(token)\r\n    })\r\n\r\n    return [...exactMatches, ...symbolSubtrings, ...rest]\r\n  }, [tokens, searchQuery])\r\n}\r\n","// import { WalletLinkConnector } from \"@web3-react/walletlink-connector\"\r\nimport { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport { ConnectorNames } from '@pancakeswap/uikit'\r\nimport { ethers } from 'ethers'\r\nimport getNodeUrl from './getRpcUrl';\r\nimport ContractAddress from '../config/constants/contracts';\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(ContractAddress.networkId, 10)\r\n\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n  rpc: { [chainId]: rpcUrl },\r\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL,\r\n})\r\n\r\n// const walletlink = new WalletLinkConnector({\r\n//   url: `https://mainnet.infura.io/v3/bf2d11e84b6a43d2877af307fe931166`,\r\n//   appName: \"nextepdex-web\"\r\n// });\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.WalletLink]: injected,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\r\n  const library = new ethers.providers.Web3Provider(provider)\r\n  library.pollingInterval = POLLING_INTERVAL\r\n  return library\r\n}\r\n\r\n/**\r\n * BSC Wallet requires a different sign method\r\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\r\n */\r\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\r\n  if (window.BinanceChain) {\r\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\r\n    return signature\r\n  }\r\n\r\n  /**\r\n   * Wallet Connect does not sign the message correctly unless you use their method\r\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\r\n   */\r\n  if (provider.provider?.wc) {\r\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\r\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\r\n    return signature\r\n  }\r\n\r\n  return provider.getSigner(account).signMessage(message)\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n\r\nexport default Dots\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useTokenContract } from './useContract'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\n\r\n// returns undefined if input token is undefined, or fails to get token contract,\r\n// or contract total supply cannot be fetched\r\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\r\n\r\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\r\n}\r\n\r\nexport default useTotalSupply\r\n","import { useMemo } from 'react'\r\nimport { ChainId, Token } from '@pancakeswap/sdk'\r\nimport { useSelector } from 'react-redux'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { AppState } from '../../index'\r\nimport { deserializeToken } from './helpers'\r\n\r\nexport default function useUserAddedTokens(): Token[] {\r\n  const { chainId } = useWeb3React()\r\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return []\r\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\r\n  }, [serializedTokensMap, chainId])\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { Farm, Pool } from 'state/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\ntype UserData =\r\n  | Pool['userData']\r\n  | {\r\n      allowance: number | string\r\n      stakingTokenBalance: number | string\r\n      stakedBalance: number | string\r\n      pendingReward: number | string\r\n    }\r\n\r\nexport const transformUserData = (userData: UserData) => {\r\n  return {\r\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\r\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\r\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\r\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\r\n  }\r\n}\r\n\r\nexport const transformPool = (pool: Pool): Pool => {\r\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\r\n\r\n  return {\r\n    ...rest,\r\n    userData: transformUserData(userData),\r\n    totalStaked: new BigNumber(totalStaked),\r\n    stakingLimit: new BigNumber(stakingLimit),\r\n  } as Pool\r\n}\r\n\r\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\r\n  return farms.reduce((prices, farm) => {\r\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\r\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\r\n    /* eslint-disable no-param-reassign */\r\n    if (!prices[quoteTokenAddress]) {\r\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\r\n    }\r\n    if (!prices[tokenAddress]) {\r\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\r\n    }\r\n    /* eslint-enable no-param-reassign */\r\n    return prices\r\n  }, {})\r\n}\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport { PageMeta } from './types'\r\n\r\nexport const DEFAULT_META: PageMeta = {\r\n  title: 'Nextep Dex',\r\n  description:\r\n    'Nextep Dex - A next evolution DeFi exchange on Nextep Chain',\r\n  image: 'https://pancakeswap.finance/images/hero.png',\r\n}\r\n\r\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\r\n  switch (path) {\r\n    case '/':\r\n      return {\r\n        title: `${t('Home')} | ${t('Nextep Dex')}`,\r\n      }\r\n    case '/competition':\r\n      return {\r\n        title: `${t('Trading Battle')} | ${t('Nextep Dex')}`,\r\n      }\r\n    case '/prediction':\r\n      return {\r\n        title: `${t('Prediction')} | ${t('Nextep Dex')}`,\r\n      }\r\n    case '/farms':\r\n      return {\r\n        title: `${t('Farms')} | ${t('Nextep Dex')}`,\r\n      }\r\n    case '/pools':\r\n      return {\r\n        title: `${t('Staking')} | ${t('Nextep Dex')}`,\r\n      }\r\n    case '/lottery':\r\n      return {\r\n        title: `${t('Lottery')} | ${t('Nextep Dex')}`,\r\n      }\r\n    case '/collectibles':\r\n      return {\r\n        title: `${t('Collectibles')} | ${t('Nextep Dex')}`,\r\n      }\r\n    case '/ifo':\r\n      return {\r\n        title: `${t('Initial Farm Offering')} | ${t('Nextep Dex')}`,\r\n      }\r\n    case '/teams':\r\n      return {\r\n        title: `${t('Leaderboard')} | ${t('Nextep Dex')}`,\r\n      }\r\n    case '/profile/tasks':\r\n      return {\r\n        title: `${t('Task Center')} | ${t('Nextep Dex')}`,\r\n      }\r\n    case '/profile':\r\n      return {\r\n        title: `${t('Your Profile')} | ${t('Nextep Dex')}`,\r\n      }\r\n    default:\r\n      return null\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\nimport Container from './Container'\r\n\r\nconst StyledPage = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nconst PageMeta = () => {\r\n  const { t } = useTranslation()\r\n  const { pathname } = useLocation()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\r\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\r\n      minimumFractionDigits: 3,\r\n      maximumFractionDigits: 3,\r\n    })}`\r\n    : ''\r\n\r\n  const pageMeta = getCustomMeta(pathname, t) || {}\r\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\r\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\r\n\r\n  return (\r\n    <Helmet>\r\n      <title>{pageTitle}</title>\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={image} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\r\n  return (\r\n    <>\r\n      <PageMeta />\r\n      <StyledPage {...props}>{children}</StyledPage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\r\n\r\nconst StyledNav = styled.nav`\r\n  margin-bottom: 30px;\r\n  margin-top: 100px;\r\n`\r\n\r\nconst getActiveIndex = (pathname: string): number => {\r\n  if (\r\n    pathname.includes('/pool') ||\r\n    pathname.includes('/create') ||\r\n    pathname.includes('/add') ||\r\n    pathname.includes('/remove') ||\r\n    pathname.includes('/find')\r\n  ) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nconst Nav = () => {\r\n  const location = useLocation()\r\n  return (\r\n    <StyledNav>\r\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\r\n          Swap\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\r\n          Liquidity\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex } from '@pancakeswap/uikit'\r\nimport SubNav from 'components/Menu/SubNav'\r\n\r\nconst StyledPage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 16px;\r\n  padding-bottom: 0;\r\n  min-height: calc(100vh - 64px);\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    background-size: auto;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding: 24px;\r\n    padding-bottom: 0;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    min-height: calc(100vh - 64px);\r\n  }\r\n`\r\n\r\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\r\n  return (\r\n    <StyledPage {...props}>\r\n      <SubNav />\r\n      {children}\r\n      <Flex flexGrow={1} />\r\n    </StyledPage>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import React from 'react'\r\nimport {\r\n  TokenPairImage as UIKitTokenPairImage,\r\n  TokenPairImageProps as UIKitTokenPairImageProps,\r\n  TokenImage as UIKitTokenImage,\r\n  ImageProps,\r\n} from '@pancakeswap/uikit'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Token } from 'config/constants/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\n\r\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\r\n  primaryToken: Token\r\n  secondaryToken: Token\r\n}\r\n\r\nconst getImageUrlFromToken = (token: Token) => {\r\n  const address = token.symbol === 'CXS' ? '0x0000000000000000000000000000000000000000' : getAddress(token.address)\r\n  // return `/images/tokens/${address.toLowerCase()}.svg`\r\n  return `https://raw.githubusercontent.com/Nextep-Blockchain/token-logo/main/main/icons/${address.toLowerCase()}.svg`\r\n}\r\n\r\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\r\n  return (\r\n    <UIKitTokenPairImage\r\n      primarySrc={getImageUrlFromToken(primaryToken)}\r\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\ninterface TokenImageProps extends ImageProps {\r\n  token: Token\r\n}\r\n\r\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\r\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { BlockState } from '../types'\r\n\r\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\r\n\r\nexport const blockSlice = createSlice({\r\n  name: 'Block',\r\n  initialState,\r\n  reducers: {\r\n    setBlock: (state, action: PayloadAction<number>) => {\r\n      if (state.initialBlock === 0) {\r\n        state.initialBlock = action.payload\r\n      }\r\n\r\n      state.currentBlock = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setBlock } = blockSlice.actions\r\n\r\nexport default blockSlice.reducer\r\n","import React from 'react'\r\nimport { Box, BoxProps } from '@pancakeswap/uikit'\r\n\r\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\r\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nexport default Container\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  tokenPrice: number\r\n  apr: number\r\n  displayApr?: string\r\n  linkLabel: string\r\n  linkHref: string\r\n  earningTokenSymbol?: string\r\n  roundingDecimals?: number\r\n  compoundFrequency?: number\r\n  performanceFee?: number\r\n  isFarm?: boolean\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, auto);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 12px;\r\n`\r\n\r\nconst GridItem = styled.div``\r\n\r\nconst GridHeaderItem = styled.div`\r\n  max-width: 180px;\r\n`\r\n\r\nconst BulletList = styled.ul`\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  li {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  li::before {\r\n    content: '•';\r\n    margin-right: 4px;\r\n  }\r\n\r\n  li::marker {\r\n    font-size: 12px;\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  tokenPrice,\r\n  apr,\r\n  displayApr,\r\n  linkLabel,\r\n  linkHref,\r\n  earningTokenSymbol = 'PCN',\r\n  roundingDecimals = 2,\r\n  compoundFrequency = 1,\r\n  performanceFee = 0,\r\n  isFarm = false,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\r\n\r\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 1,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 7,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 30,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 365,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n\r\n  return (\r\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\r\n      {isFarm && (\r\n        <Box>\r\n          <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n            <Text small color=\"textSubtle\">\r\n              {t('APR (incl. LP rewards)')}\r\n            </Text>\r\n            <Text small>{displayApr}%</Text>\r\n          </Flex>\r\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\r\n            <Text small color=\"textSubtle\">\r\n              {t('Base APR (yield only)')}\r\n            </Text>\r\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\r\n          </Flex>\r\n        </Box>\r\n      )}\r\n      <Grid>\r\n        <GridHeaderItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\r\n            {t('Timeframe')}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        <GridHeaderItem>\r\n          <Text\r\n            textAlign=\"right\"\r\n            fontSize=\"12px\"\r\n            bold\r\n            color=\"textSubtle\"\r\n            textTransform=\"uppercase\"\r\n            mr=\"12px\"\r\n            ml=\"12px\"\r\n            mb=\"12px\"\r\n          >\r\n            {t('ROI')}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        <GridHeaderItem>\r\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\r\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        {/* 1 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 1 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\r\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\r\n              roundingDecimals,\r\n            )}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 7 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\r\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\r\n              roundingDecimals,\r\n            )}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 30 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\r\n            {getRoi({\r\n              amountEarned: tokenEarnedPerThousand30D,\r\n              amountInvested: oneThousandDollarsWorthOfToken,\r\n            }).toFixed(roundingDecimals)}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ maxWidth: '180px' }}>\r\n          <Text>{t('365d (APY)')}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\r\n            {getRoi({\r\n              amountEarned: tokenEarnedPerThousand365D,\r\n              amountInvested: oneThousandDollarsWorthOfToken,\r\n            }).toFixed(roundingDecimals)}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Flex justifyContent=\"center\">\r\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\r\n          <BulletList>\r\n            <li>\r\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                {t('Calculated based on current rates.')}\r\n              </Text>\r\n            </li>\r\n            <li>\r\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\r\n              </Text>\r\n            </li>\r\n            {isFarm && (\r\n              <li>\r\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\r\n                </Text>\r\n              </li>\r\n            )}\r\n            <li>\r\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                {t(\r\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n                )}\r\n              </Text>\r\n            </li>\r\n            {performanceFee > 0 && (\r\n              <li>\r\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\r\n                    fee: performanceFee,\r\n                  })}\r\n                </Text>\r\n              </li>\r\n            )}\r\n          </BulletList>\r\n        </Box>\r\n      </Flex>\r\n      <Flex justifyContent=\"center\">\r\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import { BigNumber } from 'ethers'\r\nimport { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppState } from '../state'\r\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\r\n\r\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\r\nexport default function useTransactionDeadline(): BigNumber | undefined {\r\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\r\n  const blockTimestamp = useCurrentBlockTimestamp()\r\n  return useMemo(() => {\r\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\r\n    return undefined\r\n  }, [blockTimestamp, ttl])\r\n}\r\n","import { BigNumber } from 'ethers'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\nimport { useMulticallContract } from './useContract'\r\n\r\n// gets the current timestamp from the blockchain\r\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\r\n  const multicall = useMulticallContract()\r\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\r\n\r\nexport default updateBlockNumber\r\n","import { Interface } from '@ethersproject/abi'\r\nimport ERC20_ABI from './erc20.json'\r\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\r\n\r\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\r\n\r\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\r\n\r\nexport default ERC20_INTERFACE\r\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\r\n","import CID from 'cids'\r\nimport { getCodec, rmPrefix } from 'multicodec'\r\nimport { decode, toB58String } from 'multihashes'\r\n\r\nfunction hexToUint8Array(hex: string): Uint8Array {\r\n  // eslint-disable-next-line no-param-reassign\r\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\r\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\r\n  const arr = new Uint8Array(hex.length / 2)\r\n  for (let i = 0; i < arr.length; i++) {\r\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\r\n  }\r\n  return arr\r\n}\r\n\r\nconst UTF_8_DECODER = new TextDecoder()\r\n\r\n/**\r\n * Returns the URI representation of the content hash for supported codecs\r\n * @param contenthash to decode\r\n */\r\nexport default function contenthashToUri(contenthash: string): string {\r\n  const buff = hexToUint8Array(contenthash)\r\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\r\n  switch (codec) {\r\n    case 'ipfs-ns': {\r\n      const data = rmPrefix(buff as Buffer)\r\n      const cid = new CID(data)\r\n      return `ipfs://${toB58String(cid.multihash)}`\r\n    }\r\n    case 'ipns-ns': {\r\n      const data = rmPrefix(buff as Buffer)\r\n      const cid = new CID(data)\r\n      const multihash = decode(cid.multihash)\r\n      if (multihash.name === 'identity') {\r\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\r\n      }\r\n      return `ipns://${toB58String(cid.multihash)}`\r\n    }\r\n    default:\r\n      throw new Error(`Unrecognized codec: ${codec}`)\r\n  }\r\n}\r\n","import { Farm } from 'state/types'\r\n\r\n/**\r\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\r\n * @param farms Array of farms\r\n * @param preferredQuoteTokens Array of preferred quote tokens\r\n * @returns A preferred farm, if found - or the first element of the farms array\r\n */\r\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\r\n  const preferredFarm = farms.find((farm) => {\r\n    return preferredQuoteTokens.some((quoteToken) => {\r\n      return farm.quoteToken.symbol === quoteToken\r\n    })\r\n  })\r\n  return preferredFarm || farms[0]\r\n}\r\n\r\nexport default filterFarmsByQuoteToken\r\n","import React, { useState, useEffect, useRef } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// Check if the tab is active in the user browser\r\nconst useIsBrowserTabActive = () => {\r\n  const isBrowserTabActiveRef = useRef(true)\r\n\r\n  useEffect(() => {\r\n    const onVisibilityChange = () => {\r\n      isBrowserTabActiveRef.current = !document.hidden\r\n    }\r\n\r\n    window.addEventListener('visibilitychange', onVisibilityChange)\r\n\r\n    return () => {\r\n      window.removeEventListener('visibilitychange', onVisibilityChange)\r\n    }\r\n  }, [])\r\n\r\n  return isBrowserTabActiveRef\r\n}\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setFast((prev) => prev + 1)\r\n      }\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setSlow((prev) => prev + 1)\r\n      }\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import React, { useState } from 'react'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\r\nimport { light, dark } from '@pancakeswap/uikit'\r\n\r\nconst CACHE_KEY = 'IS_DARK'\r\n\r\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\r\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : true\r\n  })\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\r\n      return !prevState\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={light}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeContextProvider }\r\n","export default __webpack_public_path__ + \"static/media/loading.ceca1261.gif\";","import { useEffect, useRef } from 'react'\r\n\r\n/**\r\n * Returns the previous value of the given value\r\n *\r\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\r\n */\r\nconst usePreviousValue = (value: any) => {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value])\r\n\r\n  return ref.current\r\n}\r\n\r\nexport default usePreviousValue\r\n","import React from 'react'\r\nimport { Currency, Token } from '@pancakeswap/sdk'\r\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { AutoRow } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { CurrencyLogo } from 'components/Logo'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { useUnsupportedTokens } from '../hooks/Tokens'\r\n\r\ninterface Props extends InjectedModalProps {\r\n  currencies: (Currency | undefined)[]\r\n}\r\n\r\nconst DetailsFooter = styled.div`\r\n  padding: 8px 0;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  border-bottom-left-radius: 20px;\r\n  border-bottom-right-radius: 20px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  text-align: center;\r\n`\r\n\r\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens =\r\n    chainId && currencies\r\n      ? currencies.map((currency) => {\r\n        return wrappedCurrency(currency, chainId)\r\n      })\r\n      : []\r\n\r\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\r\n\r\n  return (\r\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\r\n      <AutoColumn gap=\"lg\">\r\n        {tokens.map((token) => {\r\n          return (\r\n            token &&\r\n            unsupportedTokens &&\r\n            Object.keys(unsupportedTokens).includes(token.address) && (\r\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\r\n                <AutoRow gap=\"5px\" align=\"center\">\r\n                  <CurrencyLogo currency={token} size=\"24px\" />\r\n                  <Text>{token.symbol}</Text>\r\n                </AutoRow>\r\n                {chainId && (\r\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\r\n                    {token.address}\r\n                  </Link>\r\n                )}\r\n              </AutoColumn>\r\n            )\r\n          )\r\n        })}\r\n        <AutoColumn gap=\"lg\">\r\n          <Text>\r\n            Some assets are not available through this interface because they may not work well with our smart contract\r\n            or we are unable to allow trading for legal reasons.\r\n          </Text>\r\n        </AutoColumn>\r\n      </AutoColumn>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\r\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\r\n\r\n  return (\r\n    <DetailsFooter>\r\n      <Button variant=\"text\" style={{ borderRadius: '16px' }} onClick={onPresentModal}>\r\n        Read more about unsupported assets\r\n      </Button>\r\n    </DetailsFooter>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { HelpIcon } from '@pancakeswap/uikit'\r\n\r\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\r\n\r\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\r\n  srcs: string[]\r\n}\r\n\r\n/**\r\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\r\n */\r\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\r\n  const [, refresh] = useState<number>(0)\r\n\r\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\r\n\r\n  if (src) {\r\n    return (\r\n      <img\r\n        {...rest}\r\n        alt={alt}\r\n        src={src}\r\n        onError={() => {\r\n          if (src) BAD_SRCS[src] = true\r\n          refresh((i) => i + 1)\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <HelpIcon {...rest} />\r\n}\r\n\r\nexport default Logo\r\n","import React, { useState } from 'react'\r\nimport { Token, Currency } from '@pancakeswap/sdk'\r\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { useAddUserToken } from 'state/user/hooks'\r\nimport { getBscScanLink } from 'utils'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedInactiveList } from 'state/lists/hooks'\r\nimport { ListLogo } from 'components/Logo'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ImportProps {\r\n  tokens: Token[]\r\n  handleCurrencySelect?: (currency: Currency) => void\r\n}\r\n\r\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const [confirmed, setConfirmed] = useState(false)\r\n\r\n  const addToken = useAddUserToken()\r\n\r\n  // use for showing import source on inactive tokens\r\n  const inactiveTokenList = useCombinedInactiveList()\r\n\r\n  return (\r\n    <AutoColumn gap=\"lg\">\r\n      <Message variant=\"warning\">\r\n        <Text>\r\n          {t(\r\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\r\n          )}\r\n          <br />\r\n          <br />\r\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\r\n        </Text>\r\n      </Message>\r\n\r\n      {tokens.map((token) => {\r\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\r\n        const address = token.address\r\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\r\n          : null\r\n        return (\r\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\r\n            {list !== undefined ? (\r\n              <Tag\r\n                variant=\"success\"\r\n                outline\r\n                scale=\"sm\"\r\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\r\n              >\r\n                {t('via')} {list.name}\r\n              </Tag>\r\n            ) : (\r\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\r\n                {t('Unknown Source')}\r\n              </Tag>\r\n            )}\r\n            <Flex alignItems=\"center\">\r\n              <Text mr=\"8px\">{token.name}</Text>\r\n              <Text>({token.symbol})</Text>\r\n            </Flex>\r\n            {chainId && (\r\n              <Flex justifyContent=\"space-between\" width=\"100%\">\r\n                <Text mr=\"4px\">{address}</Text>\r\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\r\n                  ({t('View on Nxchain Scan')})\r\n                </Link>\r\n              </Flex>\r\n            )}\r\n          </Grid>\r\n        )\r\n      })}\r\n\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\r\n          <Checkbox\r\n            scale=\"sm\"\r\n            name=\"confirmed\"\r\n            type=\"checkbox\"\r\n            checked={confirmed}\r\n            onChange={() => setConfirmed(!confirmed)}\r\n          />\r\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\r\n            {t('I understand')}\r\n          </Text>\r\n        </Flex>\r\n        <Button\r\n          variant=\"danger\"\r\n          disabled={!confirmed}\r\n          onClick={() => {\r\n            tokens.map((token) => addToken(token))\r\n            if (handleCurrencySelect) {\r\n              handleCurrencySelect(tokens[0])\r\n            }\r\n          }}\r\n          className=\".token-dismiss-button\"\r\n        >\r\n          {t('Import')}\r\n        </Button>\r\n      </Flex>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default ImportToken\r\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\r\nimport { MIN_BNB } from '../config/constants'\r\n\r\n/**\r\n * Given some token amount, return the max that can be spent of it\r\n * @param currencyAmount to return max of\r\n */\r\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\r\n  if (!currencyAmount) return undefined\r\n  if (currencyAmount.currency === ETHER) {\r\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\r\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\r\n    }\r\n    return CurrencyAmount.ether(JSBI.BigInt(0))\r\n  }\r\n  return currencyAmount\r\n}\r\n\r\nexport default maxAmountSpend\r\n","import { useMemo } from 'react'\r\nimport contenthashToUri from 'utils/contenthashToUri'\r\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\r\nimport uriToHttp from 'utils/uriToHttp'\r\nimport useENSContentHash from './ENS/useENSContentHash'\r\n\r\nexport default function useHttpLocations(uri: string | undefined): string[] {\r\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\r\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\r\n  return useMemo(() => {\r\n    if (ens) {\r\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\r\n    }\r\n    return uri ? uriToHttp(uri) : []\r\n  }, [ens, resolvedContentHash.contenthash, uri])\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../../state/multicall/hooks'\r\nimport isZero from '../../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its contenthash.\r\n */\r\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!ensName) return [undefined]\r\n    try {\r\n      return ensName ? [namehash(ensName)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [ensName])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddress = resolverAddressResult.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\r\n    false,\r\n  )\r\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\r\n\r\n  return {\r\n    contenthash: contenthash.result?.[0] ?? null,\r\n    loading: resolverAddressResult.loading || contenthash.loading,\r\n  }\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\r\n  LIQUIDITY = 'LIQUIDITY',\r\n  CURRENCY_A = 'CURRENCY_A',\r\n  CURRENCY_B = 'CURRENCY_B',\r\n}\r\n\r\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\r\n","import identity from 'lodash/identity'\r\nimport { useEffect, useState } from 'react'\r\n\r\ninterface UsePersistStateOptions {\r\n  localStorageKey: string\r\n  hydrate?: (value: any) => any\r\n  dehydrate?: (value: any) => any\r\n}\r\n\r\nconst defaultOptions = {\r\n  hydrate: identity,\r\n  dehydrate: identity,\r\n}\r\n\r\n/**\r\n * Same as \"useState\" but saves the value to local storage each time it changes\r\n */\r\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\r\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\r\n  const [value, setValue] = useState(() => {\r\n    try {\r\n      const valueFromLS = localStorage.getItem(localStorageKey)\r\n\r\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\r\n    } catch (error) {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\r\n  }, [value, localStorageKey, dehydrate])\r\n\r\n  return [value, setValue]\r\n}\r\n\r\nexport default usePersistState\r\n","export const Latinise = {\r\n  latin_map: {\r\n    τ: 't',\r\n    Τ: 'T',\r\n  },\r\n}\r\n\r\nexport const latinise = (input: string) => {\r\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\r\n}\r\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { PairState, usePair } from 'hooks/usePairs'\r\nimport useTotalSupply from 'hooks/useTotalSupply'\r\n\r\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { tryParseAmount } from '../swap/hooks'\r\nimport { useCurrencyBalances } from '../wallet/hooks'\r\nimport { Field, typeInput } from './actions'\r\n\r\nconst ZERO = JSBI.BigInt(0)\r\n\r\nexport function useMintState(): AppState['mint'] {\r\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\r\n}\r\n\r\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\r\n  onFieldAInput: (typedValue: string) => void\r\n  onFieldBInput: (typedValue: string) => void\r\n} {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const onFieldAInput = useCallback(\r\n    (typedValue: string) => {\r\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\r\n    },\r\n    [dispatch, noLiquidity],\r\n  )\r\n  const onFieldBInput = useCallback(\r\n    (typedValue: string) => {\r\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\r\n    },\r\n    [dispatch, noLiquidity],\r\n  )\r\n\r\n  return {\r\n    onFieldAInput,\r\n    onFieldBInput,\r\n  }\r\n}\r\n\r\nexport function useDerivedMintInfo(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined,\r\n): {\r\n  dependentField: Field\r\n  currencies: { [field in Field]?: Currency }\r\n  pair?: Pair | null\r\n  pairState: PairState\r\n  currencyBalances: { [field in Field]?: CurrencyAmount }\r\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\r\n  price?: Price\r\n  noLiquidity?: boolean\r\n  liquidityMinted?: TokenAmount\r\n  poolTokenPercentage?: Percent\r\n  error?: string\r\n} {\r\n  const { account, chainId } = useWeb3React()\r\n\r\n  const { independentField, typedValue, otherTypedValue } = useMintState()\r\n\r\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\r\n\r\n  // tokens\r\n  const currencies: { [field in Field]?: Currency } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: currencyA ?? undefined,\r\n      [Field.CURRENCY_B]: currencyB ?? undefined,\r\n    }),\r\n    [currencyA, currencyB],\r\n  )\r\n\r\n  // pair\r\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\r\n\r\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\r\n\r\n  const noLiquidity: boolean =\r\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\r\n\r\n  // balances\r\n  const balances = useCurrencyBalances(account ?? undefined, [\r\n    currencies[Field.CURRENCY_A],\r\n    currencies[Field.CURRENCY_B],\r\n  ])\r\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\r\n    [Field.CURRENCY_A]: balances[0],\r\n    [Field.CURRENCY_B]: balances[1],\r\n  }\r\n\r\n  // amounts\r\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\r\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\r\n    if (noLiquidity) {\r\n      if (otherTypedValue && currencies[dependentField]) {\r\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\r\n      }\r\n      return undefined\r\n    }\r\n    if (independentAmount) {\r\n      // we wrap the currencies just to get the price in terms of the other token\r\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\r\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\r\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\r\n        const dependentTokenAmount =\r\n          dependentField === Field.CURRENCY_B\r\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\r\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\r\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\r\n      }\r\n      return undefined\r\n    }\r\n    return undefined\r\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\r\n\r\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\r\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\r\n    }),\r\n    [dependentAmount, independentAmount, independentField],\r\n  )\r\n\r\n  const price = useMemo(() => {\r\n    if (noLiquidity) {\r\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n      if (currencyAAmount && currencyBAmount) {\r\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\r\n      }\r\n      return undefined\r\n    }\r\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\r\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\r\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\r\n\r\n  // liquidity minted\r\n  const liquidityMinted = useMemo(() => {\r\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n    const [tokenAmountA, tokenAmountB] = [\r\n      wrappedCurrencyAmount(currencyAAmount, chainId),\r\n      wrappedCurrencyAmount(currencyBAmount, chainId),\r\n    ]\r\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\r\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\r\n    }\r\n    return undefined\r\n  }, [parsedAmounts, chainId, pair, totalSupply])\r\n\r\n  const poolTokenPercentage = useMemo(() => {\r\n    if (liquidityMinted && totalSupply) {\r\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\r\n    }\r\n    return undefined\r\n  }, [liquidityMinted, totalSupply])\r\n\r\n  let error: string | undefined\r\n  if (!account) {\r\n    error = 'Connect Wallet'\r\n  }\r\n\r\n  if (pairState === PairState.INVALID) {\r\n    error = error ?? 'Invalid pair'\r\n  }\r\n\r\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\r\n    error = error ?? 'Enter an amount'\r\n  }\r\n\r\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n\r\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\r\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\r\n  }\r\n\r\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\r\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\r\n  }\r\n\r\n  return {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    error,\r\n  }\r\n}\r\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport { Button, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\r\nimport { CurrencyLogo } from '../../components/Logo'\r\nimport { Field } from '../../state/mint/actions'\r\n\r\nfunction ConfirmAddModalBottom({\r\n  noLiquidity,\r\n  price,\r\n  currencies,\r\n  parsedAmounts,\r\n  poolTokenPercentage,\r\n  onAdd,\r\n}: {\r\n  noLiquidity?: boolean\r\n  price?: Fraction\r\n  currencies: { [field in Field]?: Currency }\r\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\r\n  poolTokenPercentage?: Percent\r\n  onAdd: () => void\r\n}) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <>\r\n      <RowBetween>\r\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\r\n        <RowFixed>\r\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\r\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\r\n        <RowFixed>\r\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\r\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>{t('Rates')}</Text>\r\n        <Text>\r\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${currencies[Field.CURRENCY_B]?.symbol\r\n            }`}\r\n        </Text>\r\n      </RowBetween>\r\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\r\n        <Text>\r\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${currencies[Field.CURRENCY_A]?.symbol\r\n            }`}\r\n        </Text>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>{t('Share of Pool')}:</Text>\r\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\r\n      </RowBetween>\r\n      <Button onClick={onAdd} mt=\"20px\" style={{ borderRadius: '16px' }}>\r\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ConfirmAddModalBottom\r\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { AutoColumn } from '../../components/Layout/Column'\r\nimport { AutoRow } from '../../components/Layout/Row'\r\nimport { ONE_BIPS } from '../../config/constants'\r\nimport { Field } from '../../state/mint/actions'\r\n\r\nfunction PoolPriceBar({\r\n  currencies,\r\n  noLiquidity,\r\n  poolTokenPercentage,\r\n  price,\r\n}: {\r\n  currencies: { [field in Field]?: Currency }\r\n  noLiquidity?: boolean\r\n  poolTokenPercentage?: Percent\r\n  price?: Price\r\n}) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <AutoRow justify=\"space-around\" gap=\"4px\">\r\n        <AutoColumn justify=\"center\">\r\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('%assetA% per %assetB%', {\r\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n            })}\r\n          </Text>\r\n        </AutoColumn>\r\n        <AutoColumn justify=\"center\">\r\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('%assetA% per %assetB%', {\r\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n            })}\r\n          </Text>\r\n        </AutoColumn>\r\n        <AutoColumn justify=\"center\">\r\n          <Text>\r\n            {noLiquidity && price\r\n              ? '100'\r\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\r\n            %\r\n          </Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('Share of Pool')}\r\n          </Text>\r\n        </AutoColumn>\r\n      </AutoRow>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default PoolPriceBar\r\n","import React, { useCallback, useState } from 'react'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\r\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { LightCard } from '../../components/Card'\r\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport { DoubleCurrencyLogo } from '../../components/Logo'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport { MinimalPositionCard } from '../../components/PositionCard'\r\nimport Row, { RowBetween } from '../../components/Layout/Row'\r\nimport UnlockButton from '../../components/UnlockButton'\r\n\r\nimport { ROUTER_ADDRESS } from '../../config/constants'\r\nimport { PairState } from '../../hooks/usePairs'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\r\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\r\nimport { Field } from '../../state/mint/actions'\r\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\r\n\r\nimport { useTransactionAdder } from '../../state/transactions/hooks'\r\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\r\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\r\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\r\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\r\nimport Dots from '../../components/Loader/Dots'\r\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport PoolPriceBar from './PoolPriceBar'\r\nimport Page from '../Page'\r\n\r\nexport default function AddLiquidity({\r\n  match: {\r\n    params: { currencyIdA, currencyIdB },\r\n  },\r\n  history,\r\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  const currencyA = useCurrency(currencyIdA)\r\n  const currencyB = useCurrency(currencyIdB)\r\n\r\n  const oneCurrencyIsWETH = Boolean(\r\n    chainId &&\r\n    ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\r\n      (currencyB && currencyEquals(currencyB, WETH[chainId]))),\r\n  )\r\n\r\n  const expertMode = useIsExpertMode()\r\n\r\n  // mint state\r\n  const { independentField, typedValue, otherTypedValue } = useMintState()\r\n  const {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    error,\r\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\r\n\r\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\r\n\r\n  const isValid = !error\r\n\r\n  // modal and loading\r\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\r\n\r\n  // txn values\r\n  const deadline = useTransactionDeadline() // custom from users settings\r\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\r\n  const [txHash, setTxHash] = useState<string>('')\r\n\r\n  // get formatted amounts\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  // get the max amounts user can add\r\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmountSpend(currencyBalances[field]),\r\n      }\r\n    },\r\n    {},\r\n  )\r\n\r\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\r\n      }\r\n    },\r\n    {},\r\n  )\r\n\r\n  // check whether the user has approved the router on the tokens\r\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\r\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  async function onAdd() {\r\n    if (!chainId || !library || !account) return\r\n    const router = getRouterContract(chainId, library, account)\r\n\r\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\r\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\r\n      return\r\n    }\r\n\r\n    const amountsMin = {\r\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\r\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\r\n    }\r\n\r\n    let estimate\r\n    let method: (...args: any) => Promise<TransactionResponse>\r\n    let args: Array<string | string[] | number>\r\n    let value: BigNumber | null\r\n    if (currencyA === ETHER || currencyB === ETHER) {\r\n      const tokenBIsETH = currencyB === ETHER\r\n      estimate = router.estimateGas.addLiquidityETH\r\n      method = router.addLiquidityETH\r\n      args = [\r\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\r\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\r\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\r\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\r\n        account,\r\n        deadline.toHexString(),\r\n      ]\r\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\r\n    } else {\r\n      estimate = router.estimateGas.addLiquidity\r\n      method = router.addLiquidity\r\n      args = [\r\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\r\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\r\n        parsedAmountA.raw.toString(),\r\n        parsedAmountB.raw.toString(),\r\n        amountsMin[Field.CURRENCY_A].toString(),\r\n        amountsMin[Field.CURRENCY_B].toString(),\r\n        account,\r\n        deadline.toHexString(),\r\n      ]\r\n      value = null\r\n    }\r\n\r\n    setAttemptingTxn(true)\r\n    await estimate(...args, value ? { value } : {})\r\n      .then((estimatedGasLimit) =>\r\n        method(...args, {\r\n          ...(value ? { value } : {}),\r\n          gasLimit: calculateGasMargin(estimatedGasLimit),\r\n        }).then((response) => {\r\n          setAttemptingTxn(false)\r\n\r\n          addTransaction(response, {\r\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${currencies[Field.CURRENCY_A]?.symbol\r\n              } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\r\n          })\r\n\r\n          setTxHash(response.hash)\r\n        }),\r\n      )\r\n      .catch((err) => {\r\n        setAttemptingTxn(false)\r\n        // we only care if the error is something _other_ than the user rejected the tx\r\n        if (err?.code !== 4001) {\r\n          console.error(err)\r\n        }\r\n      })\r\n  }\r\n\r\n  const modalHeader = () => {\r\n    return noLiquidity ? (\r\n      <Flex alignItems=\"center\">\r\n        <Text fontSize=\"48px\" marginRight=\"10px\">\r\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\r\n        </Text>\r\n        <DoubleCurrencyLogo\r\n          currency0={currencies[Field.CURRENCY_A]}\r\n          currency1={currencies[Field.CURRENCY_B]}\r\n          size={30}\r\n        />\r\n      </Flex>\r\n    ) : (\r\n      <AutoColumn>\r\n        <Flex alignItems=\"center\">\r\n          <Text fontSize=\"48px\" marginRight=\"10px\">\r\n            {liquidityMinted?.toSignificant(6)}\r\n          </Text>\r\n          <DoubleCurrencyLogo\r\n            currency0={currencies[Field.CURRENCY_A]}\r\n            currency1={currencies[Field.CURRENCY_B]}\r\n            size={30}\r\n          />\r\n        </Flex>\r\n        <Row>\r\n          <Text fontSize=\"24px\">\r\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\r\n          </Text>\r\n        </Row>\r\n        <Text small textAlign=\"left\" my=\"24px\">\r\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\r\n            slippage: allowedSlippage / 100,\r\n          })}\r\n        </Text>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  const modalBottom = () => {\r\n    return (\r\n      <ConfirmAddModalBottom\r\n        price={price}\r\n        currencies={currencies}\r\n        parsedAmounts={parsedAmounts}\r\n        noLiquidity={noLiquidity}\r\n        onAdd={onAdd}\r\n        poolTokenPercentage={poolTokenPercentage}\r\n      />\r\n    )\r\n  }\r\n\r\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\r\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\r\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\r\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n  })\r\n\r\n  const handleCurrencyASelect = useCallback(\r\n    (currencyA_: Currency) => {\r\n      const newCurrencyIdA = currencyId(currencyA_)\r\n      if (newCurrencyIdA === currencyIdB) {\r\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\r\n      } else {\r\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdB, history, currencyIdA],\r\n  )\r\n  const handleCurrencyBSelect = useCallback(\r\n    (currencyB_: Currency) => {\r\n      const newCurrencyIdB = currencyId(currencyB_)\r\n      if (currencyIdA === newCurrencyIdB) {\r\n        if (currencyIdB) {\r\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\r\n        } else {\r\n          history.push(`/add/${newCurrencyIdB}`)\r\n        }\r\n      } else {\r\n        history.push(`/add/${currencyIdA || 'CXS'}/${newCurrencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdA, history, currencyIdB],\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onFieldAInput('')\r\n    }\r\n    setTxHash('')\r\n  }, [onFieldAInput, txHash])\r\n\r\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\r\n\r\n  const [onPresentAddLiquidityModal] = useModal(\r\n    <TransactionConfirmationModal\r\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\r\n      customOnDismiss={handleDismissConfirmation}\r\n      attemptingTxn={attemptingTxn}\r\n      hash={txHash}\r\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\r\n      pendingText={pendingText}\r\n      currencyToAdd={pair?.liquidityToken}\r\n    />,\r\n    true,\r\n    true,\r\n    'addLiquidityModal',\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <AppBody>\r\n        <AppHeader\r\n          title={t('Add Liquidity')}\r\n          subtitle={t('Add liquidity to receive LP tokens')}\r\n          helper={t(\r\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\r\n          )}\r\n          backTo=\"/pool\"\r\n        />\r\n        <CardBody>\r\n          <AutoColumn gap=\"20px\">\r\n            {noLiquidity && (\r\n              <ColumnCenter>\r\n                <Message variant=\"warning\">\r\n                  <div>\r\n                    <Text bold mb=\"8px\">\r\n                      {t('You are the first liquidity provider.')}\r\n                    </Text>\r\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\r\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\r\n                  </div>\r\n                </Message>\r\n              </ColumnCenter>\r\n            )}\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.CURRENCY_A]}\r\n              onUserInput={onFieldAInput}\r\n              onMax={() => {\r\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\r\n              }}\r\n              onCurrencySelect={handleCurrencyASelect}\r\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\r\n              currency={currencies[Field.CURRENCY_A]}\r\n              id=\"add-liquidity-input-tokena\"\r\n              showCommonBases\r\n            />\r\n            <ColumnCenter>\r\n              <AddIcon width=\"16px\" />\r\n            </ColumnCenter>\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.CURRENCY_B]}\r\n              onUserInput={onFieldBInput}\r\n              onCurrencySelect={handleCurrencyBSelect}\r\n              onMax={() => {\r\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\r\n              }}\r\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\r\n              currency={currencies[Field.CURRENCY_B]}\r\n              id=\"add-liquidity-input-tokenb\"\r\n              showCommonBases\r\n            />\r\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\r\n              <>\r\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\r\n                  <RowBetween padding=\"1rem\">\r\n                    <Text fontSize=\"14px\">\r\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\r\n                    </Text>\r\n                  </RowBetween>{' '}\r\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\r\n                    <PoolPriceBar\r\n                      currencies={currencies}\r\n                      poolTokenPercentage={poolTokenPercentage}\r\n                      noLiquidity={noLiquidity}\r\n                      price={price}\r\n                    />\r\n                  </LightCard>\r\n                </LightCard>\r\n              </>\r\n            )}\r\n\r\n            {addIsUnsupported ? (\r\n              <Button style={{ borderRadius: '16px' }} disabled mb=\"4px\">\r\n                {t('Unsupported Asset')}\r\n              </Button>\r\n            ) : !account ? (\r\n              <UnlockButton />\r\n            ) : (\r\n              <AutoColumn gap=\"md\">\r\n                {(approvalA === ApprovalState.NOT_APPROVED ||\r\n                  approvalA === ApprovalState.PENDING ||\r\n                  approvalB === ApprovalState.NOT_APPROVED ||\r\n                  approvalB === ApprovalState.PENDING) &&\r\n                  isValid && (\r\n                    <RowBetween>\r\n                      {approvalA !== ApprovalState.APPROVED && (\r\n                        <Button\r\n                          style={{ borderRadius: '16px' }}\r\n                          onClick={approveACallback}\r\n                          disabled={approvalA === ApprovalState.PENDING}\r\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\r\n                        >\r\n                          {approvalA === ApprovalState.PENDING ? (\r\n                            <Dots>{t('Approving %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\r\n                          ) : (\r\n                            t('Approve %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\r\n                          )}\r\n                        </Button>\r\n                      )}\r\n                      {approvalB !== ApprovalState.APPROVED && (\r\n                        <Button\r\n                          style={{ borderRadius: '16px' }}\r\n                          onClick={approveBCallback}\r\n                          disabled={approvalB === ApprovalState.PENDING}\r\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\r\n                        >\r\n                          {approvalB === ApprovalState.PENDING ? (\r\n                            <Dots>{t('Approving %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\r\n                          ) : (\r\n                            t('Approve %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\r\n                          )}\r\n                        </Button>\r\n                      )}\r\n                    </RowBetween>\r\n                  )}\r\n                <Button\r\n                  style={{ borderRadius: '16px' }}\r\n                  variant={\r\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\r\n                      ? 'danger'\r\n                      : 'primary'\r\n                  }\r\n                  onClick={() => {\r\n                    if (expertMode) {\r\n                      onAdd()\r\n                    } else {\r\n                      onPresentAddLiquidityModal()\r\n                    }\r\n                  }}\r\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\r\n                >\r\n                  {error ?? 'Supply'}\r\n                </Button>\r\n              </AutoColumn>\r\n            )}\r\n          </AutoColumn>\r\n        </CardBody>\r\n      </AppBody>\r\n      {!addIsUnsupported ? (\r\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\r\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '350px', marginTop: '1rem', marginBottom: '2rem' }}>\r\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\r\n          </AutoColumn>\r\n        ) : null\r\n      ) : (\r\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\r\n      )}\r\n    </Page>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\r\nimport {\r\n  Button,\r\n  Text,\r\n  ChevronUpIcon,\r\n  ChevronDownIcon,\r\n  Card,\r\n  CardBody,\r\n  Flex,\r\n  CardProps,\r\n  AddIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport useTotalSupply from '../../hooks/useTotalSupply'\r\n\r\nimport { useTokenBalance } from '../../state/wallet/hooks'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\r\n\r\nimport { LightCard } from '../Card'\r\nimport { AutoColumn } from '../Layout/Column'\r\nimport CurrencyLogo from '../Logo/CurrencyLogo'\r\nimport { DoubleCurrencyLogo } from '../Logo'\r\nimport { RowBetween, RowFixed } from '../Layout/Row'\r\nimport { BIG_INT_ZERO } from '../../config/constants'\r\nimport Dots from '../Loader/Dots'\r\n\r\nconst FixedHeightRow = styled(RowBetween)`\r\n  height: 24px;\r\n`\r\n\r\ninterface PositionCardProps extends CardProps {\r\n  pair: Pair\r\n  showUnwrapped?: boolean\r\n}\r\n\r\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\r\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\r\n\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n  const poolTokenPercentage =\r\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\r\n      : undefined\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n      !!totalPoolTokens &&\r\n      !!userPoolBalance &&\r\n      // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n      JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? [\r\n        pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\r\n        pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\r\n      ]\r\n      : [undefined, undefined]\r\n\r\n  return (\r\n    <>\r\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\r\n        <Card style={{ borderRadius: '30px' }}>\r\n          <CardBody>\r\n            <AutoColumn gap=\"16px\">\r\n              <FixedHeightRow>\r\n                <RowFixed>\r\n                  <Text color=\"secondary\" bold>\r\n                    {t('LP tokens in your wallet')}\r\n                  </Text>\r\n                </RowFixed>\r\n              </FixedHeightRow>\r\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\r\n                <RowFixed>\r\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\r\n                  <Text small color=\"textSubtle\">\r\n                    {currency0.symbol}-{currency1.symbol} LP\r\n                  </Text>\r\n                </RowFixed>\r\n                <RowFixed>\r\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\r\n                </RowFixed>\r\n              </FixedHeightRow>\r\n              <AutoColumn gap=\"4px\">\r\n                <FixedHeightRow>\r\n                  <Text color=\"textSubtle\" small>\r\n                    {t('Share of Pool')}:\r\n                  </Text>\r\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\r\n                </FixedHeightRow>\r\n                <FixedHeightRow>\r\n                  <Text color=\"textSubtle\" small>\r\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\r\n                  </Text>\r\n                  {token0Deposited ? (\r\n                    <RowFixed>\r\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\r\n                    </RowFixed>\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </FixedHeightRow>\r\n                <FixedHeightRow>\r\n                  <Text color=\"textSubtle\" small>\r\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\r\n                  </Text>\r\n                  {token1Deposited ? (\r\n                    <RowFixed>\r\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\r\n                    </RowFixed>\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </FixedHeightRow>\r\n              </AutoColumn>\r\n            </AutoColumn>\r\n          </CardBody>\r\n        </Card>\r\n      ) : (\r\n        <LightCard style={{ borderRadius: '30px' }}>\r\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\r\n            <span role=\"img\" aria-label=\"pancake-icon\">\r\n              🥞\r\n            </span>{' '}\r\n            {t(\r\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\r\n            )}\r\n          </Text>\r\n        </LightCard>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const currency0 = unwrappedToken(pair.token0)\r\n  const currency1 = unwrappedToken(pair.token1)\r\n\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n  const poolTokenPercentage =\r\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\r\n      : undefined\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n      !!totalPoolTokens &&\r\n      !!userPoolBalance &&\r\n      // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n      JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? [\r\n        pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\r\n        pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\r\n      ]\r\n      : [undefined, undefined]\r\n\r\n  return (\r\n    <Card style={{ borderRadius: '12px' }} {...props}>\r\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\r\n        <Flex flexDirection=\"column\">\r\n          <Flex alignItems=\"center\" mb=\"4px\">\r\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\r\n            <Text bold ml=\"8px\">\r\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\r\n            </Text>\r\n          </Flex>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {userPoolBalance?.toSignificant(4)}\r\n          </Text>\r\n        </Flex>\r\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n      </Flex>\r\n\r\n      {showMore && (\r\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\r\n          <FixedHeightRow>\r\n            <RowFixed>\r\n              <CurrencyLogo size=\"20px\" currency={currency0} />\r\n              <Text color=\"textSubtle\" ml=\"4px\">\r\n                Pooled {currency0.symbol}\r\n              </Text>\r\n            </RowFixed>\r\n            {token0Deposited ? (\r\n              <RowFixed>\r\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\r\n              </RowFixed>\r\n            ) : (\r\n              '-'\r\n            )}\r\n          </FixedHeightRow>\r\n\r\n          <FixedHeightRow>\r\n            <RowFixed>\r\n              <CurrencyLogo size=\"20px\" currency={currency1} />\r\n              <Text color=\"textSubtle\" ml=\"4px\">\r\n                Pooled {currency1.symbol}\r\n              </Text>\r\n            </RowFixed>\r\n            {token1Deposited ? (\r\n              <RowFixed>\r\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\r\n              </RowFixed>\r\n            ) : (\r\n              '-'\r\n            )}\r\n          </FixedHeightRow>\r\n\r\n          <FixedHeightRow>\r\n            <Text color=\"textSubtle\">Share of pool</Text>\r\n            <Text>\r\n              {poolTokenPercentage\r\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\r\n                : '-'}\r\n            </Text>\r\n          </FixedHeightRow>\r\n\r\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\r\n            <Flex flexDirection=\"column\">\r\n              <Button\r\n                as={Link}\r\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\r\n                variant=\"primary\"\r\n                width=\"100%\"\r\n                mb=\"8px\"\r\n                style={{ borderRadius: '16px' }}\r\n              >\r\n                Remove\r\n              </Button>\r\n              <Button\r\n                as={Link}\r\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\r\n                variant=\"text\"\r\n                startIcon={<AddIcon color=\"primary\" />}\r\n                width=\"100%\"\r\n              >\r\n                Add liquidity instead\r\n              </Button>\r\n            </Flex>\r\n          )}\r\n        </AutoColumn>\r\n      )}\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport Container from '../Layout/Container'\r\n\r\nconst Outer = styled(Box) <{ background?: string }>`\r\n  text-align: center;\r\n  margin-top: 50px;\r\n`\r\n\r\nconst Inner = styled(Container)`\r\n  padding-top: 32px;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\r\n  <Outer background={background} {...props}>\r\n    <Inner>{children}</Inner>\r\n  </Outer>\r\n)\r\n\r\nexport default PageHeader;\r\n","const ARCHIVED_FARMS_START_PID = 0\r\nconst ARCHIVED_FARMS_END_PID = 19\r\n\r\nconst isArchivedPid = (pid: number) => pid === ARCHIVED_FARMS_START_PID\r\n\r\nexport default isArchivedPid\r\n","import BigNumber from 'bignumber.js'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\r\nimport lpAprs from 'config/constants/lpAprs.json'\r\n\r\n/**\r\n * Get the APR value in %\r\n * @param stakingTokenPrice Token price in the same quote currency\r\n * @param rewardTokenPrice Token price in the same quote currency\r\n * @param totalStaked Total amount of stakingToken in the pool\r\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\r\n * @returns Null if the APR is NaN or infinite.\r\n */\r\nexport const getPoolApr = (\r\n  stakingTokenPrice: number,\r\n  rewardTokenPrice: number,\r\n  totalStaked: number,\r\n  tokenPerBlock: number,\r\n): number => {\r\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\r\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\r\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\r\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\r\n}\r\n\r\n/**\r\n * Get farm APR value in %\r\n * @param poolWeight allocationPoint / totalAllocationPoint\r\n * @param cakePriceUsd Cake price in USD\r\n * @param poolLiquidityUsd Total pool liquidity in USD\r\n * @returns\r\n */\r\nexport const getFarmApr = (\r\n  poolWeight: BigNumber,\r\n  cakePriceUsd: BigNumber,\r\n  poolLiquidityUsd: BigNumber,\r\n  farmAddress: string,\r\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\r\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\r\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\r\n  let cakeRewardsAprAsNumber = null\r\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\r\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\r\n  }\r\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\r\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\r\n}\r\n\r\nexport default null\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\r\n\r\nconst DropDownHeader = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 16px;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  transition: border-radius 0.15s;\r\n`\r\n\r\nconst DropDownListContainer = styled.div`\r\n  min-width: 136px;\r\n  height: 0;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  opacity: 0;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n`\r\n\r\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\r\n  cursor: pointer;\r\n  width: ${({ width }) => width}px;\r\n  position: relative;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  height: 40px;\r\n  min-width: 136px;\r\n  user-select: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    css`\r\n      ${DropDownHeader} {\r\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n        border-radius: 16px 16px 0 0;\r\n      }\r\n\r\n      ${DropDownListContainer} {\r\n        height: auto;\r\n        transform: scaleY(1);\r\n        opacity: 1;\r\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        border-top-width: 0;\r\n        border-radius: 0 0 16px 16px;\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n      }\r\n    `}\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst DropDownList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n`\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n  padding: 8px 16px;\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.inputSecondary};\r\n  }\r\n`\r\n\r\nexport interface SelectProps {\r\n  options: OptionProps[]\r\n  onChange?: (option: OptionProps) => void\r\n}\r\n\r\nexport interface OptionProps {\r\n  label: string\r\n  value: any\r\n}\r\n\r\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\r\n  const containerRef = useRef(null)\r\n  const dropdownRef = useRef(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\r\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\r\n\r\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    setIsOpen(!isOpen)\r\n    event.stopPropagation()\r\n  }\r\n\r\n  const onOptionClicked = (selectedIndex: number) => () => {\r\n    setSelectedOptionIndex(selectedIndex)\r\n    setIsOpen(false)\r\n\r\n    if (onChange) {\r\n      onChange(options[selectedIndex])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setContainerSize({\r\n      width: dropdownRef.current.offsetWidth, // Consider border\r\n      height: dropdownRef.current.offsetHeight,\r\n    })\r\n\r\n    const handleClickOutside = () => {\r\n      setIsOpen(false)\r\n    }\r\n\r\n    document.addEventListener('click', handleClickOutside)\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\r\n      {containerSize.width !== 0 && (\r\n        <DropDownHeader onClick={toggling}>\r\n          <Text>{options[selectedOptionIndex].label}</Text>\r\n        </DropDownHeader>\r\n      )}\r\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\r\n      <DropDownListContainer>\r\n        <DropDownList ref={dropdownRef}>\r\n          {options.map((option, index) =>\r\n            index !== selectedOptionIndex ? (\r\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\r\n                <Text>{option.label}</Text>\r\n              </ListItem>\r\n            ) : null,\r\n          )}\r\n        </DropDownList>\r\n      </DropDownListContainer>\r\n    </DropDownContainer>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import { useState, useEffect } from 'react'\r\n\r\n/**\r\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\r\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\r\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\r\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\r\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\r\n * This hook \"shows\" element immediately when the isMounted is true\r\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\r\n * delayTime should be the same as animation time in most cases.\r\n */\r\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\r\n  const [shouldRender, setShouldRender] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let timeoutId: ReturnType<typeof setTimeout>\r\n    if (isMounted && !shouldRender) {\r\n      setShouldRender(true)\r\n    } else if (!isMounted && shouldRender) {\r\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\r\n    }\r\n    return () => clearTimeout(timeoutId)\r\n  }, [isMounted, delayTime, shouldRender])\r\n  return shouldRender\r\n}\r\n\r\nexport default useDelayedUnmount\r\n","import React from 'react'\r\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nimport { SUGGESTED_BASES } from '../../config/constants'\r\nimport { AutoColumn } from '../Layout/Column'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport { AutoRow } from '../Layout/Row'\r\nimport { CurrencyLogo } from '../Logo'\r\n\r\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\r\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\r\n  border-radius: 10px;\r\n  display: flex;\r\n  padding: 6px;\r\n\r\n  align-items: center;\r\n  :hover {\r\n    cursor: ${({ disable }) => !disable && 'pointer'};\r\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\r\n  }\r\n\r\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\r\n  opacity: ${({ disable }) => disable && '0.4'};\r\n`\r\n\r\nexport default function CommonBases({\r\n  chainId,\r\n  onSelect,\r\n  selectedCurrency,\r\n}: {\r\n  chainId?: ChainId\r\n  selectedCurrency?: Currency | null\r\n  onSelect: (currency: Currency) => void\r\n}) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <AutoRow>\r\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\r\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\r\n      </AutoRow>\r\n      <AutoRow gap=\"auto\">\r\n        <BaseWrapper\r\n          onClick={() => {\r\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\r\n              onSelect(ETHER)\r\n            }\r\n          }}\r\n          disable={selectedCurrency === ETHER}\r\n        >\r\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\r\n          <Text>Nextep</Text>\r\n        </BaseWrapper>\r\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\r\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\r\n          return (\r\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\r\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\r\n              <Text>{token.symbol}</Text>\r\n            </BaseWrapper>\r\n          )\r\n        })}\r\n      </AutoRow>\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\r\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\r\nimport { ListLogo } from 'components/Logo'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedInactiveList } from 'state/lists/hooks'\r\nimport styled from 'styled-components'\r\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst TokenSection = styled.div<{ dim?: boolean }>`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) auto;\r\n  grid-gap: 16px;\r\n  align-items: center;\r\n\r\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\r\n`\r\n\r\nconst CheckIcon = styled(CheckmarkCircleIcon)`\r\n  height: 16px;\r\n  width: 16px;\r\n  margin-right: 6px;\r\n  stroke: ${({ theme }) => theme.colors.success};\r\n`\r\n\r\nconst NameOverflow = styled.div`\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 140px;\r\n  font-size: 12px;\r\n`\r\n\r\nexport default function ImportRow({\r\n  token,\r\n  style,\r\n  dim,\r\n  showImportView,\r\n  setImportToken,\r\n}: {\r\n  token: Token\r\n  style?: CSSProperties\r\n  dim?: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n}) {\r\n  // gloabls\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // check if token comes from list\r\n  const inactiveTokenList = useCombinedInactiveList()\r\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\r\n\r\n  // check if already active on list or local storage tokens\r\n  const isAdded = useIsUserAddedToken(token)\r\n  const isActive = useIsTokenActive(token)\r\n\r\n  return (\r\n    <TokenSection style={style}>\r\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\r\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\r\n        <AutoRow>\r\n          <Text>{token.symbol}</Text>\r\n          <Text color=\"textDisabled\" ml=\"8px\">\r\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\r\n          </Text>\r\n        </AutoRow>\r\n        {list && list.logoURI && (\r\n          <RowFixed>\r\n            <Text small mr=\"4px\" color=\"textSubtle\">\r\n              {t('via')} {list.name}\r\n            </Text>\r\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\r\n          </RowFixed>\r\n        )}\r\n      </AutoColumn>\r\n      {!isActive && !isAdded ? (\r\n        <Button\r\n          width=\"fit-content\"\r\n          onClick={() => {\r\n            if (setImportToken) {\r\n              setImportToken(token)\r\n            }\r\n            showImportView()\r\n          }}\r\n        >\r\n          {t('Import')}\r\n        </Button>\r\n      ) : (\r\n        <RowFixed style={{ minWidth: 'fit-content' }}>\r\n          <CheckIcon />\r\n          <Text color=\"success\">Active</Text>\r\n        </RowFixed>\r\n      )}\r\n    </TokenSection>\r\n  )\r\n}\r\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\r\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { LightGreyCard } from 'components/Card'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedActiveList } from '../../state/lists/hooks'\r\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\r\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\r\nimport Column from '../Layout/Column'\r\nimport { RowFixed, RowBetween } from '../Layout/Row'\r\nimport { CurrencyLogo } from '../Logo'\r\nimport CircleLoader from '../Loader/CircleLoader'\r\nimport { isTokenOnList } from '../../utils'\r\nimport ImportRow from './ImportRow'\r\n\r\nfunction currencyKey(currency: Currency): string {\r\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\r\n}\r\n\r\nconst StyledBalanceText = styled(Text)`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  max-width: 5rem;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst FixedContentRow = styled.div`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  align-items: center;\r\n`\r\n\r\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\r\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\r\n}\r\n\r\nconst MenuItem = styled(RowBetween) <{ disabled: boolean; selected: boolean }>`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\r\n  grid-gap: 8px;\r\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\r\n  pointer-events: ${({ disabled }) => disabled && 'none'};\r\n  :hover {\r\n    background-color: #dbc6c6;\r\n  }\r\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\r\n`\r\n\r\nfunction CurrencyRow({\r\n  currency,\r\n  onSelect,\r\n  isSelected,\r\n  otherSelected,\r\n  style,\r\n}: {\r\n  currency: Currency\r\n  onSelect: () => void\r\n  isSelected: boolean\r\n  otherSelected: boolean\r\n  style: CSSProperties\r\n}) {\r\n  const { account } = useActiveWeb3React()\r\n  const key = currencyKey(currency)\r\n  const selectedTokenList = useCombinedActiveList()\r\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\r\n  const customAdded = useIsUserAddedToken(currency)\r\n  const balance = useCurrencyBalance(account ?? undefined, currency)\r\n\r\n  // only show add or remove buttons if not on selected list\r\n  return (\r\n    <MenuItem\r\n      style={style}\r\n      className={`token-item-${key}`}\r\n      onClick={() => (isSelected ? null : onSelect())}\r\n      disabled={isSelected}\r\n      selected={otherSelected}\r\n    >\r\n      <CurrencyLogo currency={currency} size=\"24px\" />\r\n      <Column>\r\n        <Text bold>{currency.symbol}</Text>\r\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\r\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\r\n        </Text>\r\n      </Column>\r\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\r\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\r\n      </RowFixed>\r\n    </MenuItem>\r\n  )\r\n}\r\n\r\nexport default function CurrencyList({\r\n  height,\r\n  currencies,\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherCurrency,\r\n  fixedListRef,\r\n  showETH,\r\n  showImportView,\r\n  setImportToken,\r\n  breakIndex,\r\n}: {\r\n  height: number\r\n  currencies: Currency[]\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherCurrency?: Currency | null\r\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\r\n  showETH: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n  breakIndex: number | undefined\r\n}) {\r\n  const itemData: (Currency | undefined)[] = useMemo(() => {\r\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\r\n    if (breakIndex !== undefined) {\r\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\r\n    }\r\n    return formatted\r\n  }, [breakIndex, currencies, showETH])\r\n\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const inactiveTokens: {\r\n    [address: string]: Token\r\n  } = useAllInactiveTokens()\r\n\r\n  const Row = useCallback(\r\n    ({ data, index, style }) => {\r\n      const currency: Currency = data[index]\r\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\r\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\r\n      const handleSelect = () => onCurrencySelect(currency)\r\n\r\n      const token = wrappedCurrency(currency, chainId)\r\n\r\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\r\n\r\n      if (index === breakIndex || !data) {\r\n        return (\r\n          <FixedContentRow style={style}>\r\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\r\n              <RowBetween>\r\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\r\n                <QuestionHelper\r\n                  text={t(\r\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\r\n                  )}\r\n                  ml=\"4px\"\r\n                />\r\n              </RowBetween>\r\n            </LightGreyCard>\r\n          </FixedContentRow>\r\n        )\r\n      }\r\n\r\n      if (showImport && token) {\r\n        return (\r\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\r\n        )\r\n      }\r\n      return (\r\n        <CurrencyRow\r\n          style={style}\r\n          currency={currency}\r\n          isSelected={isSelected}\r\n          onSelect={handleSelect}\r\n          otherSelected={otherSelected}\r\n        />\r\n      )\r\n    },\r\n    [\r\n      chainId,\r\n      inactiveTokens,\r\n      onCurrencySelect,\r\n      otherCurrency,\r\n      selectedCurrency,\r\n      setImportToken,\r\n      showImportView,\r\n      breakIndex,\r\n      t,\r\n    ],\r\n  )\r\n\r\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\r\n\r\n  return (\r\n    <FixedSizeList\r\n      height={height}\r\n      ref={fixedListRef as any}\r\n      width=\"100%\"\r\n      itemData={itemData}\r\n      itemCount={itemData.length}\r\n      itemSize={56}\r\n      itemKey={itemKey}\r\n    >\r\n      {Row}\r\n    </FixedSizeList>\r\n  )\r\n}\r\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\r\n\r\n// compare two token amounts with highest one coming first\r\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\r\n  if (balanceA && balanceB) {\r\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\r\n  }\r\n  if (balanceA && balanceA.greaterThan('0')) {\r\n    return -1\r\n  }\r\n  if (balanceB && balanceB.greaterThan('0')) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getTokenComparator(balances: {\r\n  [tokenAddress: string]: TokenAmount | undefined\r\n}): (tokenA: Token, tokenB: Token) => number {\r\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\r\n    // -1 = a is first\r\n    // 1 = b is first\r\n\r\n    // sort by balances\r\n    const balanceA = balances[tokenA.address]\r\n    const balanceB = balances[tokenB.address]\r\n\r\n    const balanceComp = balanceComparator(balanceA, balanceB)\r\n    if (balanceComp !== 0) return balanceComp\r\n\r\n    if (tokenA.symbol && tokenB.symbol) {\r\n      // sort by symbol\r\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\r\n    }\r\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\r\n  }\r\n}\r\n\r\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\r\n  const balances = useAllTokenBalances()\r\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\r\n  return useMemo(() => {\r\n    if (inverted) {\r\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\r\n    }\r\n    return comparator\r\n  }, [inverted, comparator])\r\n}\r\n\r\nexport default useTokenComparator\r\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState } from 'react'\r\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text, Input, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { useAudioModeManager } from 'state/user/hooks'\r\nimport useDebounce from 'hooks/useDebounce'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\r\nimport { isAddress } from '../../utils'\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport Row from '../Layout/Row'\r\nimport CommonBases from './CommonBases'\r\nimport CurrencyList from './CurrencyList'\r\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\r\nimport useTokenComparator from './sorting'\r\n\r\nimport ImportRow from './ImportRow'\r\n\r\ninterface CurrencySearchProps {\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  showCommonBases?: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n}\r\n\r\nconst swapSound = new Audio('swap.mp3')\r\n\r\nfunction CurrencySearch({\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherSelectedCurrency,\r\n  showCommonBases,\r\n  showImportView,\r\n  setImportToken,\r\n}: CurrencySearchProps) {\r\n  const { t } = useTranslation()\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  // refs for fixed size lists\r\n  const fixedList = useRef<FixedSizeList>()\r\n\r\n  const [searchQuery, setSearchQuery] = useState<string>('')\r\n  const debouncedQuery = useDebounce(searchQuery, 200)\r\n\r\n  const [invertSearchOrder] = useState<boolean>(false)\r\n\r\n  const allTokens = useAllTokens()\r\n  // const allTokens = [address:'ssdfsdaf']\r\n\r\n  // if they input an address, use it\r\n  const searchToken = useToken(debouncedQuery)\r\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\r\n\r\n  const [audioPlay] = useAudioModeManager()\r\n\r\n  const showETH: boolean = useMemo(() => {\r\n\r\n    const s = debouncedQuery.toLowerCase().trim()\r\n    return s === '' || s === 'c' || s === 'cx' || s === 'cxs'\r\n  }, [debouncedQuery])\r\n\r\n  const tokenComparator = useTokenComparator(invertSearchOrder)\r\n\r\n  const filteredTokens: Token[] = useMemo(() => {\r\n    return filterTokens(Object.values(allTokens), debouncedQuery)\r\n  }, [allTokens, debouncedQuery])\r\n\r\n  const sortedTokens: Token[] = useMemo(() => {\r\n    return filteredTokens.sort(tokenComparator)\r\n  }, [filteredTokens, tokenComparator])\r\n\r\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n\r\n      onCurrencySelect(currency)\r\n      if (audioPlay) {\r\n        swapSound.play()\r\n      }\r\n    },\r\n    [audioPlay, onCurrencySelect],\r\n  )\r\n\r\n  // manage focus on modal show\r\n  const inputRef = useRef<HTMLInputElement>()\r\n  const handleInput = useCallback((event) => {\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setSearchQuery(checksummedInput || input)\r\n    fixedList.current?.scrollTo(0)\r\n  }, [])\r\n\r\n  const handleEnter = useCallback(\r\n    (e: KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.key === 'Enter') {\r\n        const s = debouncedQuery.toLowerCase().trim()\r\n        if (s === 'cxs') {\r\n          handleCurrencySelect(ETHER)\r\n        } else if (filteredSortedTokens.length > 0) {\r\n          if (\r\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\r\n            filteredSortedTokens.length === 1\r\n          ) {\r\n            handleCurrencySelect(filteredSortedTokens[0])\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\r\n  )\r\n\r\n  // if no results on main list, show option to expand into inactive\r\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\r\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <AutoColumn gap=\"16px\">\r\n          <Row>\r\n            <Input\r\n              id=\"token-search-input\"\r\n              placeholder={t('Search name or paste address')}\r\n              scale=\"lg\"\r\n              autoComplete=\"off\"\r\n              value={searchQuery}\r\n              ref={inputRef as RefObject<HTMLInputElement>}\r\n              onChange={handleInput}\r\n              onKeyDown={handleEnter}\r\n              style={{ background: '#eeeaf4', border: 'none', borderRadius: '10px', color: 'black' }}\r\n            />\r\n          </Row>\r\n          {showCommonBases && (\r\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\r\n          )}\r\n        </AutoColumn>\r\n        {searchToken && !searchTokenIsAdded ? (\r\n          <Column style={{ padding: '20px 0', height: '100%' }}>\r\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\r\n          </Column>\r\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\r\n          <Box margin=\"24px -24px\">\r\n            <CurrencyList\r\n              height={390}\r\n              showETH={showETH}\r\n              currencies={\r\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\r\n              }\r\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\r\n              onCurrencySelect={handleCurrencySelect}\r\n              otherCurrency={otherSelectedCurrency}\r\n              selectedCurrency={selectedCurrency}\r\n              fixedListRef={fixedList}\r\n              showImportView={showImportView}\r\n              setImportToken={setImportToken}\r\n            />\r\n          </Box>\r\n        ) : (\r\n          <Column style={{ padding: '20px', height: '100%' }}>\r\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\r\n              {t('No results found.')}\r\n            </Text>\r\n          </Column>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CurrencySearch;\r\n","export enum CurrencyModalView {\r\n  search,\r\n  manage,\r\n  importToken,\r\n  importList,\r\n}\r\n\r\nexport default CurrencyModalView\r\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\r\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { TokenList, Version } from '@uniswap/token-lists'\r\nimport Card from 'components/Card'\r\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\r\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\r\n\r\nimport { AppDispatch, AppState } from '../../state'\r\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\r\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\r\nimport uriToHttp from '../../utils/uriToHttp'\r\n\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport { ListLogo } from '../Logo'\r\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\r\nimport { CurrencyModalView } from './types'\r\n\r\nfunction listVersionLabel(version: Version): string {\r\n  return `v${version.major}.${version.minor}.${version.patch}`\r\n}\r\n\r\nconst Wrapper = styled(Column)`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst RowWrapper = styled(Row)<{ active: boolean }>`\r\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\r\n  border: solid 1px;\r\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\r\n  transition: 200ms;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  border-radius: 20px;\r\n`\r\n\r\nfunction listUrlRowHTMLId(listUrl: string) {\r\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\r\n}\r\n\r\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\r\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\r\n\r\n  const isActive = useIsListActive(listUrl)\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const handleAcceptListUpdate = useCallback(() => {\r\n    if (!pending) return\r\n    dispatch(acceptListUpdate(listUrl))\r\n  }, [dispatch, listUrl, pending])\r\n\r\n  const handleRemoveList = useCallback(() => {\r\n    // eslint-disable-next-line no-alert\r\n    if (window.confirm('Please confirm you would like to remove this list')) {\r\n      dispatch(removeList(listUrl))\r\n    }\r\n  }, [dispatch, listUrl])\r\n\r\n  const handleEnableList = useCallback(() => {\r\n    dispatch(enableList(listUrl))\r\n  }, [dispatch, listUrl])\r\n\r\n  const handleDisableList = useCallback(() => {\r\n    dispatch(disableList(listUrl))\r\n  }, [dispatch, listUrl])\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <div>\r\n      <Text>{list && listVersionLabel(list.version)}</Text>\r\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\r\n        {t('See')}\r\n      </LinkExternal>\r\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\r\n        {t('Remove')}\r\n      </Button>\r\n      {pending && (\r\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\r\n          {t('Update list')}\r\n        </Button>\r\n      )}\r\n    </div>,\r\n    { placement: 'right-end', trigger: 'click' },\r\n  )\r\n\r\n  if (!list) return null\r\n\r\n  return (\r\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\r\n      {tooltipVisible && tooltip}\r\n      {list.logoURI ? (\r\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\r\n      ) : (\r\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\r\n      )}\r\n      <Column style={{ flex: '1' }}>\r\n        <Row>\r\n          <Text bold>{list.name}</Text>\r\n        </Row>\r\n        <RowFixed mt=\"4px\">\r\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\r\n            {list.tokens.length} {t('Tokens')}\r\n          </Text>\r\n          <span ref={targetRef}>\r\n            <CogIcon color=\"text\" width=\"12px\" />\r\n          </span>\r\n        </RowFixed>\r\n      </Column>\r\n      <Toggle\r\n        checked={isActive}\r\n        onChange={() => {\r\n          if (isActive) {\r\n            handleDisableList()\r\n          } else {\r\n            handleEnableList()\r\n          }\r\n        }}\r\n      />\r\n    </RowWrapper>\r\n  )\r\n})\r\n\r\nconst ListContainer = styled.div`\r\n  padding: 1rem 0;\r\n  height: 100%;\r\n  overflow: auto;\r\n`\r\n\r\nfunction ManageLists({\r\n  setModalView,\r\n  setImportList,\r\n  setListUrl,\r\n}: {\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportList: (list: TokenList) => void\r\n  setListUrl: (url: string) => void\r\n}) {\r\n  const [listUrlInput, setListUrlInput] = useState<string>('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const lists = useAllLists()\r\n\r\n  // sort by active but only if not visible\r\n  const activeListUrls = useActiveListUrls()\r\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\r\n  useEffect(() => {\r\n    if (!activeCopy && activeListUrls) {\r\n      setActiveCopy(activeListUrls)\r\n    }\r\n  }, [activeCopy, activeListUrls])\r\n\r\n  const handleInput = useCallback((e) => {\r\n    setListUrlInput(e.target.value)\r\n  }, [])\r\n\r\n  const fetchList = useFetchListCallback()\r\n\r\n  const validUrl: boolean = useMemo(() => {\r\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\r\n  }, [listUrlInput])\r\n\r\n  const sortedLists = useMemo(() => {\r\n    const listUrls = Object.keys(lists)\r\n    return listUrls\r\n      .filter((listUrl) => {\r\n        // only show loaded lists, hide unsupported lists\r\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\r\n      })\r\n      .sort((u1, u2) => {\r\n        const { current: l1 } = lists[u1]\r\n        const { current: l2 } = lists[u2]\r\n\r\n        // first filter on active lists\r\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\r\n          return -1\r\n        }\r\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\r\n          return 1\r\n        }\r\n\r\n        if (l1 && l2) {\r\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\r\n            ? -1\r\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\r\n            ? 0\r\n            : 1\r\n        }\r\n        if (l1) return -1\r\n        if (l2) return 1\r\n        return 0\r\n      })\r\n  }, [lists, activeCopy])\r\n\r\n  // temporary fetched list for import flow\r\n  const [tempList, setTempList] = useState<TokenList>()\r\n  const [addError, setAddError] = useState<string | undefined>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTempList() {\r\n      fetchList(listUrlInput, false)\r\n        .then((list) => setTempList(list))\r\n        .catch(() => setAddError('Error importing list'))\r\n    }\r\n    // if valid url, fetch details for card\r\n    if (validUrl) {\r\n      fetchTempList()\r\n    } else {\r\n      setTempList(undefined)\r\n      if (listUrlInput !== '') {\r\n        setAddError('Enter valid list location')\r\n      }\r\n    }\r\n\r\n    // reset error\r\n    if (listUrlInput === '') {\r\n      setAddError(undefined)\r\n    }\r\n  }, [fetchList, listUrlInput, validUrl])\r\n\r\n  // check if list is already imported\r\n  const isImported = Object.keys(lists).includes(listUrlInput)\r\n\r\n  // set list values and have parent modal switch to import list view\r\n  const handleImport = useCallback(() => {\r\n    if (!tempList) return\r\n    setImportList(tempList)\r\n    setModalView(CurrencyModalView.importList)\r\n    setListUrl(listUrlInput)\r\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn gap=\"14px\">\r\n        <Row>\r\n          <Input\r\n            id=\"list-add-input\"\r\n            scale=\"lg\"\r\n            placeholder={t('https:// or ipfs:// or ENS name')}\r\n            value={listUrlInput}\r\n            onChange={handleInput}\r\n          />\r\n        </Row>\r\n        {addError ? (\r\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n            {addError}\r\n          </Text>\r\n        ) : null}\r\n      </AutoColumn>\r\n      {tempList && (\r\n        <AutoColumn style={{ paddingTop: 0 }}>\r\n          <Card padding=\"12px 20px\">\r\n            <RowBetween>\r\n              <RowFixed>\r\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\r\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\r\n                  <Text bold>{tempList.name}</Text>\r\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\r\n                    {tempList.tokens.length} {t('Tokens')}\r\n                  </Text>\r\n                </AutoColumn>\r\n              </RowFixed>\r\n              {isImported ? (\r\n                <RowFixed>\r\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\r\n                  <Text>{t('Loaded')}</Text>\r\n                </RowFixed>\r\n              ) : (\r\n                <Button width=\"fit-content\" onClick={handleImport}>\r\n                  {t('Import')}\r\n                </Button>\r\n              )}\r\n            </RowBetween>\r\n          </Card>\r\n        </AutoColumn>\r\n      )}\r\n      <ListContainer>\r\n        <AutoColumn gap=\"md\">\r\n          {sortedLists.map((listUrl) => (\r\n            <ListRow key={listUrl} listUrl={listUrl} />\r\n          ))}\r\n        </AutoColumn>\r\n      </ListContainer>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ManageLists\r\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport { useToken } from 'hooks/Tokens'\r\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\r\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\r\nimport { CurrencyLogo } from 'components/Logo'\r\nimport { getBscScanLink, isAddress } from 'utils'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport ImportRow from './ImportRow'\r\nimport { CurrencyModalView } from './types'\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 60px);\r\n  position: relative;\r\n  padding-bottom: 60px;\r\n`\r\n\r\nconst Footer = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nexport default function ManageTokens({\r\n  setModalView,\r\n  setImportToken,\r\n}: {\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportToken: (token: Token) => void\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const [searchQuery, setSearchQuery] = useState<string>('')\r\n\r\n  // manage focus on modal show\r\n  const inputRef = useRef<HTMLInputElement>()\r\n  const handleInput = useCallback((event) => {\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setSearchQuery(checksummedInput || input)\r\n  }, [])\r\n\r\n  // if they input an address, use it\r\n  const searchToken = useToken(searchQuery)\r\n\r\n  // all tokens for local lisr\r\n  const userAddedTokens: Token[] = useUserAddedTokens()\r\n  const removeToken = useRemoveUserAddedToken()\r\n\r\n  const handleRemoveAll = useCallback(() => {\r\n    if (chainId && userAddedTokens) {\r\n      userAddedTokens.map((token) => {\r\n        return removeToken(chainId, token.address)\r\n      })\r\n    }\r\n  }, [removeToken, userAddedTokens, chainId])\r\n\r\n  const tokenList = useMemo(() => {\r\n    return (\r\n      chainId &&\r\n      userAddedTokens.map((token) => (\r\n        <RowBetween key={token.address} width=\"100%\">\r\n          <RowFixed>\r\n            <CurrencyLogo currency={token} size=\"20px\" />\r\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\r\n              {token.symbol}\r\n            </Link>\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\r\n          </RowFixed>\r\n        </RowBetween>\r\n      ))\r\n    )\r\n  }, [userAddedTokens, chainId, removeToken])\r\n\r\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Column style={{ width: '100%', flex: '1 1' }}>\r\n        <AutoColumn gap=\"14px\">\r\n          <Row>\r\n            <Input\r\n              id=\"token-search-input\"\r\n              scale=\"lg\"\r\n              placeholder=\"0x0000\"\r\n              value={searchQuery}\r\n              autoComplete=\"off\"\r\n              ref={inputRef as RefObject<HTMLInputElement>}\r\n              onChange={handleInput}\r\n              isWarning={!isAddressValid}\r\n            />\r\n          </Row>\r\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\r\n          {searchToken && (\r\n            <ImportRow\r\n              token={searchToken}\r\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\r\n              setImportToken={setImportToken}\r\n              style={{ height: 'fit-content' }}\r\n            />\r\n          )}\r\n        </AutoColumn>\r\n        {tokenList}\r\n        <Footer>\r\n          <Text bold color=\"textSubtle\">\r\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\r\n          </Text>\r\n          {userAddedTokens.length > 0 && (\r\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\r\n              {t('Clear all')}\r\n            </Button>\r\n          )}\r\n        </Footer>\r\n      </Column>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ManageLists from './ManageLists'\r\nimport ManageTokens from './ManageTokens'\r\nimport { CurrencyModalView } from './types'\r\n\r\nconst StyledButtonMenu = styled(ButtonMenu)`\r\n  width: 100%;\r\n`\r\n\r\nexport default function Manage({\r\n  setModalView,\r\n  setImportList,\r\n  setImportToken,\r\n  setListUrl,\r\n}: {\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportToken: (token: Token) => void\r\n  setImportList: (list: TokenList) => void\r\n  setListUrl: (url: string) => void\r\n}) {\r\n  const [showLists, setShowLists] = useState(true)\r\n\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <ModalBody>\r\n      <StyledButtonMenu\r\n        activeIndex={showLists ? 0 : 1}\r\n        onItemClick={() => setShowLists((prev) => !prev)}\r\n        scale=\"sm\"\r\n        variant=\"subtle\"\r\n        mb=\"32px\"\r\n      >\r\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\r\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\r\n      </StyledButtonMenu>\r\n      {showLists ? (\r\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\r\n      ) : (\r\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\r\n      )}\r\n    </ModalBody>\r\n  )\r\n}\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\r\nimport Card from 'components/Card'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { ListLogo } from 'components/Logo'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AppDispatch } from 'state'\r\nimport useFetchListCallback from 'hooks/useFetchListCallback'\r\nimport { removeList, enableList } from 'state/lists/actions'\r\nimport { useAllLists } from 'state/lists/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ImportProps {\r\n  listURL: string\r\n  list: TokenList\r\n  onImport: () => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`\r\n\r\nconst TextDot = styled.div`\r\n  height: 3px;\r\n  width: 3px;\r\n  background-color: ${({ theme }) => theme.colors.text};\r\n  border-radius: 50%;\r\n`\r\n\r\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\r\n  const { theme } = useTheme()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // user must accept\r\n  const [confirmed, setConfirmed] = useState(false)\r\n\r\n  const lists = useAllLists()\r\n  const fetchList = useFetchListCallback()\r\n\r\n  // monitor is list is loading\r\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\r\n  const [addError, setAddError] = useState<string | null>(null)\r\n\r\n  const handleAddList = useCallback(() => {\r\n    if (adding) return\r\n    setAddError(null)\r\n    fetchList(listURL)\r\n      .then(() => {\r\n        dispatch(enableList(listURL))\r\n        onImport()\r\n      })\r\n      .catch((error) => {\r\n        setAddError(error.message)\r\n        dispatch(removeList(listURL))\r\n      })\r\n  }, [adding, dispatch, fetchList, listURL, onImport])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn gap=\"md\">\r\n        <AutoColumn gap=\"md\">\r\n          <Card padding=\"12px 20px\">\r\n            <RowBetween>\r\n              <RowFixed>\r\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\r\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\r\n                  <RowFixed>\r\n                    <Text bold mr=\"6px\">\r\n                      {list.name}\r\n                    </Text>\r\n                    <TextDot />\r\n                    <Text small color=\"textSubtle\" ml=\"6px\">\r\n                      {list.tokens.length} tokens\r\n                    </Text>\r\n                  </RowFixed>\r\n                  <Link\r\n                    small\r\n                    external\r\n                    ellipsis\r\n                    maxWidth=\"90%\"\r\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\r\n                  >\r\n                    {listURL}\r\n                  </Link>\r\n                </AutoColumn>\r\n              </RowFixed>\r\n            </RowBetween>\r\n          </Card>\r\n\r\n          <Message variant=\"danger\">\r\n            <Flex flexDirection=\"column\">\r\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\r\n                {t('Import at your own risk')}\r\n              </Text>\r\n              <Text color={theme.colors.failure} mb=\"8px\">\r\n                {t(\r\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\r\n                )}\r\n              </Text>\r\n              <Text bold color={theme.colors.failure} mb=\"16px\">\r\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\r\n              </Text>\r\n              <Flex alignItems=\"center\">\r\n                <Checkbox\r\n                  name=\"confirmed\"\r\n                  type=\"checkbox\"\r\n                  checked={confirmed}\r\n                  onChange={() => setConfirmed(!confirmed)}\r\n                  scale=\"sm\"\r\n                />\r\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\r\n                  {t('I understand')}\r\n                </Text>\r\n              </Flex>\r\n            </Flex>\r\n          </Message>\r\n\r\n          <Button disabled={!confirmed} onClick={handleAddList}>\r\n            {t('Import')}\r\n          </Button>\r\n          {addError ? (\r\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n              {addError}\r\n            </Text>\r\n          ) : null}\r\n        </AutoColumn>\r\n      </AutoColumn>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ImportList\r\n","import React, { useCallback, useState } from 'react'\r\nimport { Currency, Token } from '@pancakeswap/sdk'\r\nimport {\r\n  ModalContainer,\r\n  ModalHeader,\r\n  ModalTitle,\r\n  ModalBackButton,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  InjectedModalProps,\r\n  Heading,\r\n  Button,\r\n} from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport usePrevious from 'hooks/usePreviousValue'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CurrencySearch from './CurrencySearch'\r\nimport ImportToken from './ImportToken'\r\nimport Manage from './Manage'\r\nimport ImportList from './ImportList'\r\nimport { CurrencyModalView } from './types'\r\n\r\nconst Footer = styled.div`\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  text-align: center;\r\n`\r\n\r\nconst StyledModalContainer = styled(ModalContainer)`\r\n  max-width: 420px;\r\n  width: 100%;\r\n  background: white;\r\n  box-sizing: content-box;\r\n  border-radius:30px;\r\n  border: none;\r\n  border-top: 4px solid transparent;\r\n`\r\n\r\nconst StyledModalBody = styled(ModalBody)`\r\n  padding: 24px;\r\n`\r\n\r\ninterface CurrencySearchModalProps extends InjectedModalProps {\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  showCommonBases?: boolean\r\n}\r\n\r\nexport default function CurrencySearchModal({\r\n  onDismiss = () => null,\r\n  onCurrencySelect,\r\n  selectedCurrency,\r\n  otherSelectedCurrency,\r\n  showCommonBases = false,\r\n}: CurrencySearchModalProps) {\r\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onCurrencySelect(currency)\r\n      onDismiss()\r\n    },\r\n    [onDismiss, onCurrencySelect],\r\n  )\r\n\r\n  // for token import view\r\n  const prevView = usePrevious(modalView)\r\n\r\n  // used for import token flow\r\n  const [importToken, setImportToken] = useState<Token | undefined>()\r\n\r\n  // used for import list\r\n  const [importList, setImportList] = useState<TokenList | undefined>()\r\n  const [listURL, setListUrl] = useState<string | undefined>()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const config = {\r\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\r\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\r\n    [CurrencyModalView.importToken]: {\r\n      title: t('Import Tokens'),\r\n      onBack: () =>\r\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\r\n    },\r\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\r\n  }\r\n\r\n  return (\r\n    <StyledModalContainer minWidth=\"320px\">\r\n      <ModalHeader>\r\n        <ModalTitle>\r\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\r\n          <Heading>{config[modalView].title}</Heading>\r\n        </ModalTitle>\r\n        <ModalCloseButton onDismiss={onDismiss} />\r\n      </ModalHeader>\r\n      <StyledModalBody>\r\n        {modalView === CurrencyModalView.search ? (\r\n          <CurrencySearch\r\n            onCurrencySelect={handleCurrencySelect}\r\n            selectedCurrency={selectedCurrency}\r\n            otherSelectedCurrency={otherSelectedCurrency}\r\n            showCommonBases={showCommonBases}\r\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\r\n            setImportToken={setImportToken}\r\n          />\r\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\r\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\r\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\r\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\r\n        ) : modalView === CurrencyModalView.manage ? (\r\n          <Manage\r\n            setModalView={setModalView}\r\n            setImportToken={setImportToken}\r\n            setImportList={setImportList}\r\n            setListUrl={setListUrl}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n      </StyledModalBody>\r\n    </StyledModalContainer>\r\n  )\r\n}\r\n","import React, { useState, useMemo } from 'react'\r\nimport { Input } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport debounce from 'lodash/debounce'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledInput = styled(Input)`\r\n  border-radius: 16px;\r\n  margin-left: auto;\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Container = styled.div<{ toggled: boolean }>``\r\n\r\ninterface Props {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\r\n  const [toggled, setToggled] = useState(false)\r\n  const [searchText, setSearchText] = useState('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const debouncedOnChange = useMemo(\r\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\r\n    [onChangeCallback],\r\n  )\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.target.value)\r\n    debouncedOnChange(e)\r\n  }\r\n\r\n  return (\r\n    <Container toggled={toggled}>\r\n      <InputWrapper>\r\n        <StyledInput\r\n          value={searchText}\r\n          onChange={onChange}\r\n          placeholder={t(placeholder)}\r\n          onBlur={() => setToggled(false)}\r\n        />\r\n      </InputWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SearchInput\r\n","import { useCallback, useEffect, useState } from 'react'\r\n\r\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\r\n\r\nfunction isWindowVisible() {\r\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\r\n}\r\n\r\n/**\r\n * Returns whether the window is currently visible to the user.\r\n */\r\nexport default function useIsWindowVisible(): boolean {\r\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\r\n  const listener = useCallback(() => {\r\n    setFocused(isWindowVisible())\r\n  }, [setFocused])\r\n\r\n  useEffect(() => {\r\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\r\n\r\n    document.addEventListener('visibilitychange', listener)\r\n    return () => {\r\n      document.removeEventListener('visibilitychange', listener)\r\n    }\r\n  }, [listener])\r\n\r\n  return focused\r\n}\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport useDebounce from 'hooks/useDebounce'\r\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\r\nimport { updateBlockNumber } from './actions'\r\n\r\nexport default function Updater(): null {\r\n  const chainId = 787;\r\n  const { library } = useWeb3Provider()\r\n  const dispatch = useDispatch()\r\n\r\n  const windowVisible = useIsWindowVisible()\r\n\r\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\r\n    chainId,\r\n    blockNumber: null,\r\n  })\r\n\r\n  const blockNumberCallback = useCallback(\r\n    (blockNumber: number) => {\r\n      setState((prev) => {\r\n        if (chainId === prev.chainId) {\r\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\r\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\r\n        }\r\n        return prev\r\n      })\r\n    },\r\n    [chainId, setState],\r\n  )\r\n\r\n  // attach/detach listeners\r\n  useEffect(() => {\r\n    if (!library || !chainId || !windowVisible) return undefined\r\n\r\n    setState({ chainId, blockNumber: null })\r\n\r\n    library\r\n      .getBlockNumber()\r\n      .then(blockNumberCallback)\r\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\r\n\r\n    library.on('block', blockNumberCallback)\r\n    return () => {\r\n      library.removeListener('block', blockNumberCallback)\r\n    }\r\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\r\n\r\n  const debouncedState = useDebounce(state, 100)\r\n\r\n  useEffect(() => {\r\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\r\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\r\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\r\n\r\n  return null\r\n}\r\n","import { useAllLists } from 'state/lists/hooks'\r\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\r\nimport { useCallback, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useAllInactiveTokens } from 'hooks/Tokens'\r\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport useFetchListCallback from 'hooks/useFetchListCallback'\r\nimport useInterval from 'hooks/useInterval'\r\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\r\nimport { AppDispatch } from '../index'\r\nimport { acceptListUpdate } from './actions'\r\nimport { useActiveListUrls } from './hooks'\r\n\r\nexport default function Updater(): null {\r\n  const { library } = useWeb3Provider()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const isWindowVisible = useIsWindowVisible()\r\n\r\n  // get all loaded lists, and the active urls\r\n  const lists = useAllLists()\r\n  const activeListUrls = useActiveListUrls()\r\n\r\n  // initiate loading\r\n  useAllInactiveTokens()\r\n\r\n  const fetchList = useFetchListCallback()\r\n  const fetchAllListsCallback = useCallback(() => {\r\n    if (!isWindowVisible) return\r\n    Object.keys(lists).forEach((url) =>\r\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\r\n    )\r\n  }, [fetchList, isWindowVisible, lists])\r\n\r\n  // fetch all lists every 10 minutes, but only after we initialize library\r\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\r\n\r\n  // whenever a list is not loaded and not loading, try again to load it\r\n  useEffect(() => {\r\n    Object.keys(lists).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n      if (!list.current && !list.loadingRequestId && !list.error) {\r\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\r\n      }\r\n    })\r\n  }, [dispatch, fetchList, library, lists])\r\n\r\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\r\n  useEffect(() => {\r\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\r\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\r\n      }\r\n    })\r\n  }, [dispatch, fetchList, library, lists])\r\n\r\n  // automatically update lists if versions are minor/patch\r\n  useEffect(() => {\r\n    Object.keys(lists).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n      if (list.current && list.pendingUpdate) {\r\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\r\n        // eslint-disable-next-line default-case\r\n        switch (bump) {\r\n          case VersionUpgrade.NONE:\r\n            throw new Error('unexpected no version bump')\r\n          // update any active or inactive lists\r\n          case VersionUpgrade.PATCH:\r\n          case VersionUpgrade.MINOR:\r\n          case VersionUpgrade.MAJOR:\r\n            dispatch(acceptListUpdate(listUrl))\r\n        }\r\n      }\r\n    })\r\n  }, [dispatch, lists, activeListUrls])\r\n\r\n  return null\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\r\n  const savedCallback = useRef<() => void>()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      const { current } = savedCallback\r\n      if (current) {\r\n        current()\r\n      }\r\n    }\r\n\r\n    if (delay !== null) {\r\n      if (leading) tick()\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n    return undefined\r\n  }, [delay, leading])\r\n}\r\n","/* eslint-disable */\r\n\r\nfunction wait(ms: number): Promise<void> {\r\n  return new Promise((resolve) => setTimeout(resolve, ms))\r\n}\r\n\r\nfunction waitRandom(min: number, max: number): Promise<void> {\r\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\r\n}\r\n\r\n/**\r\n * This error is thrown if the function is cancelled before completing\r\n */\r\nexport class CancelledError extends Error {\r\n  constructor() {\r\n    super('Cancelled')\r\n  }\r\n}\r\n\r\n/**\r\n * Throw this error if the function should retry\r\n */\r\nexport class RetryableError extends Error {}\r\n\r\n/**\r\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\r\n * @param fn function to retry\r\n * @param n how many times to retry\r\n * @param minWait min wait between retries in ms\r\n * @param maxWait max wait between retries in ms\r\n */\r\nexport function retry<T>(\r\n  fn: () => Promise<T>,\r\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\r\n): { promise: Promise<T>; cancel: () => void } {\r\n  let completed = false\r\n  let rejectCancelled: (error: Error) => void\r\n  const promise = new Promise<T>(async (resolve, reject) => {\r\n    rejectCancelled = reject\r\n    while (true) {\r\n      let result: T\r\n      try {\r\n        result = await fn()\r\n        if (!completed) {\r\n          resolve(result)\r\n          completed = true\r\n        }\r\n        break\r\n      } catch (error) {\r\n        if (completed) {\r\n          break\r\n        }\r\n        if (n <= 0 || !(error instanceof RetryableError)) {\r\n          reject(error)\r\n          completed = true\r\n          break\r\n        }\r\n        n--\r\n      }\r\n      await waitRandom(minWait, maxWait)\r\n    }\r\n  })\r\n  return {\r\n    promise,\r\n    cancel: () => {\r\n      if (completed) return\r\n      completed = true\r\n      rejectCancelled(new CancelledError())\r\n    },\r\n  }\r\n}\r\n\r\n/* eslint-enable */\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useMemo, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useMulticallContract } from '../../hooks/useContract'\r\nimport useDebounce from '../../hooks/useDebounce'\r\nimport { CancelledError, retry, RetryableError } from './retry'\r\nimport { useBlockNumber } from '../application/hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  Call,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  parseCallKey,\r\n  updateMulticallResults,\r\n} from './actions'\r\nimport chunkArray from './chunkArray'\r\n\r\n// chunk calls so we do not exceed the gas limit\r\nconst CALL_CHUNK_SIZE = 500\r\n\r\n/**\r\n * Fetches a chunk of calls, enforcing a minimum block number constraint\r\n * @param multicallContract multicall contract to fetch against\r\n * @param chunk chunk of calls to make\r\n * @param minBlockNumber minimum block number of the result set\r\n */\r\nasync function fetchChunk(\r\n  multicallContract: Contract,\r\n  chunk: Call[],\r\n  minBlockNumber: number,\r\n): Promise<{ results: string[]; blockNumber: number }> {\r\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\r\n  let resultsBlockNumber\r\n  let returnData\r\n  try {\r\n    // prettier-ignore\r\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\r\n      chunk.map((obj) => [obj.address, obj.callData])\r\n    )\r\n  } catch (error) {\r\n    console.debug('Failed to fetch chunk inside retry', error)\r\n    throw error\r\n  }\r\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\r\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\r\n    throw new RetryableError('Fetched for old block number')\r\n  }\r\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\r\n}\r\n\r\n/**\r\n * From the current all listeners state, return each call key mapped to the\r\n * minimum number of blocks per fetch. This is how often each key must be fetched.\r\n * @param allListeners the all listeners state\r\n * @param chainId the current chain id\r\n */\r\nexport function activeListeningKeys(\r\n  allListeners: AppState['multicall']['callListeners'],\r\n  chainId?: number,\r\n): { [callKey: string]: number } {\r\n  if (!allListeners || !chainId) return {}\r\n  const listeners = allListeners[chainId]\r\n  if (!listeners) return {}\r\n\r\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\r\n    const keyListeners = listeners[callKey]\r\n\r\n    memo[callKey] = Object.keys(keyListeners)\r\n      .filter((key) => {\r\n        const blocksPerFetch = parseInt(key)\r\n        if (blocksPerFetch <= 0) return false\r\n        return keyListeners[blocksPerFetch] > 0\r\n      })\r\n      .reduce((previousMin, current) => {\r\n        return Math.min(previousMin, parseInt(current))\r\n      }, Infinity)\r\n    return memo\r\n  }, {})\r\n}\r\n\r\n/**\r\n * Return the keys that need to be refetched\r\n * @param callResults current call result state\r\n * @param listeningKeys each call key mapped to how old the data can be in blocks\r\n * @param chainId the current chain id\r\n * @param latestBlockNumber the latest block number\r\n */\r\nexport function outdatedListeningKeys(\r\n  callResults: AppState['multicall']['callResults'],\r\n  listeningKeys: { [callKey: string]: number },\r\n  chainId: number | undefined,\r\n  latestBlockNumber: number | undefined,\r\n): string[] {\r\n  if (!chainId || !latestBlockNumber) return []\r\n  const results = callResults[chainId]\r\n  // no results at all, load everything\r\n  if (!results) return Object.keys(listeningKeys)\r\n\r\n  return Object.keys(listeningKeys).filter((callKey) => {\r\n    const blocksPerFetch = listeningKeys[callKey]\r\n\r\n    const data = callResults[chainId][callKey]\r\n    // no data, must fetch\r\n    if (!data) return true\r\n\r\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\r\n\r\n    // already fetching it for a recent enough block, don't refetch it\r\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\r\n\r\n    // if data is older than minDataBlockNumber, fetch it\r\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\r\n  })\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\r\n  // wait for listeners to settle before triggering updates\r\n  const debouncedListeners = useDebounce(state.callListeners, 100)\r\n  const latestBlockNumber = useBlockNumber()\r\n  const chainId = 787;\r\n  const multicallContract = useMulticallContract()\r\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\r\n\r\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\r\n    return activeListeningKeys(debouncedListeners, chainId)\r\n  }, [debouncedListeners, chainId])\r\n\r\n  const unserializedOutdatedCallKeys = useMemo(() => {\r\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\r\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\r\n\r\n  const serializedOutdatedCallKeys = useMemo(\r\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\r\n    [unserializedOutdatedCallKeys],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!latestBlockNumber || !chainId || !multicallContract) return\r\n\r\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\r\n\r\n    if (outdatedCallKeys.length === 0) return\r\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\r\n\r\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\r\n\r\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\r\n      cancellations.current?.cancellations?.forEach((c) => c())\r\n    }\r\n\r\n    dispatch(\r\n      fetchingMulticallResults({\r\n        calls,\r\n        chainId,\r\n        fetchingBlockNumber: latestBlockNumber,\r\n      }),\r\n    )\r\n\r\n    cancellations.current = {\r\n      blockNumber: latestBlockNumber,\r\n      cancellations: chunkedCalls.map((chunk, index) => {\r\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\r\n          n: Infinity,\r\n          minWait: 2500,\r\n          maxWait: 3500,\r\n        })\r\n        promise\r\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\r\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\r\n\r\n            // accumulates the length of all previous indices\r\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\r\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\r\n\r\n            dispatch(\r\n              updateMulticallResults({\r\n                chainId,\r\n                results: outdatedCallKeys\r\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\r\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\r\n                    memo[callKey] = returnData[i] ?? null\r\n                    return memo\r\n                  }, {}),\r\n                blockNumber: fetchBlockNumber,\r\n              }),\r\n            )\r\n          })\r\n          .catch((error: any) => {\r\n            if (error instanceof CancelledError) {\r\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\r\n              return\r\n            }\r\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\r\n            dispatch(\r\n              errorFetchingMulticallResults({\r\n                calls: chunk,\r\n                chainId,\r\n                fetchingBlockNumber: latestBlockNumber,\r\n              }),\r\n            )\r\n          })\r\n        return cancel\r\n      }),\r\n    }\r\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\r\n\r\n  return null\r\n}\r\n","// chunks array into chunks of maximum size\r\n// evenly distributes items among the chunks\r\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\r\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\r\n  if (items.length <= maxChunkSize) return [items]\r\n\r\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\r\n  const chunkSize = Math.ceil(items.length / numChunks)\r\n\r\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\r\n}\r\n","import React, { useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport useToast from 'hooks/useToast'\r\nimport { useBlockNumber } from '../application/hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { checkedTransaction, finalizeTransaction } from './actions'\r\n\r\nexport function shouldCheck(\r\n  lastBlockNumber: number,\r\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\r\n): boolean {\r\n  if (tx.receipt) return false\r\n  if (!tx.lastCheckedBlockNumber) return true\r\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\r\n  if (blocksSinceCheck < 1) return false\r\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\r\n  if (minutesPending > 60) {\r\n    // every 10 blocks if pending for longer than an hour\r\n    return blocksSinceCheck > 9\r\n  }\r\n  if (minutesPending > 5) {\r\n    // every 3 blocks if pending more than 5 minutes\r\n    return blocksSinceCheck > 2\r\n  }\r\n  // otherwise every block\r\n  return true\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const { library } = useWeb3Provider()\r\n  const { chainId } = useWeb3React()\r\n\r\n  const lastBlockNumber = useBlockNumber()\r\n\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\r\n\r\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\r\n\r\n  const { toastError, toastSuccess } = useToast()\r\n\r\n  useEffect(() => {\r\n    if (!chainId || !library || !lastBlockNumber) return\r\n\r\n    Object.keys(transactions)\r\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\r\n      .forEach((hash) => {\r\n        library\r\n          .getTransactionReceipt(hash)\r\n          .then((receipt) => {\r\n            if (receipt) {\r\n              dispatch(\r\n                finalizeTransaction({\r\n                  chainId,\r\n                  hash,\r\n                  receipt: {\r\n                    blockHash: receipt.blockHash,\r\n                    blockNumber: receipt.blockNumber,\r\n                    contractAddress: receipt.contractAddress,\r\n                    from: receipt.from,\r\n                    status: receipt.status,\r\n                    to: receipt.to,\r\n                    transactionHash: receipt.transactionHash,\r\n                    transactionIndex: receipt.transactionIndex,\r\n                  },\r\n                }),\r\n              )\r\n\r\n              const toast = receipt.status === 1 ? toastSuccess : toastError\r\n              toast(\r\n                'Transaction receipt',\r\n                <Flex flexDirection=\"column\">\r\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\r\n                  {chainId && (\r\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\r\n                      View on Nxchain Scan\r\n                    </Link>\r\n                  )}\r\n                </Flex>,\r\n              )\r\n            } else {\r\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(`failed to check transaction hash: ${hash}`, error)\r\n          })\r\n      })\r\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError])\r\n\r\n  return null\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\r\n\r\nexport enum ViewMode {\r\n  'TABLE' = 'TABLE',\r\n  'CARD' = 'CARD',\r\n}\r\n\r\ninterface ToggleViewProps {\r\n  viewMode: ViewMode\r\n  onToggle: (mode: ViewMode) => void\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-right: 0px;\r\n  margin-left: -8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 0;\r\n    margin-right: 16px;\r\n  }\r\n`\r\n\r\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\r\n  const handleToggle = (mode: ViewMode) => {\r\n    if (viewMode !== mode) {\r\n      onToggle(mode)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\r\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\r\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ToggleView\r\n","import { useEffect } from 'react'\r\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst _binanceChainListener = async () =>\r\n  new Promise<void>((resolve) =>\r\n    Object.defineProperty(window, 'BinanceChain', {\r\n      get() {\r\n        return this.bsc\r\n      },\r\n      set(bsc) {\r\n        this.bsc = bsc\r\n\r\n        resolve()\r\n      },\r\n    }),\r\n  )\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\r\n\r\n    if (connectorId) {\r\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\r\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\r\n\r\n      // Currently BSC extension doesn't always inject in time.\r\n      // We must check to see if it exists, and if not, wait for it before proceeding.\r\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\r\n        _binanceChainListener().then(() => login(connectorId))\r\n\r\n        return\r\n      }\r\n\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledDatePickerPortal = styled.div`\r\n  .react-datepicker-wrapper,\r\n  .react-datepicker__input-container {\r\n    display: block;\r\n  }\r\n\r\n  .react-datepicker {\r\n    background: ${({ theme }) => theme.card.background};\r\n    border-color: ${({ theme }) => theme.colors.cardBorder};\r\n    color: ${({ theme }) => theme.colors.text};\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n\r\n  .react-datepicker__header {\r\n    background: ${({ theme }) => theme.colors.input};\r\n    border-color: ${({ theme }) => theme.colors.cardBorder};\r\n  }\r\n\r\n  .react-datepicker__current-month,\r\n  .react-datepicker-time__header,\r\n  .react-datepicker-year-header,\r\n  .react-datepicker__day-name,\r\n  .react-datepicker__day,\r\n  .react-datepicker__time-name {\r\n    color: ${({ theme }) => theme.colors.text};\r\n  }\r\n\r\n  .react-datepicker__day:hover,\r\n  .react-datepicker__month-text:hover,\r\n  .react-datepicker__quarter-text:hover,\r\n  .react-datepicker__year-text:hover {\r\n    background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  }\r\n\r\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\r\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\r\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\r\n  }\r\n\r\n  .react-datepicker__day--selected,\r\n  .react-datepicker__day--in-selecting-range,\r\n  .react-datepicker__day--in-range,\r\n  .react-datepicker__month-text--selected,\r\n  .react-datepicker__month-text--in-selecting-range,\r\n  .react-datepicker__month-text--in-range,\r\n  .react-datepicker__quarter-text--selected,\r\n  .react-datepicker__quarter-text--in-selecting-range,\r\n  .react-datepicker__quarter-text--in-range,\r\n  .react-datepicker__year-text--selected,\r\n  .react-datepicker__year-text--in-selecting-range,\r\n  .react-datepicker__year-text--in-range {\r\n    background-color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n\r\n  .react-datepicker__day--selected:hover,\r\n  .react-datepicker__day--in-selecting-range:hover,\r\n  .react-datepicker__day--in-range:hover,\r\n  .react-datepicker__month-text--selected:hover,\r\n  .react-datepicker__month-text--in-selecting-range:hover,\r\n  .react-datepicker__month-text--in-range:hover,\r\n  .react-datepicker__quarter-text--selected:hover,\r\n  .react-datepicker__quarter-text--in-selecting-range:hover,\r\n  .react-datepicker__quarter-text--in-range:hover,\r\n  .react-datepicker__year-text--selected:hover,\r\n  .react-datepicker__year-text--in-selecting-range:hover,\r\n  .react-datepicker__year-text--in-range:hover {\r\n    background-color: ${({ theme }) => theme.colors.primaryBright};\r\n  }\r\n\r\n  .react-datepicker__day--keyboard-selected,\r\n  .react-datepicker__month-text--keyboard-selected,\r\n  .react-datepicker__quarter-text--keyboard-selected,\r\n  .react-datepicker__year-text--keyboard-selected {\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    color: #ffffff;\r\n  }\r\n\r\n  .react-datepicker__day--keyboard-selected:hover,\r\n  .react-datepicker__month-text--keyboard-selected:hover,\r\n  .react-datepicker__quarter-text--keyboard-selected:hover,\r\n  .react-datepicker__year-text--keyboard-selected:hover {\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    color: #ffffff;\r\n  }\r\n\r\n  .react-datepicker__time-container,\r\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\r\n    width: 120px;\r\n  }\r\n\r\n  .react-datepicker__header--time {\r\n    padding: 8px;\r\n  }\r\n\r\n  .react-datepicker__time-container\r\n    .react-datepicker__time\r\n    .react-datepicker__time-box\r\n    ul.react-datepicker__time-list\r\n    li.react-datepicker__time-list-item {\r\n    height: auto;\r\n    padding: 8px;\r\n  }\r\n`\r\n\r\nconst DatePickerPortal = () => {\r\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\r\n}\r\n\r\nexport default DatePickerPortal\r\n","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme { }\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n  body {\r\n    background-color: '${({ theme }) => theme.colors.background}';\r\n    background: #ecf5ff!important;\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { MenuEntry } from '@pancakeswap/uikit'\r\nimport { ContextApi } from 'contexts/Localization/types'\r\n\r\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\r\n  // {\r\n  //   label: t('HOME'),\r\n  //   icon: 'HomeIcon',\r\n  //   href: '/',\r\n  // },\r\n  {\r\n    label: t('TRADE'),\r\n    icon: 'TradeIcon',\r\n    items: [\r\n      {\r\n        label: t('Swap'),\r\n        href: '/swap',\r\n      },\r\n      {\r\n        label: t('Liquidity'),\r\n        href: '/pool',\r\n      }\r\n    ],\r\n  },\r\n  // {\r\n  //   label: t('FARMS'),\r\n  //   icon: 'FarmIcon',\r\n  //   href: '/farms',\r\n  // },\r\n  // {\r\n  //   label: t('STAKING'),\r\n  //   icon: 'PoolIcon',\r\n  //   href: '/pools',\r\n  // },\r\n  {\r\n    label: t('BRIDGE'),\r\n    icon: 'TicketIcon',\r\n    href: 'bridge',\r\n  },\r\n  /* \r\n  {\r\n    label: t('NFT MAKRETPLACE'),\r\n    icon: 'InfoIcon',\r\n    href: '/pools',\r\n  },\r\n  {\r\n    label: t('AUDIT'),\r\n    icon: 'GroupsIcon',\r\n    href: '/pools',\r\n  }, */\r\n]\r\n\r\nexport default config\r\n","import React from 'react'\r\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { languageList } from 'config/localization/languages'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\nimport config from './config'\r\n\r\nconst Menu = (props) => {\r\n  const { account } = useWeb3React()\r\n  const { login, logout } = useAuth()\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const { currentLanguage, setLanguage, t } = useTranslation()\r\n\r\n  return (\r\n    <UikitMenu\r\n      account={account}\r\n      login={login}\r\n      logout={logout}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={currentLanguage.code}\r\n      langs={languageList}\r\n      setLang={setLanguage}\r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      links={config(t)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React, { Suspense, SuspenseProps } from 'react'\r\n\r\ninterface State {\r\n  hasError: boolean\r\n}\r\n\r\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true }\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\r\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\r\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\r\n\r\n    // Save a flag on the window object indicating that we have already had a chunk error.\r\n    // This prevents infinite reloads\r\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\r\n\r\n    // If was a chunk load error, refresh the page\r\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\r\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\r\n      window.history.replaceState(nextState, '')\r\n      window.location.reload()\r\n      return\r\n    }\r\n\r\n    throw error\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state\r\n    const { fallback } = this.props\r\n\r\n    if (hasError) {\r\n      return fallback\r\n    }\r\n\r\n    return <Suspense {...this.props} />\r\n  }\r\n}\r\n\r\nexport default SuspenseWithChunkError\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from '@pancakeswap/uikit'\r\nimport Page from '../Layout/Page'\r\nimport loading from '../../assets/image/loading.gif';\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <img src={loading} alt=\"loading...\" width=\"100px\" />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","import React, { useState, useCallback } from 'react'\r\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\r\n\r\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\r\n  const [show, setShow] = useState(false)\r\n  const startFalling = useCallback(() => setShow(true), [setShow])\r\n  useKonamiCheatCode(startFalling)\r\n\r\n  if (show) {\r\n    return (\r\n      <div onAnimationEnd={() => setShow(false)}>\r\n        <FallingBunnies {...props} />\r\n      </div>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default React.memo(EasterEgg)\r\n","import { createBrowserHistory } from 'history'\r\n\r\n// Manually create the history object so we can access outside the Router e.g. in modals\r\nconst history = createBrowserHistory()\r\n\r\nexport default history\r\n","import React from 'react'\r\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\r\nimport { Pool } from 'state/types'\r\nimport { getAprData } from 'views/Pools/helpers'\r\nimport { getAddress } from 'utils/addressHelpers'\r\n\r\ninterface AprRowProps {\r\n  pool: Pool\r\n  performanceFee?: number\r\n}\r\n\r\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\r\n  const { t } = useTranslation()\r\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\r\n\r\n  const tooltipContent = isAutoVault\r\n    ? t('APY includes compounding, APR doesn’t. This pool’s PCN is compounded automatically, so we show APY.')\r\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\r\n\r\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\r\n\r\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      tokenPrice={earningTokenPrice}\r\n      apr={apr}\r\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n      linkHref={apyModalLink}\r\n      earningTokenSymbol={earningToken.symbol}\r\n      roundingDecimals={roundingDecimals}\r\n      compoundFrequency={compoundFrequency}\r\n      performanceFee={performanceFee}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\r\n      {isFinished || !apr ? (\r\n        <Skeleton width=\"82px\" height=\"32px\" />\r\n      ) : (\r\n        <Flex alignItems=\"center\">\r\n          <Balance\r\n            fontSize=\"16px\"\r\n            isDisabled={isFinished}\r\n            value={earningsPercentageToDisplay}\r\n            decimals={2}\r\n            unit=\"%\"\r\n            bold\r\n          />\r\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\r\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\r\n          </IconButton>\r\n        </Flex>\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AprRow\r\n","import styled, { css, keyframes } from 'styled-components'\r\nimport { Card, Box } from '@pancakeswap/uikit'\r\n\r\nconst PromotedGradient = keyframes`\r\n  0% {\r\n    background-position: 50% 0%;\r\n  }\r\n  50% {\r\n    background-position: 50% 100%;\r\n  }\r\n  100% {\r\n    background-position: 50% 0%;\r\n  }\r\n`\r\n\r\ninterface PromotedStyleCardProps {\r\n  isDesktop: boolean\r\n}\r\n\r\nexport const StyledCard = styled(Card) <{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\r\n  max-width: 352px;\r\n  margin: 0 8px 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-self: baseline;\r\n  position: relative;\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\r\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\r\n  background: url(\"/images/cardback.jpg\")!important;\r\n  background-size: 100%;\r\n\r\n  ${({ isPromoted, theme }) =>\r\n    isPromoted\r\n      ? css`\r\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\r\n          padding: 1px 1px 3px 1px;\r\n          background-size: 400% 400%;\r\n        `\r\n      : `background: ${(props) => props.theme.card.background};`}\r\n\r\n  ${({ isPromoted }) =>\r\n    isPromoted &&\r\n    isPromoted.isDesktop &&\r\n    css`\r\n      animation: ${PromotedGradient} 3s ease infinite;\r\n    `}\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin: 0 12px 46px;\r\n  }\r\n`\r\n\r\nexport const StyledCardInner = styled(Box)`\r\n`\r\n\r\nexport default StyledCard\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport {\r\n  Flex,\r\n  MetamaskIcon,\r\n  Text,\r\n  TooltipText,\r\n  LinkExternal,\r\n  TimerIcon,\r\n  Skeleton,\r\n  useTooltip,\r\n  Button,\r\n  Link,\r\n  HelpIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { BASE_BSC_SCAN_URL } from 'config'\r\nimport { useBlock, useCakeVault } from 'state/hooks'\r\nimport { Pool } from 'state/types'\r\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { getBscScanLink } from 'utils'\r\nimport Balance from 'components/Balance'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\n\r\ninterface ExpandedFooterProps {\r\n  pool: Pool\r\n  account: string\r\n}\r\n\r\nconst ExpandedWrapper = styled(Flex)`\r\n  svg {\r\n    height: 14px;\r\n    width: 14px;\r\n  }\r\n`\r\n\r\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\r\n  const { t } = useTranslation()\r\n  const { currentBlock } = useBlock()\r\n  const {\r\n    totalCakeInVault,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const {\r\n    stakingToken,\r\n    earningToken,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    stakingLimit,\r\n    contractAddress,\r\n    sousId,\r\n    isAutoVault,\r\n  } = pool\r\n\r\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\r\n  const poolContractAddress = getAddress(contractAddress)\r\n  const cakeVaultContractAddress = getCakeVaultAddress()\r\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Subtracted automatically from each yield harvest and burned.'),\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const getTotalStakedBalance = () => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }\r\n\r\n  const {\r\n    targetRef: totalStakedTargetRef,\r\n    tooltip: totalStakedTooltip,\r\n    tooltipVisible: totalStakedTooltipVisible,\r\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  return (\r\n    <ExpandedWrapper flexDirection=\"column\">\r\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Text small>{t('Total staked')}:</Text>\r\n        <Flex alignItems=\"flex-start\">\r\n          {totalStaked && totalStaked.gte(0) ? (\r\n            <>\r\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n              <span ref={totalStakedTargetRef}>\r\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\r\n              </span>\r\n            </>\r\n          ) : (\r\n            <Skeleton width=\"90px\" height=\"21px\" />\r\n          )}\r\n          {totalStakedTooltipVisible && totalStakedTooltip}\r\n        </Flex>\r\n      </Flex>\r\n      {stakingLimit && stakingLimit.gt(0) && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\r\n          <Text small>{t('Max. stake per user')}:</Text>\r\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\r\n        </Flex>\r\n      )}\r\n      {shouldShowBlockCountdown && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\r\n          {blocksRemaining || blocksUntilStart ? (\r\n            <Flex alignItems=\"center\">\r\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\r\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\r\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\r\n                  {t('Blocks')}\r\n                </Text>\r\n                <TimerIcon ml=\"4px\" color=\"primary\" />\r\n              </Link>\r\n            </Flex>\r\n          ) : (\r\n            <Skeleton width=\"54px\" height=\"21px\" />\r\n          )}\r\n        </Flex>\r\n      )}\r\n      {isAutoVault && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {tooltipVisible && tooltip}\r\n          <TooltipText ref={targetRef} small>\r\n            {t('Performance Fee')}\r\n          </TooltipText>\r\n          <Flex alignItems=\"center\">\r\n            <Text ml=\"4px\" small>\r\n              {performanceFee / 100}%\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      )}\r\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n        <LinkExternal href={`${window.location.origin}/token/${getAddress(earningToken.address)}`} bold={false} small>\r\n          {t('See Token Info')}\r\n        </LinkExternal>\r\n      </Flex>\r\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\r\n          {t('View Project Site')}\r\n        </LinkExternal>\r\n      </Flex>\r\n      {poolContractAddress && (\r\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n          <LinkExternal\r\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\r\n            bold={false}\r\n            small\r\n          >\r\n            {t('View Contract')}\r\n          </LinkExternal>\r\n        </Flex>\r\n      )}\r\n      {account && isMetaMaskInScope && tokenAddress && (\r\n        <Flex justifyContent=\"flex-end\">\r\n          <Button\r\n            variant=\"text\"\r\n            p=\"0\"\r\n            height=\"auto\"\r\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\r\n          >\r\n            <Text color=\"primary\" fontSize=\"14px\">\r\n              {t('Add to your wallet')}\r\n            </Text>\r\n            <MetamaskIcon ml=\"4px\" />\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n    </ExpandedWrapper>\r\n  )\r\n}\r\n\r\nexport default React.memo(ExpandedFooter)\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport ExpandedFooter from './ExpandedFooter'\r\n\r\ninterface FooterProps {\r\n  pool: Pool\r\n  account: string\r\n  totalCakeInVault?: BigNumber\r\n}\r\n\r\nconst ExpandableButtonWrapper = styled(Flex)`\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  button {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\r\n  const { isAutoVault } = pool\r\n  const { t } = useTranslation()\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n  const autoTooltipText = t(\r\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  return (\r\n    <CardFooter>\r\n      <ExpandableButtonWrapper>\r\n        <Flex alignItems=\"center\">\r\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\r\n          {tooltipVisible && tooltip}\r\n          <Flex ref={targetRef}>\r\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n          </Flex>\r\n        </Flex>\r\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\r\n          {isExpanded ? t('Hide') : t('Details')}\r\n        </ExpandableLabel>\r\n      </ExpandableButtonWrapper>\r\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\r\n    </CardFooter>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\r\nimport tokens from 'config/constants/tokens'\r\nimport { getAddress } from 'utils/addressHelpers'\r\n\r\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\r\n  const primaryTokenSrc = `/images/tokens/popcorn.png`\r\n\r\n  return <img src={primaryTokenSrc} alt=\"pcn token\" style={{ border: \"1px solid blue\", borderRadius: \"50%\", width: \"60px\", height: \"60px\" }} />\r\n}\r\n\r\nexport default CakeVaultTokenPairImage;\r\n","import React from 'react'\r\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Token } from 'config/constants/types'\r\nimport { TokenPairImage } from 'components/TokenImage'\r\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\r\n\r\nconst Wrapper = styled(CardHeader) <{ isFinished?: boolean; background?: string }>`\r\n  padding: 24px;\r\n`\r\n\r\nconst StyledCardHeader: React.FC<{\r\n  earningToken: Token\r\n  stakingToken: Token\r\n  isAutoVault?: boolean\r\n  isFinished?: boolean\r\n  isStaking?: boolean\r\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\r\n  const { t } = useTranslation()\r\n  const isCakePool = earningToken.symbol === 'PCN' && stakingToken.symbol === 'PCN'\r\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\r\n\r\n  const getHeadingPrefix = () => {\r\n    if (isAutoVault) {\r\n      // vault\r\n      return t('Auto')\r\n    }\r\n    if (isCakePool) {\r\n      // manual cake\r\n      return t('Manual')\r\n    }\r\n    // all other pools\r\n    return t('Earn')\r\n  }\r\n\r\n  const getSubHeading = () => {\r\n    if (isAutoVault) {\r\n      return t('Automatic restaking')\r\n    }\r\n    if (isCakePool) {\r\n      return t('Earn PCN, stake PCN')\r\n    }\r\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\r\n  }\r\n\r\n  return (\r\n    <Wrapper isFinished={isFinished} background={background}>\r\n      <Flex alignItems=\"center\" justifyContent=\"center\">\r\n        <Flex flexDirection=\"column\" alignItems=\"center\">\r\n          <Heading scale=\"lg\" style={{ marginBottom: \"20px\", color: \"white\" }}>\r\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\r\n          </Heading>\r\n          {isAutoVault ? (\r\n            <CakeVaultTokenPairImage width={64} height={64} />\r\n          ) : (\r\n            <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default StyledCardHeader\r\n","import { useCallback, useState } from 'react'\r\nimport usePreviousValue from './usePreviousValue'\r\n\r\n/**\r\n * A helper hook to keep track of the time between events\r\n * Can also be used to force an effect to re-run\r\n */\r\nconst useLastUpdated = () => {\r\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\r\n  const previousLastUpdated = usePreviousValue(lastUpdated)\r\n\r\n  const setLastUpdated = useCallback(() => {\r\n    setStateLastUpdated(Date.now())\r\n  }, [setStateLastUpdated])\r\n\r\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\r\n}\r\n\r\nexport default useLastUpdated\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ethers, Contract } from 'ethers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserAllowance } from 'state/actions'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport useLastUpdated from 'hooks/useLastUpdated'\r\n\r\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\r\n      const receipt = await tx.wait()\r\n\r\n      updateUserAllowance(sousId, account)\r\n      if (receipt.status) {\r\n        toastSuccess(\r\n          t('Contract Enabled'),\r\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\r\n        )\r\n        setRequestedApproval(false)\r\n      } else {\r\n        // user rejected tx or didn't go thru\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n    }\r\n  }, [account, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\n// Approve CAKE auto pool\r\nexport const useVaultApprove = (setLastUpdated: () => void) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const cakeContract = useCake()\r\n\r\n  const handleApprove = async () => {\r\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\r\n    setRequestedApproval(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'PCN' }))\r\n      setLastUpdated()\r\n      setRequestedApproval(false)\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setRequestedApproval(false)\r\n    }\r\n  }\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\nexport const useCheckVaultApprovalStatus = () => {\r\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      try {\r\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\r\n        const currentAllowance = new BigNumber(response.toString())\r\n        setIsVaultApproved(currentAllowance.gt(0))\r\n      } catch (error) {\r\n        setIsVaultApproved(false)\r\n      }\r\n    }\r\n\r\n    checkApprovalStatus()\r\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\r\n\r\n  return { isVaultApproved, setLastUpdated }\r\n}\r\n","import React from 'react'\r\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { Pool } from 'state/types'\r\nimport { useApprovePool } from '../../../hooks/useApprove'\r\n\r\ninterface ApprovalActionProps {\r\n  pool: Pool\r\n  isLoading?: boolean\r\n}\r\n\r\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\r\n  const { sousId, stakingToken, earningToken } = pool\r\n  const { t } = useTranslation()\r\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\r\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Skeleton width=\"100%\" height=\"52px\" />\r\n      ) : (\r\n        <Button\r\n          isLoading={requestedApproval}\r\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          disabled={requestedApproval}\r\n          onClick={handleApprove}\r\n          width=\"100%\"\r\n        >\r\n          {t('Enable')}\r\n        </Button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ApprovalAction\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface NotEnoughTokensModalProps {\r\n  tokenSymbol: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <Modal\r\n      title={t('%symbol% required', { symbol: tokenSymbol })}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Text color=\"failure\" bold>\r\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\r\n      </Text>\r\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\r\n      <Text>\r\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\r\n          symbol: tokenSymbol,\r\n        })}\r\n      </Text>\r\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\r\n        {t('Buy')} {tokenSymbol}\r\n      </Button>\r\n      <StyledLink href=\"https://yieldwatch.net\" external>\r\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\r\n          {t('Locate Assets')}\r\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\r\n        </Button>\r\n      </StyledLink>\r\n      <Button variant=\"text\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default NotEnoughTokensModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '@pancakeswap/uikit'\r\n\r\ninterface PercentageButtonProps {\r\n  onClick: () => void\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\nexport default PercentageButton\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stakeFarm } from 'utils/calls'\r\nimport BigNumber from 'bignumber.js'\r\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\r\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst sousStakeBnb = async (sousChefContract, amount) => {\r\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        await stakeFarm(masterChefContract, 0, amount)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, decimals)\r\n      }\r\n      updateUserStakedBalance(sousId, account)\r\n      updateUserBalance(sousId, account)\r\n    },\r\n    [account, isUsingBnb, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStakePool\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { unstakeFarm } from 'utils/calls'\r\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\n\r\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\r\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst sousEmergencyUnstake = async (sousChefContract) => {\r\n  const tx = await sousChefContract.emergencyWithdraw()\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        await unstakeFarm(masterChefContract, 0, amount)\r\n      } else if (enableEmergencyWithdraw) {\r\n        await sousEmergencyUnstake(sousChefContract)\r\n      } else {\r\n        await sousUnstake(sousChefContract, amount, decimals)\r\n      }\r\n      updateUserStakedBalance(sousId, account)\r\n      updateUserBalance(sousId, account)\r\n      updateUserPendingReward(sousId, account)\r\n    },\r\n    [account, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstakePool\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\r\nimport { Pool } from 'state/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport PercentageButton from './PercentageButton'\r\nimport useStakePool from '../../../hooks/useStakePool'\r\nimport useUnstakePool from '../../../hooks/useUnstakePool'\r\n\r\ninterface StakeModalProps {\r\n  isBnbPool: boolean\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  stakingTokenPrice: number\r\n  isRemovingStake?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst StakeModal: React.FC<StakeModalProps> = ({\r\n  isBnbPool,\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakingTokenPrice,\r\n  isRemovingStake = false,\r\n  onDismiss,\r\n}) => {\r\n  const chainId = 787;\r\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { onStake } = useStakePool(sousId, isBnbPool)\r\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [stakeAmount, setStakeAmount] = useState('')\r\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\r\n  const [percent, setPercent] = useState(0)\r\n  const getCalculatedStakingLimit = () => {\r\n    if (isRemovingStake) {\r\n      return userData.stakedBalance\r\n    }\r\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\r\n  }\r\n\r\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\r\n\r\n  useEffect(() => {\r\n    if (stakingLimit.gt(0) && !isRemovingStake) {\r\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\r\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\r\n    }\r\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\r\n\r\n  const handleStakeInputChange = (input: string) => {\r\n    if (input) {\r\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\r\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\r\n      setPercent(Math.min(percentage, 100))\r\n    } else {\r\n      setPercent(0)\r\n    }\r\n    setStakeAmount(input)\r\n  }\r\n\r\n  const handleChangePercent = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\r\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\r\n      setStakeAmount(amountToStake)\r\n    } else {\r\n      setStakeAmount('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  const handleConfirmClick = async () => {\r\n    setPendingTx(true)\r\n\r\n    if (isRemovingStake) {\r\n      // unstaking\r\n      try {\r\n        await onUnstake(stakeAmount, stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Unstaked')}!`,\r\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\r\n            symbol: earningToken.symbol,\r\n          }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      try {\r\n        // staking\r\n        await onStake(stakeAmount, stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Staked')}!`,\r\n          t('Your %symbol% funds have been staked in the pool!', {\r\n            symbol: stakingToken.symbol,\r\n          }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      {stakingLimit.gt(0) && !isRemovingStake && (\r\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\r\n          {t('Max stake for this pool: %amount% %token%', {\r\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\r\n            token: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\r\n        <Flex alignItems=\"center\" minWidth=\"70px\">\r\n          <Image\r\n            src={`https://raw.githubusercontent.com/Neon-Blockchain/token-logo/main/main/icons/${String(stakingToken.address[chainId]).toLowerCase()}.svg`}\r\n            width={24}\r\n            height={24}\r\n            alt={stakingToken.symbol}\r\n          />\r\n          <Text ml=\"4px\" bold>\r\n            {stakingToken.symbol}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <BalanceInput\r\n        value={stakeAmount}\r\n        onUserInput={handleStakeInputChange}\r\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\r\n        isWarning={hasReachedStakeLimit}\r\n        decimals={stakingToken.decimals}\r\n      />\r\n      {hasReachedStakeLimit && (\r\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\r\n          {t('Maximum total stake: %amount% %token%', {\r\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\r\n            token: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\r\n        {t('Balance: %balance%', {\r\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\r\n        })}\r\n      </Text>\r\n      <Slider\r\n        min={0}\r\n        max={100}\r\n        value={percent}\r\n        onValueChanged={handleChangePercent}\r\n        name=\"stake\"\r\n        valueLabel={`${percent}%`}\r\n        step={1}\r\n      />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\r\n      </Flex>\r\n      <Button\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        onClick={handleConfirmClick}\r\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\r\n        mt=\"24px\"\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      {!isRemovingStake && (\r\n        <StyledLink external href=\"/swap\">\r\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\r\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n          </Button>\r\n        </StyledLink>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StakeModal\r\n","import React from 'react'\r\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Pool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../Modals/StakeModal'\r\n\r\ninterface StakeActionsProps {\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  stakedBalance: BigNumber\r\n  isBnbPool: boolean\r\n  isStaked: ConstrainBoolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst StakeAction: React.FC<StakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakedBalance,\r\n  isBnbPool,\r\n  isStaked,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n    />,\r\n  )\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  const renderStakeAction = () => {\r\n    return isStaked ? (\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex flexDirection=\"column\">\r\n          <>\r\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\r\n            {stakingTokenPrice !== 0 && (\r\n              <Text fontSize=\"12px\" color=\"textSubtle\">\r\n                <Balance\r\n                  fontSize=\"12px\"\r\n                  color=\"textSubtle\"\r\n                  decimals={2}\r\n                  value={stakedTokenDollarBalance}\r\n                  prefix=\"~\"\r\n                  unit=\" USD\"\r\n                />\r\n              </Text>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        <Flex>\r\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n            <MinusIcon color=\"primary\" width=\"24px\" />\r\n          </IconButton>\r\n          {reachStakingLimit ? (\r\n            <span ref={targetRef}>\r\n              <IconButton variant=\"secondary\" disabled>\r\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n              </IconButton>\r\n            </span>\r\n          ) : (\r\n            <IconButton\r\n              variant=\"secondary\"\r\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\r\n              disabled={isFinished}\r\n            >\r\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n            </IconButton>\r\n          )}\r\n        </Flex>\r\n        {tooltipVisible && tooltip}\r\n      </Flex>\r\n    ) : (\r\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n        {t('Stake')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default StakeAction\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { harvestFarm } from 'utils/calls'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\r\nimport { DEFAULT_GAS_LIMIT } from 'config'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nconst harvestPool = async (sousChefContract) => {\r\n  const tx = await sousChefContract.deposit('0', options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst harvestPoolBnb = async (sousChefContract) => {\r\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvestFarm(masterChefContract, 0)\r\n    } else if (isUsingBnb) {\r\n      await harvestPoolBnb(sousChefContract)\r\n    } else {\r\n      await harvestPool(sousChefContract)\r\n    }\r\n    updateUserPendingReward(sousId, account)\r\n    updateUserBalance(sousId, account)\r\n  }, [account, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport default useHarvestPool\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Button,\r\n  Heading,\r\n  Flex,\r\n  AutoRenewIcon,\r\n  ButtonMenu,\r\n  ButtonMenuItem,\r\n  HelpIcon,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport { Token } from 'config/constants/types'\r\nimport { formatNumber } from 'utils/formatBalance'\r\nimport useHarvestPool from '../../../hooks/useHarvestPool'\r\nimport useStakePool from '../../../hooks/useStakePool'\r\n\r\ninterface CollectModalProps {\r\n  formattedBalance: string\r\n  fullBalance: string\r\n  earningToken: Token\r\n  earningsDollarValue: number\r\n  sousId: number\r\n  isBnbPool: boolean\r\n  isCompoundPool?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst CollectModal: React.FC<CollectModalProps> = ({\r\n  formattedBalance,\r\n  fullBalance,\r\n  earningToken,\r\n  earningsDollarValue,\r\n  sousId,\r\n  isBnbPool,\r\n  isCompoundPool = false,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\r\n  const { onStake } = useStakePool(sousId, isBnbPool)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text mb=\"12px\">{t('Compound: collect and restake PCN into pool.')}</Text>\r\n      <Text>{t('Harvest: collect PCN and send to wallet')}</Text>\r\n    </>,\r\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  const handleHarvestConfirm = async () => {\r\n    setPendingTx(true)\r\n    // compounding\r\n    if (shouldCompound) {\r\n      try {\r\n        await onStake(fullBalance, earningToken.decimals)\r\n        toastSuccess(\r\n          `${t('Compounded')}!`,\r\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        console.error(e)\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      // harvesting\r\n      try {\r\n        await onReward()\r\n        toastSuccess(\r\n          `${t('Harvested')}!`,\r\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        console.error(e)\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      {isCompoundPool && (\r\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\r\n          <ButtonMenu\r\n            activeIndex={shouldCompound ? 0 : 1}\r\n            scale=\"sm\"\r\n            variant=\"subtle\"\r\n            onItemClick={(index) => setShouldCompound(!index)}\r\n          >\r\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\r\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n          <Flex ml=\"10px\" ref={targetRef}>\r\n            <HelpIcon color=\"textSubtle\" />\r\n          </Flex>\r\n          {tooltipVisible && tooltip}\r\n        </Flex>\r\n      )}\r\n\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\r\n        <Flex flexDirection=\"column\">\r\n          <Heading>\r\n            {formattedBalance} {earningToken.symbol}\r\n          </Heading>\r\n          {earningsDollarValue > 0 && (\r\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n\r\n      <Button\r\n        mt=\"8px\"\r\n        onClick={handleHarvestConfirm}\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CollectModal\r\n","import React from 'react'\r\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Token } from 'config/constants/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\r\nimport Balance from 'components/Balance'\r\nimport CollectModal from '../Modals/CollectModal'\r\n\r\ninterface HarvestActionsProps {\r\n  earnings: BigNumber\r\n  earningToken: Token\r\n  sousId: number\r\n  earningTokenPrice: number\r\n  isBnbPool: boolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\r\n  earnings,\r\n  earningToken,\r\n  sousId,\r\n  isBnbPool,\r\n  earningTokenPrice,\r\n  isLoading = false,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n\r\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const hasEarnings = earnings.toNumber() > 0\r\n  const isCompoundPool = sousId === 0\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningTokenDollarBalance}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isCompoundPool}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\r\n      <Flex flexDirection=\"column\">\r\n        {isLoading ? (\r\n          <Skeleton width=\"80px\" height=\"48px\" />\r\n        ) : (\r\n          <>\r\n            {hasEarnings ? (\r\n              <>\r\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\r\n                {earningTokenPrice > 0 && (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color=\"textSubtle\"\r\n                    decimals={2}\r\n                    prefix=\"~\"\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                  />\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Heading color=\"textDisabled\">0</Heading>\r\n                <Text fontSize=\"12px\" color=\"textDisabled\">\r\n                  0 USD\r\n                </Text>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </Flex>\r\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\r\n        {isCompoundPool ? t('Collect') : t('Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { Pool } from 'state/types'\r\nimport ApprovalAction from './ApprovalAction'\r\nimport StakeActions from './StakeActions'\r\nimport HarvestActions from './HarvestActions'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\ninterface CardActionsProps {\r\n  pool: Pool\r\n  stakedBalance: BigNumber\r\n}\r\n\r\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\r\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const { t } = useTranslation()\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  const needsApproval = !allowance.gt(0) && !isBnbPool\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isLoading = !userData\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\">\r\n        {harvest && (\r\n          <>\r\n            <Box display=\"inline\">\r\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {`${earningToken.symbol} `}\r\n              </InlineText>\r\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {t('Earned')}\r\n              </InlineText>\r\n            </Box>\r\n            <HarvestActions\r\n              earnings={earnings}\r\n              earningToken={earningToken}\r\n              sousId={sousId}\r\n              earningTokenPrice={earningTokenPrice}\r\n              isBnbPool={isBnbPool}\r\n              isLoading={isLoading}\r\n            />\r\n          </>\r\n        )}\r\n        <Box display=\"inline\">\r\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\r\n          </InlineText>\r\n        </Box>\r\n        {needsApproval ? (\r\n          <ApprovalAction pool={pool} isLoading={isLoading} />\r\n        ) : (\r\n          <StakeActions\r\n            isLoading={isLoading}\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            stakedBalance={stakedBalance}\r\n            isBnbPool={isBnbPool}\r\n            isStaked={isStaked}\r\n          />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Pool } from 'state/types'\r\nimport AprRow from './AprRow'\r\nimport { StyledCard, StyledCardInner } from './StyledCard'\r\nimport CardFooter from './CardFooter'\r\nimport StyledCardHeader from './StyledCardHeader'\r\nimport CardActions from './CardActions'\r\n\r\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\r\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const accountHasStakedBalance = stakedBalance.gt(0)\r\n\r\n  return (\r\n    <StyledCard\r\n      isFinished={isFinished && sousId !== 0}\r\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\r\n    >\r\n      <StyledCardInner>\r\n        <StyledCardHeader\r\n          isStaking={accountHasStakedBalance}\r\n          earningToken={earningToken}\r\n          stakingToken={stakingToken}\r\n          isFinished={isFinished && sousId !== 0}\r\n        />\r\n        <CardBody>\r\n          <AprRow pool={pool} />\r\n          <Flex mt=\"24px\" flexDirection=\"column\">\r\n            {account ? (\r\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\r\n            ) : (\r\n              <>\r\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\r\n                  {t('Start earning')}\r\n                </Text>\r\n                <UnlockButton />\r\n              </>\r\n            )}\r\n          </Flex>\r\n        </CardBody>\r\n        <CardFooter pool={pool} account={account} />\r\n      </StyledCardInner>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default PoolCard\r\n","import React from 'react'\r\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useVaultApprove } from '../../../hooks/useApprove'\r\n\r\ninterface ApprovalActionProps {\r\n  setLastUpdated: () => void\r\n  isLoading?: boolean\r\n}\r\n\r\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Skeleton width=\"100%\" height=\"52px\" />\r\n      ) : (\r\n        <Button\r\n          isLoading={requestedApproval}\r\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          disabled={requestedApproval}\r\n          onClick={handleApprove}\r\n          width=\"100%\"\r\n        >\r\n          {t('Enable')}\r\n        </Button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VaultApprovalAction\r\n","import BigNumber from 'bignumber.js'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\r\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\r\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\r\n\r\n  useEffect(() => {\r\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\r\n    const secondsRemainingCalc = feeEndTime - currentSeconds\r\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\r\n\r\n    const tick = () => {\r\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\r\n    }\r\n    const timerInterval = setInterval(() => tick(), 1000)\r\n    if (doesUnstakingFeeApply) {\r\n      setSecondsRemaining(secondsRemainingCalc)\r\n      setHasUnstakingFee(true)\r\n    } else {\r\n      setHasUnstakingFee(false)\r\n      clearInterval(timerInterval)\r\n    }\r\n\r\n    return () => clearInterval(timerInterval)\r\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\r\n\r\n  return { hasUnstakingFee, secondsRemaining }\r\n}\r\n\r\nexport default useWithdrawalFeeTimer\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = Math.abs(seconds)\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\r\n  const { t } = useTranslation()\r\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\r\n\r\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\r\n}\r\n\r\nexport default WithdrawalFeeTimer\r\n","import React from 'react'\r\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\r\n\r\ninterface UnstakingFeeCountdownRowProps {\r\n  isTableVariant?: boolean\r\n}\r\n\r\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    userData: { lastDepositedTime, userShares },\r\n    fees: { withdrawalFee, withdrawalFeePeriod },\r\n  } = useCakeVault()\r\n  const feeAsDecimal = withdrawalFee / 100 || '-'\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text bold mb=\"4px\">\r\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\r\n      </Text>\r\n      <Text>\r\n        {t(\r\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new PCN in the pool.',\r\n        )}\r\n      </Text>\r\n    </>,\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\r\n    parseInt(lastDepositedTime, 10),\r\n    userShares,\r\n    withdrawalFeePeriod,\r\n  )\r\n\r\n  // The user has made a deposit, but has no fee\r\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\r\n\r\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\r\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\r\n\r\n  const getRowText = () => {\r\n    if (noFeeToPay) {\r\n      return t('Unstaking Fee').toLowerCase()\r\n    }\r\n    if (shouldShowTimer) {\r\n      return t('unstaking fee until')\r\n    }\r\n    return t('unstaking fee if withdrawn within 72h')\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\r\n      justifyContent=\"space-between\"\r\n      flexDirection={isTableVariant ? 'column' : 'row'}\r\n    >\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small>\r\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\r\n      </TooltipText>\r\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default UnstakingFeeCountdownRow\r\n","import React from 'react'\r\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\n\r\ninterface FeeSummaryProps {\r\n  stakingTokenSymbol: string\r\n  stakeAmount: string\r\n}\r\n\r\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\r\n  const { t } = useTranslation()\r\n  const {\r\n    fees: { withdrawalFee },\r\n  } = useCakeVault()\r\n  const feeAsDecimal = withdrawalFee / 100\r\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text bold mb=\"4px\">\r\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\r\n      </Text>\r\n      <Text>\r\n        {t(\r\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new PCN in the pool.',\r\n        )}\r\n      </Text>\r\n    </>,\r\n    { placement: 'top-start' },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        {tooltipVisible && tooltip}\r\n        <TooltipText ref={targetRef} small>\r\n          {t('Unstaking Fee')}\r\n        </TooltipText>\r\n        <Text fontSize=\"14px\">\r\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\r\n        </Text>\r\n      </Flex>\r\n      <UnstakingFeeCountdownRow />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FeeSummary\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\r\nimport { useCakeVaultContract, useMasterchef, useCake } from 'hooks/useContract'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\r\nimport useToast from 'hooks/useToast'\r\nimport { fetchCakeVaultUserData } from 'state/pools'\r\nimport { Pool } from 'state/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { convertCakeToShares } from '../../helpers'\r\nimport FeeSummary from './FeeSummary'\r\n\r\ninterface VaultStakeModalProps {\r\n  pool: Pool\r\n  stakingMax: BigNumber\r\n  isRemovingStake?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst callOptions = {\r\n  gasLimit: 380000,\r\n}\r\n\r\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\r\n  const chainId = 787;\r\n  const dispatch = useAppDispatch()\r\n  const { stakingToken } = pool\r\n  const { account } = useWeb3React()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const {\r\n    userData: { lastDepositedTime, userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [stakeAmount, setStakeAmount] = useState('')\r\n  const [percent, setPercent] = useState(0)\r\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const usdValueStaked =\r\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\r\n\r\n  const handleStakeInputChange = (input: string) => {\r\n    if (input) {\r\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\r\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\r\n      setPercent(percentage > 100 ? 100 : percentage)\r\n    } else {\r\n      setPercent(0)\r\n    }\r\n    setStakeAmount(input)\r\n  }\r\n\r\n  const handleChangePercent = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\r\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\r\n      setStakeAmount(amountToStake)\r\n    } else {\r\n      setStakeAmount('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\r\n    setPendingTx(true)\r\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\r\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\r\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\r\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\r\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\r\n\r\n    if (isWithdrawingAll) {\r\n      try {\r\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\r\n          setPendingTx(false)\r\n          onDismiss()\r\n          dispatch(fetchCakeVaultUserData({ account }))\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      // .toString() being called to fix a BigNumber error in prod\r\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\r\n      try {\r\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\r\n          setPendingTx(false)\r\n          onDismiss()\r\n          dispatch(fetchCakeVaultUserData({ account }))\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\r\n    setPendingTx(true)\r\n    try {\r\n      // .toString() being called to fix a BigNumber error in prod\r\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\r\n\r\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\r\n      const receipt = await tx.wait()\r\n      if (receipt.status) {\r\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\r\n        setPendingTx(false)\r\n        onDismiss()\r\n        dispatch(fetchCakeVaultUserData({ account }))\r\n      }\r\n    } catch (error) {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  const handleConfirmClick = async () => {\r\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\r\n    if (isRemovingStake) {\r\n      // unstaking\r\n      handleWithdrawal(convertedStakeAmount)\r\n    } else {\r\n      // staking\r\n      handleDeposit(convertedStakeAmount)\r\n    }\r\n  }\r\n\r\n  console.log(\"staking token\", stakingToken.address)\r\n\r\n  return (\r\n    <Modal\r\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\r\n        <Flex alignItems=\"center\" minWidth=\"70px\">\r\n          <Image\r\n            src={`https://raw.githubusercontent.com/Nextep-Blockchain/token-logo/main/main/icons/${String(stakingToken.address[chainId]).toLowerCase()}.svg`}\r\n            width={24}\r\n            height={24}\r\n            alt={stakingToken.symbol}\r\n          />\r\n          <Text ml=\"4px\" bold>\r\n            {stakingToken.symbol}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <BalanceInput\r\n        value={stakeAmount}\r\n        onUserInput={handleStakeInputChange}\r\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\r\n        decimals={stakingToken.decimals}\r\n      />\r\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\r\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\r\n      </Text>\r\n      <Slider\r\n        min={0}\r\n        max={100}\r\n        value={percent}\r\n        onValueChanged={handleChangePercent}\r\n        name=\"stake\"\r\n        valueLabel={`${percent}%`}\r\n        step={1}\r\n      />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\r\n          25%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\r\n          50%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\r\n          75%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\r\n          {t('Max')}\r\n        </StyledButton>\r\n      </Flex>\r\n      {isRemovingStake && hasUnstakingFee && (\r\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\r\n      )}\r\n      <Button\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        onClick={handleConfirmClick}\r\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\r\n        mt=\"24px\"\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      {!isRemovingStake && (\r\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\r\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n        </Button>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default VaultStakeModal\r\n","import React from 'react'\r\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Pool } from 'state/types'\r\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport { convertSharesToCake } from '../../../helpers'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\n\r\ninterface HasStakeActionProps {\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n}\r\n\r\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\r\n  const {\r\n    userData: { userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { stakingToken } = pool\r\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const stakedDollarValue = cakePriceBusd.gt(0)\r\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\r\n    : 0\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Flex flexDirection=\"column\">\r\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\r\n        <Text fontSize=\"12px\" color=\"textSubtle\">\r\n          {cakePriceBusd.gt(0) ? (\r\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\r\n          ) : (\r\n            <Skeleton mt=\"1px\" height={16} width={64} />\r\n          )}\r\n        </Text>\r\n      </Flex>\r\n      <Flex>\r\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"24px\" />\r\n        </IconButton>\r\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n        </IconButton>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HasSharesActions\r\n","import React from 'react'\r\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Pool } from 'state/types'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\nimport HasSharesActions from './HasSharesActions'\r\n\r\ninterface VaultStakeActionsProps {\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  accountHasSharesStaked: boolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  accountHasSharesStaked,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken } = pool\r\n  const { t } = useTranslation()\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n\r\n  const renderStakeAction = () => {\r\n    return accountHasSharesStaked ? (\r\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\r\n    ) : (\r\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\r\n    )\r\n  }\r\n\r\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default VaultStakeActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Pool } from 'state/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport VaultApprovalAction from './VaultApprovalAction'\r\nimport VaultStakeActions from './VaultStakeActions'\r\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\nconst CakeVaultCardActions: React.FC<{\r\n  pool: Pool\r\n  accountHasSharesStaked: boolean\r\n  isLoading: boolean\r\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\r\n  const { stakingToken, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\">\r\n        <Box display=\"inline\">\r\n          <InlineText\r\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\r\n            textTransform=\"uppercase\"\r\n            bold\r\n            fontSize=\"12px\"\r\n          >\r\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          <InlineText\r\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\r\n            textTransform=\"uppercase\"\r\n            bold\r\n            fontSize=\"12px\"\r\n          >\r\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\r\n          </InlineText>\r\n        </Box>\r\n        {isVaultApproved ? (\r\n          <VaultStakeActions\r\n            isLoading={isLoading}\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            accountHasSharesStaked={accountHasSharesStaked}\r\n          />\r\n        ) : (\r\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCardActions\r\n","import React from 'react'\r\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\n\r\ninterface RecentCakeProfitBalanceProps {\r\n  cakeToDisplay: number\r\n  dollarValueToDisplay: number\r\n  dateStringToDisplay: string\r\n}\r\n\r\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\r\n  cakeToDisplay,\r\n  dollarValueToDisplay,\r\n  dateStringToDisplay,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" PCN\" />\r\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\r\n      {t('Earned since your last action')}\r\n      <Text>{dateStringToDisplay}</Text>\r\n    </>,\r\n    {\r\n      placement: 'bottom-end',\r\n    },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small>\r\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\r\n      </TooltipText>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitBalance\r\n","import React from 'react'\r\nimport { Flex, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\r\n\r\nconst RecentCakeProfitCountdownRow = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    pricePerFullShare,\r\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\r\n  } = useCakeVault()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    cakePriceBusd.toNumber(),\r\n  )\r\n\r\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\r\n  const dateTimeLastAction = new Date(lastActionInMs)\r\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      <Text fontSize=\"14px\">{`${t('Recent PCN profit')}:`}</Text>\r\n      {hasAutoEarnings && (\r\n        <RecentCakeProfitBalance\r\n          cakeToDisplay={autoCakeToDisplay}\r\n          dollarValueToDisplay={autoUsdToDisplay}\r\n          dateStringToDisplay={dateStringToDisplay}\r\n        />\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitCountdownRow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, CardBody, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport tokens from 'config/constants/tokens'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { Pool } from 'state/types'\r\nimport AprRow from '../PoolCard/AprRow'\r\nimport { StyledCard, StyledCardInner } from '../PoolCard/StyledCard'\r\nimport CardFooter from '../PoolCard/CardFooter'\r\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\r\nimport VaultCardActions from './VaultCardActions'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\r\n\r\nconst StyledCardBody = styled(CardBody) <{ isLoading: boolean }>`\r\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\r\n`\r\n\r\ninterface CakeVaultProps {\r\n  pool: Pool\r\n  showStakedOnly: boolean\r\n}\r\n\r\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\r\n  const { t } = useTranslation()\r\n  const { isXl } = useMatchBreakpoints()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    userData: { userShares, isLoading: isVaultUserDataLoading },\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const accountHasSharesStaked = userShares && userShares.gt(0)\r\n  const isLoading = !pool.userData || isVaultUserDataLoading\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  if (showStakedOnly && !accountHasSharesStaked) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <StyledCard isPromoted={{ isDesktop: isXl }}>\r\n      <StyledCardInner>\r\n        <StyledCardHeader\r\n          isStaking={accountHasSharesStaked}\r\n          isAutoVault\r\n          earningToken={tokens.pcn}\r\n          stakingToken={tokens.pcn}\r\n        />\r\n        <StyledCardBody isLoading={isLoading}>\r\n          <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\r\n          <Box mt=\"24px\">\r\n            <RecentCakeProfitRow />\r\n          </Box>\r\n          <Box mt=\"8px\">\r\n            <UnstakingFeeCountdownRow />\r\n          </Box>\r\n          <Flex mt=\"32px\" flexDirection=\"column\">\r\n            {account ? (\r\n              <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\r\n            ) : (\r\n              <>\r\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\r\n                  {t('Start earning')}\r\n                </Text>\r\n                <UnlockButton />\r\n              </>\r\n            )}\r\n          </Flex>\r\n        </StyledCardBody>\r\n        <CardFooter pool={pool} account={account} />\r\n      </StyledCardInner>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCard\r\n","import React from 'react'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport {\r\n  ButtonMenu,\r\n  ButtonMenuItem,\r\n  Toggle,\r\n  Text,\r\n  Flex,\r\n  NotificationDot,\r\n  useMatchBreakpoints,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\r\n\r\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { t } = useTranslation()\r\n\r\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n\r\n  const liveOrFinishedSwitch = (\r\n    <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\r\n      <ButtonMenuItem as={Link} to={`${url}`}>\r\n        {t('Live')}\r\n      </ButtonMenuItem>\r\n      <NotificationDot show={hasStakeInFinishedPools}>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          {t('Finished')}\r\n        </ButtonMenuItem>\r\n      </NotificationDot>\r\n    </ButtonMenu>\r\n  )\r\n\r\n  const stakedOnlySwitch = (\r\n    <Flex mt={['4px', null, 0, null]} ml={[0, null, '24px', null]} justifyContent=\"center\" alignItems=\"center\">\r\n      <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly((prev) => !prev)} />\r\n      <Text ml={['4px', '4px', '8px']}>{t('Staked only')}</Text>\r\n    </Flex>\r\n  )\r\n\r\n  if (isXs || isSm) {\r\n    return (\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\" mb=\"24px\">\r\n        <Flex width=\"100%\" justifyContent=\"space-between\">\r\n          {viewModeToggle}\r\n          {liveOrFinishedSwitch}\r\n        </Flex>\r\n        {stakedOnlySwitch}\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      alignItems=\"center\"\r\n      justifyContent={['space-around', 'space-around', 'flex-start']}\r\n      mb={['24px', '24px', '24px', '0px']}\r\n    >\r\n      {viewModeToggle}\r\n      {liveOrFinishedSwitch}\r\n      {stakedOnlySwitch}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default PoolTabButtons\r\n","import { Flex, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst BaseCell = styled.div`\r\n  color: black;\r\n\r\n  padding: 24px 8px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\n\r\nexport const CellContent = styled(Flex)`\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  max-height: 40px;\r\n  ${Text} {\r\n    line-height: 1;\r\n  }\r\n`\r\n\r\nexport default BaseCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { Pool } from 'state/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { TokenPairImage } from 'components/TokenImage'\r\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface NameCellProps {\r\n  pool: Pool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 5;\r\n  flex-direction: row;\r\n  padding-left: 12px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 150px;\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\r\n  const {\r\n    userData: { userShares },\r\n  } = useCakeVault()\r\n  const hasVaultShares = userShares && userShares.gt(0)\r\n\r\n  const stakingTokenSymbol = stakingToken.symbol\r\n  const earningTokenSymbol = earningToken.symbol\r\n\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\r\n\r\n  let title = `${t('Earn')} ${earningTokenSymbol}`\r\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\r\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\r\n\r\n  if (isAutoVault) {\r\n    title = t('Auto PCN')\r\n    subtitle = t('Automatic restaking')\r\n  } else if (isManualCakePool) {\r\n    title = t('Manual PCN')\r\n    subtitle = `${t('Earn')} PCN ${t('Stake').toLocaleLowerCase()} PCN`\r\n  }\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      {isAutoVault ? (\r\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\r\n      ) : (\r\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\r\n      )}\r\n      <CellContent>\r\n        {showStakedTag && (\r\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\r\n            {t('Staked')}\r\n          </Text>\r\n        )}\r\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\r\n          {title}\r\n        </Text>\r\n        {showSubtitle && (\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            {subtitle}\r\n          </Text>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default NameCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport BigNumber from 'bignumber.js'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport Balance from 'components/Balance'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\r\n\r\ninterface EarningsCellProps {\r\n  pool: Pool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 4.5;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 120px;\r\n  }\r\n`\r\n\r\nconst HelpIconWrapper = styled.div`\r\n  align-self: center;\r\n`\r\n\r\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { t } = useTranslation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  // These will be reassigned later if its Auto CAKE vault\r\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  let hasEarnings = account && earnings.gt(0)\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n\r\n  // Auto CAKE vault calculations\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    earningTokenPrice,\r\n  )\r\n\r\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\r\n  const dateTimeLastAction = new Date(lastActionInMs)\r\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\r\n\r\n  const labelText = isAutoVault ? t('Recent PCN profit') : t('%asset% Earned', { asset: earningToken.symbol })\r\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\r\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\r\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" PCN\" />\r\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\r\n      {t('Earned since your last action')}\r\n      <Text>{dateStringToDisplay}</Text>\r\n    </>,\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningTokenDollarBalance}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isManualCakePool}\r\n    />,\r\n  )\r\n\r\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation()\r\n    onPresentCollect()\r\n  }\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {labelText}\r\n        </Text>\r\n        {!userDataLoaded && account ? (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        ) : (\r\n          <>\r\n            {tooltipVisible && tooltip}\r\n            <Flex>\r\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\r\n                <Balance\r\n                  mt=\"4px\"\r\n                  bold={!isXs && !isSm}\r\n                  fontSize={isXs || isSm ? '14px' : '16px'}\r\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\r\n                  decimals={hasEarnings ? 5 : 1}\r\n                  value={hasEarnings ? earningTokenBalance : 0}\r\n                />\r\n                {hasEarnings ? (\r\n                  <>\r\n                    {earningTokenPrice > 0 && (\r\n                      <Balance\r\n                        display=\"inline\"\r\n                        fontSize=\"12px\"\r\n                        color=\"textSubtle\"\r\n                        decimals={2}\r\n                        prefix=\"~\"\r\n                        value={earningTokenDollarBalance}\r\n                        unit=\" USD\"\r\n                      />\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\r\n                    0 USD\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\r\n                <HelpIconWrapper ref={targetRef}>\r\n                  <HelpIcon color=\"textSubtle\" />\r\n                </HelpIconWrapper>\r\n              )}\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default EarningsCell\r\n","import React from 'react'\r\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\r\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\r\nimport Balance from 'components/Balance'\r\nimport { Pool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getAprData } from 'views/Pools/helpers'\r\nimport { getAddress } from 'utils/addressHelpers'\r\n\r\ninterface AprProps extends FlexProps {\r\n  pool: Pool\r\n  showIcon: boolean\r\n  performanceFee?: number\r\n}\r\n\r\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\r\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\r\n  const { t } = useTranslation()\r\n\r\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\r\n\r\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      tokenPrice={earningTokenPrice}\r\n      apr={apr}\r\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n      linkHref={apyModalLink}\r\n      earningTokenSymbol={earningToken.symbol}\r\n      roundingDecimals={roundingDecimals}\r\n      compoundFrequency={compoundFrequency}\r\n      performanceFee={performanceFee}\r\n    />,\r\n  )\r\n\r\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\r\n      {earningsPercentageToDisplay || isFinished ? (\r\n        <>\r\n          <Balance\r\n            onClick={openRoiModal}\r\n            fontSize=\"16px\"\r\n            isDisabled={isFinished}\r\n            value={isFinished ? 0 : earningsPercentageToDisplay}\r\n            decimals={2}\r\n            unit=\"%\"\r\n          />\r\n          {!isFinished && showIcon && (\r\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\r\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\r\n            </Button>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Skeleton width=\"80px\" height=\"16px\" />\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Apr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport Apr from '../Apr'\r\n\r\ninterface AprCellProps {\r\n  pool: Pool\r\n  performanceFee: number\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 1 0 50px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n  }\r\n`\r\n\r\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\r\n  const { t } = useTranslation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { isAutoVault } = pool\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {isAutoVault ? t('APY') : t('APR')}\r\n        </Text>\r\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default AprCell\r\n","import React, { useMemo } from 'react'\r\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\nimport Balance from 'components/Balance'\r\nimport { Pool } from 'state/types'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface TotalStakedCellProps {\r\n  pool: Pool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 2 0 100px;\r\n`\r\n\r\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\r\n  const { totalCakeInVault } = useCakeVault()\r\n\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const totalStakedBalance = useMemo(() => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {t('Total staked')}\r\n        </Text>\r\n        {totalStaked && totalStaked.gte(0) ? (\r\n          <Flex height=\"20px\" alignItems=\"center\">\r\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n          </Flex>\r\n        ) : (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\r\nimport { getBscScanLink } from 'utils'\r\nimport { Pool } from 'state/types'\r\nimport { useBlock } from 'state/hooks'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface FinishCellProps {\r\n  pool: Pool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 2 0 100px;\r\n`\r\n\r\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\r\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\r\n  const { currentBlock } = useBlock()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const isCakePool = sousId === 0\r\n\r\n  const renderBlocks = shouldShowBlockCountdown ? (\r\n    <Flex alignItems=\"center\">\r\n      <Flex flex=\"1.3\">\r\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\r\n        <Text ml=\"4px\" textTransform=\"lowercase\">\r\n          {t('Blocks')}\r\n        </Text>\r\n      </Flex>\r\n      <Flex flex=\"1\">\r\n        <Link\r\n          external\r\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <TimerIcon ml=\"4px\" />\r\n        </Link>\r\n      </Flex>\r\n    </Flex>\r\n  ) : (\r\n    <Text>-</Text>\r\n  )\r\n\r\n  // A bit hacky way to determine if public data is loading relying on totalStaked\r\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\r\n  // anywhere else\r\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\r\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\r\n        </Text>\r\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default EndsInCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell from './BaseCell'\r\n\r\ninterface ExpandActionCellProps {\r\n  expanded: boolean\r\n  isFullLayout: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  flex: 1;\r\n  padding-right: 12px;\r\n  padding-left: 0px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n    padding-right: 32px;\r\n    padding-left: 8px;\r\n  }\r\n`\r\n\r\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      {isFullLayout && (\r\n        <Text color=\"primary\" bold style={{ color: \"#CF71E4\" }}>\r\n          {expanded ? t('Hide') : t('Details')}\r\n        </Text>\r\n      )}\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n","import styled from 'styled-components'\r\n\r\nexport const ActionContainer = styled.div`\r\n  padding: 16px;\r\n  border: 2px solid ${({ theme }) => theme.colors.input};\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 12px;\r\n    margin-right: 12px;\r\n    margin-bottom: 0;\r\n    height: 130px;\r\n    max-height: 130px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    margin-left: 32px;\r\n    margin-right: 0;\r\n    margin-bottom: 0;\r\n    height: 130px;\r\n    max-height: 130px;\r\n  }\r\n`\r\n\r\nexport const ActionTitles = styled.div`\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n`\r\n\r\nexport const ActionContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n","import React from 'react'\r\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Pool } from 'state/types'\r\n\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\r\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\r\n\r\ninterface HarvestActionProps extends Pool {\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\r\n  sousId,\r\n  poolCategory,\r\n  earningToken,\r\n  userData,\r\n  userDataLoaded,\r\n  isAutoVault,\r\n  earningTokenPrice,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  // These will be reassigned later if its Auto CAKE vault\r\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  let hasEarnings = earnings.gt(0)\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n  const isCompoundPool = sousId === 0\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n\r\n  // Auto CAKE vault calculations\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares },\r\n    pricePerFullShare,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    earningTokenPrice,\r\n  )\r\n\r\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\r\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\r\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningTokenDollarBalance}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isCompoundPool}\r\n    />,\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Subtracted automatically from each yield harvest and burned.'),\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const actionTitle = isAutoVault ? (\r\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n      {t('Recent PCN profit')}\r\n    </Text>\r\n  ) : (\r\n    <>\r\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n        {earningToken.symbol}{' '}\r\n      </Text>\r\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n        {t('Earned')}\r\n      </Text>\r\n    </>\r\n  )\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Balance pt=\"8px\" lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={0} />\r\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>{actionTitle}</ActionTitles>\r\n      <ActionContent>\r\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n          <>\r\n            {hasEarnings ? (\r\n              <>\r\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\r\n                {earningTokenPrice > 0 && (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color=\"textSubtle\"\r\n                    decimals={2}\r\n                    prefix=\"~\"\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                  />\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Heading color=\"textDisabled\">0</Heading>\r\n                <Text fontSize=\"12px\" color=\"textDisabled\">\r\n                  0 USD\r\n                </Text>\r\n              </>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        {isAutoVault ? (\r\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\r\n            <UnstakingFeeCountdownRow isTableVariant />\r\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n              {tooltipVisible && tooltip}\r\n              <TooltipText ref={targetRef} small>\r\n                {t('Performance Fee')}\r\n              </TooltipText>\r\n              <Flex alignItems=\"center\">\r\n                <Text ml=\"4px\" small>\r\n                  {performanceFee / 100}%\r\n                </Text>\r\n              </Flex>\r\n            </Flex>\r\n          </Flex>\r\n        ) : (\r\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\r\n            {isCompoundPool ? t('Collect') : t('Harvest')}\r\n          </Button>\r\n        )}\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { Pool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\r\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\r\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\ninterface StackedActionProps {\r\n  pool: Pool\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    stakingLimit,\r\n    isFinished,\r\n    poolCategory,\r\n    userData,\r\n    stakingTokenPrice,\r\n    isAutoVault,\r\n  } = pool\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\r\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\r\n    stakingTokenContract,\r\n    sousId,\r\n    earningToken.symbol,\r\n  )\r\n\r\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\r\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\r\n    useVaultApprove(setLastUpdated)\r\n\r\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\r\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\r\n\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const {\r\n    userData: { userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const hasSharesStaked = userShares && userShares.gt(0)\r\n  const isVaultWithShares = isAutoVault && hasSharesStaked\r\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\r\n\r\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\r\n\r\n  const onStake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultStake()\r\n    } else {\r\n      onPresentStake()\r\n    }\r\n  }\r\n\r\n  const onUnstake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultUnstake()\r\n    } else {\r\n      onPresentUnstake()\r\n    }\r\n  }\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <UnlockButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (needsApproval) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Enable pool')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\r\n            {t('Enable')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  // Wallet connected, user data loaded and approved\r\n  if (isNotVaultAndHasStake || isVaultWithShares) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n            {stakingToken.symbol}{' '}\r\n          </Text>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n            <Balance\r\n              lineHeight=\"1\"\r\n              bold\r\n              fontSize=\"20px\"\r\n              decimals={5}\r\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\r\n            />\r\n            <Balance\r\n              fontSize=\"12px\"\r\n              display=\"inline\"\r\n              color=\"textSubtle\"\r\n              decimals={2}\r\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\r\n              unit=\" USD\"\r\n              prefix=\"~\"\r\n            />\r\n          </Flex>\r\n          <IconButtonWrapper>\r\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\r\n              <MinusIcon color=\"primary\" width=\"14px\" />\r\n            </IconButton>\r\n            {reachStakingLimit ? (\r\n              <span ref={targetRef}>\r\n                <IconButton variant=\"secondary\" disabled>\r\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n                </IconButton>\r\n              </span>\r\n            ) : (\r\n              <IconButton\r\n                variant=\"secondary\"\r\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n                disabled={isFinished}\r\n              >\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            )}\r\n          </IconButtonWrapper>\r\n          {tooltipVisible && tooltip}\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n          {t('Stake')}{' '}\r\n        </Text>\r\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n          {stakingToken.symbol}\r\n        </Text>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button\r\n          width=\"100%\"\r\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n          variant=\"secondary\"\r\n          disabled={isFinished}\r\n        >\r\n          {t('Stake')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n","import React from 'react'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  HelpIcon,\r\n  Link,\r\n  LinkExternal,\r\n  MetamaskIcon,\r\n  Skeleton,\r\n  Text,\r\n  TimerIcon,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { BASE_BSC_SCAN_URL } from 'config'\r\nimport { getBscScanLink } from 'utils'\r\nimport { useBlock, useCakeVault } from 'state/hooks'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Pool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport Harvest from './Harvest'\r\nimport Stake from './Stake'\r\nimport Apr from '../Apr'\r\n\r\nconst expandAnimation = keyframes`\r\n  from {\r\n    max-height: 0px;\r\n  }\r\n  to {\r\n    max-height: 700px;\r\n  }\r\n`\r\n\r\nconst collapseAnimation = keyframes`\r\n  from {\r\n    max-height: 700px;\r\n  }\r\n  to {\r\n    max-height: 0px;\r\n  }\r\n`\r\n\r\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\r\n  animation: ${({ expanded }) =>\r\n    expanded\r\n      ? css`\r\n          ${expandAnimation} 300ms linear forwards\r\n        `\r\n      : css`\r\n          ${collapseAnimation} 300ms linear forwards\r\n        `};\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.dropdown};\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  justify-content: center;\r\n  padding: 12px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n  }\r\n`\r\n\r\ntype MediaBreakpoints = {\r\n  isXs: boolean\r\n  isSm: boolean\r\n  isMd: boolean\r\n  isLg: boolean\r\n  isXl: boolean\r\n}\r\n\r\ninterface ActionPanelProps {\r\n  account: string\r\n  pool: Pool\r\n  userDataLoaded: boolean\r\n  expanded: boolean\r\n  breakpoints: MediaBreakpoints\r\n}\r\n\r\nconst InfoSection = styled(Box)`\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n  flex-basis: auto;\r\n  padding: 8px 8px;\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding: 0;\r\n    flex-basis: 230px;\r\n  }\r\n`\r\n\r\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    stakingLimit,\r\n    contractAddress,\r\n    isAutoVault,\r\n  } = pool\r\n  const { t } = useTranslation()\r\n  const poolContractAddress = getAddress(contractAddress)\r\n  const cakeVaultContractAddress = getCakeVaultAddress()\r\n  const { currentBlock } = useBlock()\r\n  const { isXs, isSm, isMd } = breakpoints\r\n  const showSubtitle = (isXs || isSm) && sousId === 0\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\r\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\r\n\r\n  const {\r\n    totalCakeInVault,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const getTotalStakedBalance = () => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }\r\n\r\n  const {\r\n    targetRef: totalStakedTargetRef,\r\n    tooltip: totalStakedTooltip,\r\n    tooltipVisible: totalStakedTooltipVisible,\r\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n  const autoTooltipText = t(\r\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\r\n  )\r\n\r\n  const {\r\n    targetRef: tagTargetRef,\r\n    tooltip: tagTooltip,\r\n    tooltipVisible: tagTooltipVisible,\r\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\r\n    placement: 'bottom-start',\r\n  })\r\n\r\n  const maxStakeRow = stakingLimit.gt(0) ? (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n      <Text>{t('Max. stake per user')}:</Text>\r\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\r\n    </Flex>\r\n  ) : null\r\n\r\n  const blocksRow =\r\n    blocksRemaining || blocksUntilStart ? (\r\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\r\n        <Flex>\r\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\r\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\r\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\r\n              {t('Blocks')}\r\n            </Text>\r\n            <TimerIcon ml=\"4px\" color=\"primary\" />\r\n          </Link>\r\n        </Flex>\r\n      </Flex>\r\n    ) : (\r\n      <Skeleton width=\"56px\" height=\"16px\" />\r\n    )\r\n\r\n  const aprRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\r\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\r\n    </Flex>\r\n  )\r\n\r\n  const totalStakedRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\r\n      <Flex alignItems=\"center\">\r\n        {totalStaked && totalStaked.gte(0) ? (\r\n          <>\r\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n            <span ref={totalStakedTargetRef}>\r\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <Skeleton width=\"56px\" height=\"16px\" />\r\n        )}\r\n        {totalStakedTooltipVisible && totalStakedTooltip}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n\r\n  return (\r\n    <StyledActionPanel expanded={expanded}>\r\n      <InfoSection>\r\n        {maxStakeRow}\r\n        {(isXs || isSm) && aprRow}\r\n        {(isXs || isSm || isMd) && totalStakedRow}\r\n        {shouldShowBlockCountdown && blocksRow}\r\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={`${window.location.origin}/token/${getAddress(earningToken.address)}`} bold={false}>\r\n            {t('See Token Info')}\r\n          </LinkExternal>\r\n        </Flex>\r\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={earningToken.projectLink} bold={false}>\r\n            {t('View Project Site')}\r\n          </LinkExternal>\r\n        </Flex>\r\n        {poolContractAddress && (\r\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n            <LinkExternal\r\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\r\n              bold={false}\r\n            >\r\n              {t('View Contract')}\r\n            </LinkExternal>\r\n          </Flex>\r\n        )}\r\n        {account && isMetaMaskInScope && tokenAddress && (\r\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n            <Button\r\n              variant=\"text\"\r\n              p=\"0\"\r\n              height=\"auto\"\r\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\r\n            >\r\n              <Text color=\"primary\">{t('Add to your wallet')}</Text>\r\n              <MetamaskIcon ml=\"4px\" />\r\n            </Button>\r\n          </Flex>\r\n        )}\r\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\r\n        {tagTooltipVisible && tagTooltip}\r\n        <span ref={tagTargetRef}>\r\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n        </span>\r\n      </InfoSection>\r\n      <ActionContainer>\r\n        {showSubtitle && (\r\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\r\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} PCN ${t('Stake').toLocaleLowerCase()} PCN`}\r\n          </Text>\r\n        )}\r\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\r\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\r\n      </ActionContainer>\r\n    </StyledActionPanel>\r\n  )\r\n}\r\n\r\nexport default ActionPanel\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\r\nimport NameCell from './Cells/NameCell'\r\nimport EarningsCell from './Cells/EarningsCell'\r\nimport AprCell from './Cells/AprCell'\r\nimport TotalStakedCell from './Cells/TotalStakedCell'\r\nimport EndsInCell from './Cells/EndsInCell'\r\nimport ExpandActionCell from './Cells/ExpandActionCell'\r\nimport ActionPanel from './ActionPanel/ActionPanel'\r\n\r\ninterface PoolRowProps {\r\n  pool: Pool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledRow = styled.div`\r\n  background-color: transparent;\r\n  display: flex;\r\n  cursor: pointer;\r\n`\r\n\r\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\r\n  const [expanded, setExpanded] = useState(false)\r\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\r\n\r\n  const toggleExpanded = () => {\r\n    setExpanded((prev) => !prev)\r\n  }\r\n\r\n  const {\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  return (\r\n    <>\r\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\r\n        <NameCell pool={pool} />\r\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\r\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\r\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\r\n        {isXl && <EndsInCell pool={pool} />}\r\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\r\n      </StyledRow>\r\n      {shouldRenderActionPanel && (\r\n        <ActionPanel\r\n          account={account}\r\n          pool={pool}\r\n          userDataLoaded={userDataLoaded}\r\n          expanded={expanded}\r\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PoolRow\r\n","import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Pool } from 'state/types'\r\nimport PoolRow from './PoolRow'\r\n\r\ninterface PoolsTableProps {\r\n  pools: Pool[]\r\n  userDataLoaded: boolean\r\n  account: string\r\n}\r\n\r\nconst StyledTable = styled.div`\r\n  background-color: #181725;\r\n  > div:not(:last-child) {\r\n    border-bottom: 1px solid ${({ theme }) => theme.colors.disabled};\r\n  }\r\n`\r\n\r\nconst StyledTableBorder = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  padding: 1px 1px 3px 1px;\r\n  background-size: 400% 400%;\r\n  border-top: 4px solid transparent;\r\n  border-image: linear-gradient(#1fc7d4) 1 stretch;\r\n  border-image-slice: 1;\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\r\n  const { t } = useTranslation()\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n  return (\r\n    <StyledTableBorder>\r\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\r\n        {pools.map((pool) => (\r\n          <PoolRow\r\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\r\n            pool={pool}\r\n            account={account}\r\n            userDataLoaded={userDataLoaded}\r\n          />\r\n        ))}\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" onClick={scrollToTop}>\r\n            {t('To Top')}\r\n            <ChevronUpIcon color=\"primary\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </StyledTable>\r\n    </StyledTableBorder>\r\n  )\r\n}\r\n\r\nexport default PoolsTable\r\n","export default __webpack_public_path__ + \"static/media/autoClaim.5ea05d33.png\";","import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useCakeVaultContract } from 'hooks/useContract'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport Balance from 'components/Balance'\r\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\r\n\r\ninterface BountyModalProps {\r\n  onDismiss?: () => void\r\n  TooltipComponent: React.ElementType\r\n}\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\r\n  height: 1px;\r\n  margin: 16px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { theme } = useTheme()\r\n  const { toastError, toastSuccess } = useToast()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const {\r\n    estimatedCakeBountyReward,\r\n    totalPendingCakeHarvest,\r\n    fees: { callFee },\r\n  } = useCakeVault()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const callFeeAsDecimal = callFee / 100\r\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\r\n\r\n  const estimatedDollarBountyReward = useMemo(() => {\r\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\r\n  }, [cakePriceBusd, estimatedCakeBountyReward])\r\n\r\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\r\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\r\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\r\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\r\n    placement: 'bottom',\r\n    tooltipPadding: { right: 15 },\r\n  })\r\n\r\n  const handleConfirmClick = async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      const tx = await cakeVaultContract.harvest({ gasLimit: 300000 })\r\n      const receipt = await tx.wait()\r\n      if (receipt.status) {\r\n        toastSuccess(t('Bounty collected!'), t('PCN bounty has been sent to your wallet.'))\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      }\r\n    } catch (error) {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\r\n      {tooltipVisible && tooltip}\r\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\r\n        <Text>{t('You’ll claim')}</Text>\r\n        <Flex flexDirection=\"column\">\r\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" PCN\" />\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            <Balance\r\n              fontSize=\"12px\"\r\n              color=\"textSubtle\"\r\n              value={dollarBountyToDisplay}\r\n              decimals={2}\r\n              unit=\" USD\"\r\n              prefix=\"~\"\r\n            />\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <Divider />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {t('Pool total pending yield')}\r\n        </Text>\r\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" PCN\" />\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {t('Bounty')}\r\n        </Text>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {callFeeAsDecimal}%\r\n        </Text>\r\n      </Flex>\r\n      {account ? (\r\n        <Button\r\n          isLoading={pendingTx}\r\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\r\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          onClick={handleConfirmClick}\r\n          mb=\"28px\"\r\n          id=\"autoCakeConfirmBounty\"\r\n        >\r\n          {pendingTx ? t('Confirming') : t('Confirm')}\r\n        </Button>\r\n      ) : (\r\n        <UnlockButton mb=\"28px\" />\r\n      )}\r\n      <Flex justifyContent=\"center\" alignItems=\"center\">\r\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\r\n          {t('What’s this?')}\r\n        </Text>\r\n        <span ref={targetRef}>\r\n          <HelpIcon color=\"textSubtle\" />\r\n        </span>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BountyModal\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, Flex, Skeleton, Text, useModal } from '@pancakeswap/uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { usePools, useFetchCakeVault, useFetchPublicPoolsData, usePollFarmsData, useCakeVault, usePriceCakeBusd } from 'state/hooks'\r\nimport { latinise } from 'utils/latinise'\r\nimport FlexLayout from 'components/Layout/Flex'\r\nimport Page from 'components/Layout/Page'\r\nimport PageHeader from 'components/PageHeader'\r\nimport SearchInput from 'components/SearchInput'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport { Pool } from 'state/types'\r\nimport PoolCard from './components/PoolCard'\r\nimport CakeVaultCard from './components/CakeVaultCard'\r\nimport PoolTabButtons from './components/PoolTabButtons'\r\nimport BountyCard from './components/BountyCard'\r\nimport HelpButton from './components/HelpButton'\r\nimport PoolsTable from './components/PoolsTable/PoolsTable'\r\nimport { ViewMode } from './components/ToggleView/ToggleView'\r\nimport { getAprData, getCakeVaultEarnings } from './helpers'\r\nimport autoClaimImg from '../../assets/image/autoClaim.png';\r\n\r\nimport BountyModal from './components/BountyModal';\r\n\r\nconst CardLayout = styled(FlexLayout)`\r\n  justify-content: center;\r\n`\r\n\r\nconst PoolControls = styled(Flex)`\r\n  flex-direction: column;\r\n  margin-bottom: 24px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst SearchSortContainer = styled(Flex)`\r\n  gap: 10px;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst ControlStretch = styled(Flex)`\r\n  > div {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst AutoClaimContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;;\r\n  flex-wrap: wrap;\r\n  background: #161322;\r\n  margin-bottom: 30px;\r\n`\r\n\r\nconst AutoTextContent = styled.h4`\r\n  display: flex;\r\n  font-size: 14px;\r\n  width: 50%;\r\n  padding: 3% 5% 3%;\r\n  color: white;\r\n  line-height: 2;\r\n  min-width: 500px;\r\n  @media(max-width: 1300px){\r\n  width: 100%;\r\n  }\r\n`\r\n\r\nconst AutoImgContent = styled.img` \r\nwidth: 50%;\r\nmin-width: 500px;\r\ndisplay: flex;\r\n@media(max-width: 1300px){\r\nwidth: 100%;\r\n}\r\n`\r\n\r\nconst AutoBalanceCard = styled.h1`\r\n  display: flex;\r\n  width: 50%;\r\n  font-size: 30px;\r\n  color: white;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-left: 5px solid transparent;\r\n  padding: 15px;\r\n  border-image: linear-gradient(180deg, #4345FF 0%, #E879E3 50.52%, #F6B8B8 100%) 1% round;\r\n`\r\n\r\nconst AutoActionCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50%;\r\n  background: linear-gradient(180deg, #BF6CEA 0%, #4345FF 100%);\r\n  padding: 20px 20px 20px;\r\n`\r\nconst InfoContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst InfoText = styled.div`\r\n  display: flex;\r\n  font-size: 16px;\r\n  color: white;\r\n`\r\nconst ActionButton = styled.button`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 35px;\r\n  justify-content: center;\r\n  align-items: center;\r\n    background:#1fc7d4;\r\n  border-radius: 2px;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-top: 20px;\r\n  color: black;\r\n`\r\n\r\nconst NUMBER_OF_POOLS_VISIBLE = 12\r\n\r\nconst Pools: React.FC = () => {\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\r\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\r\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n  const loadMoreRef = useRef<HTMLDivElement>(null)\r\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [sortOption, setSortOption] = useState('hot')\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n    totalCakeInVault,\r\n    estimatedCakeBountyReward\r\n  } = useCakeVault()\r\n  const accountHasVaultShares = userShares && userShares.gt(0)\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  const pools = useMemo(() => {\r\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\r\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\r\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\r\n  }, [poolsWithoutAutoVault])\r\n\r\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\r\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\r\n  const stakedOnlyFinishedPools = useMemo(\r\n    () =>\r\n      finishedPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [finishedPools, accountHasVaultShares],\r\n  )\r\n  const stakedOnlyOpenPools = useMemo(\r\n    () =>\r\n      openPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [openPools, accountHasVaultShares],\r\n  )\r\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\r\n\r\n  usePollFarmsData()\r\n  useFetchCakeVault()\r\n  useFetchPublicPoolsData()\r\n\r\n  useEffect(() => {\r\n    const showMorePools = (entries) => {\r\n      const [entry] = entries\r\n      if (entry.isIntersecting) {\r\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\r\n      }\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      loadMoreObserver.observe(loadMoreRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n  }, [observerIsSet])\r\n\r\n  const showFinishedPools = location.pathname.includes('history')\r\n\r\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(event.target.value)\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n\r\n  // for auto bounty\r\n\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n\r\n  const estimatedDollarBountyReward = useMemo(() => {\r\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\r\n  }, [cakePriceBusd, estimatedCakeBountyReward])\r\n\r\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\r\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\r\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\r\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\r\n\r\n\r\n  const TooltipComponent = ({ fee }: { fee: number }) => (\r\n    <>\r\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\r\n      <Text mb=\"16px\">\r\n        {t(\r\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.',\r\n        )}\r\n      </Text>\r\n      <Text style={{ fontWeight: 'bold' }}>\r\n        {t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', { fee: fee / 100 })}\r\n      </Text>\r\n    </>\r\n  )\r\n\r\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\r\n\r\n\r\n\r\n  const sortPools = (poolsToSort: Pool[]) => {\r\n    switch (sortOption) {\r\n      case 'apr':\r\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\r\n          'desc',\r\n        )\r\n      case 'earned':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => {\r\n            if (!pool.userData || !pool.earningTokenPrice) {\r\n              return 0\r\n            }\r\n            return pool.isAutoVault\r\n              ? getCakeVaultEarnings(\r\n                account,\r\n                cakeAtLastUserAction,\r\n                userShares,\r\n                pricePerFullShare,\r\n                pool.earningTokenPrice,\r\n              ).autoUsdToDisplay\r\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\r\n          },\r\n          'desc',\r\n        )\r\n      case 'totalStaked':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\r\n          'desc',\r\n        )\r\n      default:\r\n        return poolsToSort\r\n    }\r\n  }\r\n\r\n  const poolsToShow = () => {\r\n    let chosenPools = []\r\n    if (showFinishedPools) {\r\n      chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\r\n    } else {\r\n      chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\r\n    }\r\n\r\n    if (searchQuery) {\r\n      const lowercaseQuery = latinise(searchQuery.toLowerCase())\r\n      chosenPools = chosenPools.filter((pool) =>\r\n        latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\r\n      )\r\n    }\r\n\r\n    return sortPools(chosenPools).slice(0, numberOfPoolsVisible)\r\n  }\r\n\r\n  const cardLayout = (\r\n    <CardLayout>\r\n      {poolsToShow().map((pool) =>\r\n        pool.isAutoVault ? (\r\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\r\n        ) : (\r\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\r\n        ),\r\n      )}\r\n    </CardLayout>\r\n  )\r\n\r\n  const tableLayout = <PoolsTable pools={poolsToShow()} account={account} userDataLoaded={userDataLoaded} />\r\n\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\r\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]} style={{ paddingBottom: \"8px\", background: \"#1fc7d4\", backgroundSize: \"100% 8px\", backgroundColor: \"transparent\" }}>\r\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n              {t('STAKING')}\r\n            </Heading>\r\n            <Heading scale=\"md\" color=\"text\" style={{ marginBottom: \"20px\" }}>\r\n              {t('Stake your PCN here to earn more!')}\r\n            </Heading>\r\n          </Flex>\r\n          {/* <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\r\n            <HelpButton />\r\n            <BountyCard />\r\n          </Flex> */}\r\n        </Flex>\r\n        <Flex flexDirection=\"column\" mt=\"30px\">\r\n          <Heading as=\"h1\" scale=\"xl\" color=\"secondary\" mb=\"24px\" style={{ color: \"#FB9DF7\" }}>\r\n            {t('STEP 1')}\r\n          </Heading>\r\n          <Heading scale=\"md\" color=\"text\" style={{ marginBottom: \"20px\" }}>\r\n            {t('Stake PCN, receive PCN immediately!')}\r\n          </Heading>\r\n        </Flex>\r\n        <AutoClaimContent>\r\n          <AutoTextContent>\r\n            Stake NEXO here and receive xNEXO as  receipt representing your share of the pool. This pool automatically compounds by using a portion of all trade fees to buy back NEXO which means the xNEXO to NEXO ratio will grow over time.\r\n            There is a 4% withdraw fee if xNEXO is withdrawn to NEXO within 30 days. 2% is burned and 2% is returned ti the xNEXO contact.\r\n          </AutoTextContent>\r\n          <AutoImgContent src={autoClaimImg} alt=\"autoClaimImg\" />\r\n        </AutoClaimContent>\r\n\r\n        <AutoClaimContent>\r\n          <AutoBalanceCard>\r\n            1 PCN =\r\n            {cakePriceBusd.toNumber() ?\r\n              cakePriceBusd.toFixed(3)\r\n              :\r\n              <Skeleton height={20} width={96} mb=\"2px\" />} USD\r\n          </AutoBalanceCard>\r\n          <AutoActionCard>\r\n            <InfoContent>\r\n              <InfoText>\r\n                Claimable PCN:\r\n              </InfoText>\r\n\r\n              <InfoText>\r\n                {hasFetchedCakeBounty ?\r\n                  <span>{`${cakeBountyToDisplay.toFixed(3)} PCN`}</span> :\r\n                  <Skeleton height={20} width={96} mb=\"2px\" />}\r\n                {hasFetchedDollarBounty ?\r\n                  <span style={{ color: \"#eeeeee\", fontSize: \"13px\", marginLeft: \"5px\" }}>\r\n                    {`(~${dollarBountyToDisplay.toFixed(3)} USD)`}\r\n                  </span> :\r\n                  <Skeleton height={20} width={96} mb=\"2px\" />}\r\n              </InfoText>\r\n            </InfoContent>\r\n            <ActionButton disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !performanceFee} onClick={onPresentBountyModal}>{t('Claim')}</ActionButton>\r\n          </AutoActionCard>\r\n        </AutoClaimContent>\r\n\r\n        <Flex flexDirection=\"column\" mt=\"50px\">\r\n          <Heading as=\"h1\" scale=\"xl\" color=\"secondary\" mb=\"24px\" style={{ color: \"#FB9DF7\" }}>\r\n            {t('STEP 2')}\r\n          </Heading>\r\n          <Heading scale=\"md\" color=\"text\">\r\n            {t('Stake Tokens of Nextep Chain, Earn PCN of Your Choice Over Time')}\r\n          </Heading>\r\n        </Flex>\r\n\r\n      </PageHeader>\r\n      <Page>\r\n        <PoolControls justifyContent=\"space-between\">\r\n          <PoolTabButtons\r\n            stakedOnly={stakedOnly}\r\n            setStakedOnly={setStakedOnly}\r\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\r\n            viewMode={viewMode}\r\n            setViewMode={setViewMode}\r\n          />\r\n          <SearchSortContainer>\r\n            <Flex flexDirection=\"column\" width=\"50%\">\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\r\n                {t('Sort by')}\r\n              </Text>\r\n              <ControlStretch>\r\n                <Select\r\n                  options={[\r\n                    {\r\n                      label: t('Hot'),\r\n                      value: 'hot',\r\n                    },\r\n                    {\r\n                      label: t('APR'),\r\n                      value: 'apr',\r\n                    },\r\n                    {\r\n                      label: t('Earned'),\r\n                      value: 'earned',\r\n                    },\r\n                    {\r\n                      label: t('Total staked'),\r\n                      value: 'totalStaked',\r\n                    },\r\n                  ]}\r\n                  onChange={handleSortOptionChange}\r\n                />\r\n              </ControlStretch>\r\n            </Flex>\r\n            <Flex flexDirection=\"column\" width=\"50%\">\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\r\n                {t('Search')}\r\n              </Text>\r\n              <ControlStretch>\r\n                <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\r\n              </ControlStretch>\r\n            </Flex>\r\n          </SearchSortContainer>\r\n        </PoolControls>\r\n        {showFinishedPools && (\r\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\r\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\r\n          </Text>\r\n        )}\r\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\r\n        <div ref={loadMoreRef} />\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pools\r\n","import React, { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useENS from '../../../hooks/ENS/useENS'\r\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\r\nimport { AutoColumn } from '../../../components/Layout/Column'\r\nimport { RowBetween } from '../../../components/Layout/Row'\r\nimport { getBscScanLink } from '../../../utils'\r\n\r\nconst InputPanel = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n  border-radius: 1.25rem;\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  z-index: 1;\r\n  width: 100%;\r\n`\r\n\r\nconst ContainerRow = styled.div<{ error: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 1.25rem;\r\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\r\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\r\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n  flex: 1;\r\n  padding: 1rem;\r\n`\r\n\r\nconst Input = styled.input<{ error?: boolean }>`\r\n  font-size: 1.25rem;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-weight: 500;\r\n  width: 100%;\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n`\r\n\r\nexport default function AddressInputPanel({\r\n  id,\r\n  value,\r\n  onChange,\r\n}: {\r\n  id?: string\r\n  // the typed string value\r\n  value: string\r\n  // triggers whenever the typed value changes\r\n  onChange: (value: string) => void\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const { address, loading, name } = useENS(value)\r\n\r\n  const handleInput = useCallback(\r\n    (event) => {\r\n      const input = event.target.value\r\n      const withoutSpaces = input.replace(/\\s+/g, '')\r\n      onChange(withoutSpaces)\r\n    },\r\n    [onChange],\r\n  )\r\n\r\n  const error = Boolean(value.length > 0 && !loading && !address)\r\n\r\n  return (\r\n    <InputPanel id={id}>\r\n      <ContainerRow error={error}>\r\n        <InputContainer>\r\n          <AutoColumn gap=\"md\">\r\n            <RowBetween>\r\n              <Text>{t('Recipient')}</Text>\r\n              {address && chainId && (\r\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\r\n                  ({t('View on Nxchain Scan')})\r\n                </Link>\r\n              )}\r\n            </RowBetween>\r\n            <Input\r\n              className=\"recipient-address-input\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoCorrect=\"off\"\r\n              autoCapitalize=\"off\"\r\n              spellCheck=\"false\"\r\n              placeholder={t('Wallet Address or ENS name')}\r\n              error={error}\r\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\r\n              onChange={handleInput}\r\n              value={value}\r\n            />\r\n          </AutoColumn>\r\n        </InputContainer>\r\n      </ContainerRow>\r\n    </InputPanel>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\r\nimport styled, { css } from 'styled-components'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  padding: 1rem;\r\n`\r\n\r\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\r\n  padding: 2px;\r\n\r\n  ${({ clickable }) =>\r\n    clickable\r\n      ? css`\r\n          :hover {\r\n            cursor: pointer;\r\n            opacity: 0.8;\r\n          }\r\n        `\r\n      : null}\r\n`\r\n\r\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\r\n  color: ${({ theme, severity }) =>\r\n    severity === 3 || severity === 4\r\n      ? theme.colors.failure\r\n      : severity === 2\r\n      ? theme.colors.warning\r\n      : severity === 1\r\n      ? theme.colors.text\r\n      : theme.colors.success};\r\n`\r\n\r\nexport const StyledBalanceMaxMini = styled.button`\r\n  height: 22px;\r\n  width: 22px;\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  border: none;\r\n  border-radius: 50%;\r\n  padding: 0.2rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 400;\r\n  margin-left: 0.4rem;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  float: right;\r\n\r\n  :hover {\r\n    background-color: ${({ theme }) => theme.colors.dropdown};\r\n  }\r\n  :focus {\r\n    background-color: ${({ theme }) => theme.colors.dropdown};\r\n    outline: none;\r\n  }\r\n`\r\n\r\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\r\n  width: 220px;\r\n`\r\n\r\nconst SwapCallbackErrorInner = styled.div`\r\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\r\n  border-radius: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 0.825rem;\r\n  width: 100%;\r\n  padding: 3rem 1.25rem 1rem 1rem;\r\n  margin-top: -2rem;\r\n  color: ${({ theme }) => theme.colors.failure};\r\n  z-index: -1;\r\n  p {\r\n    padding: 0;\r\n    margin: 0;\r\n    font-weight: 500;\r\n  }\r\n`\r\n\r\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\r\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 12px;\r\n  border-radius: 12px;\r\n  min-width: 48px;\r\n  height: 48px;\r\n`\r\n\r\nexport function SwapCallbackError({ error }: { error: string }) {\r\n  return (\r\n    <SwapCallbackErrorInner>\r\n      <SwapCallbackErrorInnerAlertTriangle>\r\n        <ErrorIcon width=\"24px\" />\r\n      </SwapCallbackErrorInnerAlertTriangle>\r\n      <p>{error}</p>\r\n    </SwapCallbackErrorInner>\r\n  )\r\n}\r\n\r\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\r\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\r\n  padding: 0.5rem;\r\n  border-radius: 12px;\r\n  margin-top: 8px;\r\n`\r\n","import { Percent } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport { warningSeverity } from 'utils/prices'\r\nimport { ONE_BIPS } from '../../../config/constants'\r\nimport { ErrorText } from './styleds'\r\n\r\n/**\r\n * Formatted version of price impact text with warning colors\r\n */\r\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\r\n  return (\r\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\r\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\r\n    </ErrorText>\r\n  )\r\n}\r\n","import React, { useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { Field } from 'state/swap/actions'\r\nimport {\r\n  computeSlippageAdjustedAmounts,\r\n  computeTradePriceBreakdown,\r\n  formatExecutionPrice,\r\n  warningSeverity,\r\n} from 'utils/prices'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\r\n\r\nconst SwapModalFooterContainer = styled(AutoColumn)`\r\n  margin-top: 24px;\r\n  padding: 16px;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\n\r\nexport default function SwapModalFooter({\r\n  trade,\r\n  onConfirm,\r\n  allowedSlippage,\r\n  swapErrorMessage,\r\n  disabledConfirm,\r\n}: {\r\n  trade: Trade\r\n  allowedSlippage: number\r\n  onConfirm: () => void\r\n  swapErrorMessage: string | undefined\r\n  disabledConfirm: boolean\r\n}) {\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n  const slippageAdjustedAmounts = useMemo(\r\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\r\n    [allowedSlippage, trade],\r\n  )\r\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\r\n  const severity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  return (\r\n    <>\r\n      <SwapModalFooterContainer>\r\n        <RowBetween align=\"center\">\r\n          <Text fontSize=\"14px\">Price</Text>\r\n          <Text\r\n            fontSize=\"14px\"\r\n            style={{\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              display: 'flex',\r\n              textAlign: 'right',\r\n              paddingLeft: '10px',\r\n            }}\r\n          >\r\n            {formatExecutionPrice(trade, showInverted)}\r\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n              <AutoRenewIcon width=\"14px\" />\r\n            </StyledBalanceMaxMini>\r\n          </Text>\r\n        </RowBetween>\r\n\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\r\n            </Text>\r\n            <QuestionHelper\r\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\r\n              ml=\"4px\"\r\n            />\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\r\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\r\n            </Text>\r\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? trade.outputAmount.currency.symbol\r\n                : trade.inputAmount.currency.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">Price Impact</Text>\r\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\r\n          </RowFixed>\r\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\r\n            <QuestionHelper\r\n              text={\r\n                <>\r\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\r\n                  <Text>- 0.17% to LP token holders</Text>\r\n                  <Text>- 0.03% to the Treasury</Text>\r\n                  <Text>- 0.05% towards PCN buyback and burn</Text>\r\n                </>\r\n              }\r\n              ml=\"4px\"\r\n            />\r\n          </RowFixed>\r\n          <Text fontSize=\"14px\">\r\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\r\n          </Text>\r\n        </RowBetween>\r\n      </SwapModalFooterContainer>\r\n\r\n      <AutoRow>\r\n        <Button\r\n          variant={severity > 2 ? 'danger' : 'primary'}\r\n          onClick={onConfirm}\r\n          disabled={disabledConfirm}\r\n          mt=\"12px\"\r\n          id=\"confirm-swap-or-send\"\r\n          width=\"100%\"\r\n          style={{ borderRadius: '16px' }}\r\n        >\r\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\r\n        </Button>\r\n\r\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n      </AutoRow>\r\n    </>\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\r\nimport { Field } from 'state/swap/actions'\r\nimport { isAddress, shortenAddress } from 'utils'\r\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { CurrencyLogo } from 'components/Logo'\r\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\r\n\r\nexport default function SwapModalHeader({\r\n  trade,\r\n  allowedSlippage,\r\n  recipient,\r\n  showAcceptChanges,\r\n  onAcceptChanges,\r\n}: {\r\n  trade: Trade\r\n  allowedSlippage: number\r\n  recipient: string | null\r\n  showAcceptChanges: boolean\r\n  onAcceptChanges: () => void\r\n}) {\r\n  const slippageAdjustedAmounts = useMemo(\r\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\r\n    [trade, allowedSlippage],\r\n  )\r\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <RowBetween align=\"flex-end\">\r\n        <RowFixed gap=\"0px\">\r\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\r\n          <TruncatedText\r\n            fontSize=\"24px\"\r\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\r\n          >\r\n            {trade.inputAmount.toSignificant(6)}\r\n          </TruncatedText>\r\n        </RowFixed>\r\n        <RowFixed gap=\"0px\">\r\n          <Text fontSize=\"24px\" ml=\"10px\">\r\n            {trade.inputAmount.currency.symbol}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowFixed>\r\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\r\n      </RowFixed>\r\n      <RowBetween align=\"flex-end\">\r\n        <RowFixed gap=\"0px\">\r\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\r\n          <TruncatedText\r\n            fontSize=\"24px\"\r\n            color={\r\n              priceImpactSeverity > 2\r\n                ? 'failure'\r\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\r\n                ? 'primary'\r\n                : 'text'\r\n            }\r\n          >\r\n            {trade.outputAmount.toSignificant(6)}\r\n          </TruncatedText>\r\n        </RowFixed>\r\n        <RowFixed gap=\"0px\">\r\n          <Text fontSize=\"24px\" ml=\"10px\">\r\n            {trade.outputAmount.currency.symbol}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      {showAcceptChanges ? (\r\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <ErrorIcon mr=\"8px\" />\r\n              <Text bold> Price Updated</Text>\r\n            </RowFixed>\r\n            <Button onClick={onAcceptChanges}>Accept</Button>\r\n          </RowBetween>\r\n        </SwapShowAcceptChanges>\r\n      ) : null}\r\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\r\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\r\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\r\n            {`Output is estimated. You will receive at least `}\r\n            <b>\r\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\r\n            </b>\r\n            {' or the transaction will revert.'}\r\n          </Text>\r\n        ) : (\r\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\r\n            {`Input is estimated. You will sell at most `}\r\n            <b>\r\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\r\n            </b>\r\n            {' or the transaction will revert.'}\r\n          </Text>\r\n        )}\r\n      </AutoColumn>\r\n      {recipient !== null ? (\r\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\r\n          <Text color=\"textSubtle\">\r\n            Output will be sent to{' '}\r\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\r\n          </Text>\r\n        </AutoColumn>\r\n      ) : null}\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import React, { useCallback, useMemo } from 'react'\r\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\r\nimport { InjectedModalProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport TransactionConfirmationModal, {\r\n  ConfirmationModalContent,\r\n  TransactionErrorContent,\r\n} from 'components/TransactionConfirmationModal'\r\nimport SwapModalFooter from './SwapModalFooter'\r\nimport SwapModalHeader from './SwapModalHeader'\r\n\r\n/**\r\n * Returns true if the trade requires a confirmation of details before we can submit it\r\n * @param tradeA trade A\r\n * @param tradeB trade B\r\n */\r\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\r\n  return (\r\n    tradeA.tradeType !== tradeB.tradeType ||\r\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\r\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\r\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\r\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\r\n  )\r\n}\r\ninterface ConfirmSwapModalProps {\r\n  trade?: Trade\r\n  originalTrade?: Trade\r\n  attemptingTxn: boolean\r\n  txHash?: string\r\n  recipient: string | null\r\n  allowedSlippage: number\r\n  onAcceptChanges: () => void\r\n  onConfirm: () => void\r\n  swapErrorMessage?: string\r\n  customOnDismiss?: () => void\r\n}\r\n\r\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\r\n  trade,\r\n  originalTrade,\r\n  onAcceptChanges,\r\n  allowedSlippage,\r\n  onConfirm,\r\n  onDismiss,\r\n  customOnDismiss,\r\n  recipient,\r\n  swapErrorMessage,\r\n  attemptingTxn,\r\n  txHash,\r\n}) => {\r\n  const showAcceptChanges = useMemo(\r\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\r\n    [originalTrade, trade],\r\n  )\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const modalHeader = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalHeader\r\n        trade={trade}\r\n        allowedSlippage={allowedSlippage}\r\n        recipient={recipient}\r\n        showAcceptChanges={showAcceptChanges}\r\n        onAcceptChanges={onAcceptChanges}\r\n      />\r\n    ) : null\r\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\r\n\r\n  const modalBottom = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalFooter\r\n        onConfirm={onConfirm}\r\n        trade={trade}\r\n        disabledConfirm={showAcceptChanges}\r\n        swapErrorMessage={swapErrorMessage}\r\n        allowedSlippage={allowedSlippage}\r\n      />\r\n    ) : null\r\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\r\n\r\n  // text to show while loading\r\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\r\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\r\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\r\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\r\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\r\n  })\r\n\r\n  const confirmationContent = useCallback(\r\n    () =>\r\n      swapErrorMessage ? (\r\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\r\n      ) : (\r\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\r\n      ),\r\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\r\n  )\r\n\r\n  return (\r\n    <TransactionConfirmationModal\r\n      title={t('Confirm Swap')}\r\n      onDismiss={onDismiss}\r\n      customOnDismiss={customOnDismiss}\r\n      attemptingTxn={attemptingTxn}\r\n      hash={txHash}\r\n      content={confirmationContent}\r\n      pendingText={pendingText}\r\n      currencyToAdd={trade?.outputAmount.currency}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ConfirmSwapModal\r\n","import { useEffect, useState } from 'react'\r\n\r\n/**\r\n * Returns the last value of type T that passes a filter function\r\n * @param value changing value\r\n * @param filterFn function that determines whether a given value should be considered for the last value\r\n */\r\nfunction useLast<T>(\r\n  value: T | undefined | null,\r\n  filterFn?: (value: T | null | undefined) => boolean,\r\n): T | null | undefined {\r\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\r\n  useEffect(() => {\r\n    setLast((prev) => {\r\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\r\n      if (shouldUse) return value\r\n      return prev\r\n    })\r\n  }, [filterFn, value])\r\n  return last\r\n}\r\n\r\nfunction isDefined<T>(x: T | null | undefined): x is T {\r\n  return x !== null && x !== undefined\r\n}\r\n\r\n/**\r\n * Returns the last truthy value of type T\r\n * @param value changing value\r\n */\r\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\r\n  return useLast(value, isDefined)\r\n}\r\n\r\nexport default useLastTruthy\r\n","import React, { Fragment, memo } from 'react'\r\nimport { Trade } from '@pancakeswap/sdk'\r\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\r\nimport { unwrappedToken } from 'utils/wrappedCurrency'\r\n\r\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\r\n  return (\r\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n      {trade.route.path.map((token, i, path) => {\r\n        const isLastItem: boolean = i === path.length - 1\r\n        const currency = unwrappedToken(token)\r\n        return (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <Fragment key={i}>\r\n            <Flex alignItems=\"end\">\r\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\r\n                {currency.symbol}\r\n              </Text>\r\n            </Flex>\r\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\r\n          </Fragment>\r\n        )\r\n      })}\r\n    </Flex>\r\n  )\r\n})\r\n","import React from 'react'\r\nimport { Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport SwapRoute from './SwapRoute'\r\n\r\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\r\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\r\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\r\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\r\n\r\n  return (\r\n    <AutoColumn style={{ padding: '0 16px' }}>\r\n      <RowBetween>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\r\n          </Text>\r\n          <QuestionHelper\r\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\r\n            ml=\"4px\"\r\n          />\r\n        </RowFixed>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\">\r\n            {isExactIn\r\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\r\n              '-'\r\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            Price Impact\r\n          </Text>\r\n          <QuestionHelper\r\n            text=\"The difference between the market price and estimated price due to trade size.\"\r\n            ml=\"4px\"\r\n          />\r\n        </RowFixed>\r\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n      </RowBetween>\r\n\r\n      <RowBetween>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            Liquidity Provider Fee\r\n          </Text>\r\n          <QuestionHelper\r\n            text={\r\n              <>\r\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\r\n                <Text>- 0.17% to LP token holders</Text>\r\n                <Text>- 0.03% to the Treasury</Text>\r\n                <Text>- 0.05% towards PCN buyback and burn</Text>\r\n              </>\r\n            }\r\n            ml=\"4px\"\r\n          />\r\n        </RowFixed>\r\n        <Text fontSize=\"14px\">\r\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\r\n        </Text>\r\n      </RowBetween>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport interface AdvancedSwapDetailsProps {\r\n  trade?: Trade\r\n}\r\n\r\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\r\n\r\n  return (\r\n    <AutoColumn gap=\"0px\">\r\n      {trade && (\r\n        <>\r\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\r\n          {showRoute && (\r\n            <>\r\n              <RowBetween style={{ padding: '0 16px' }}>\r\n                <span style={{ display: 'flex', alignItems: 'center' }}>\r\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                    Route\r\n                  </Text>\r\n                  <QuestionHelper\r\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\r\n                    ml=\"4px\"\r\n                  />\r\n                </span>\r\n                <SwapRoute trade={trade} />\r\n              </RowBetween>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useLastTruthy from 'hooks/useLast'\r\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\r\n\r\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\r\n  margin-top: ${({ show }) => (show ? '16px' : '-32px')};\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n  width: 100%;\r\n  max-width: 350px;\r\n  border-radius: 35px;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  box-shadow:0px 0px 2px 1px #8080804d;\r\n\r\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\r\n  transition: transform 300ms ease-in-out;\r\n`\r\n\r\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\r\n  const lastTrade = useLastTruthy(trade)\r\n\r\n  return (\r\n    <AdvancedDetailsFooter show={Boolean(trade)}>\r\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\r\n    </AdvancedDetailsFooter>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Price } from '@pancakeswap/sdk'\r\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { StyledBalanceMaxMini } from './styleds'\r\n\r\ninterface TradePriceProps {\r\n  price?: Price\r\n  showInverted: boolean\r\n  setShowInverted: (showInverted: boolean) => void\r\n}\r\n\r\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\r\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\r\n\r\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\r\n  const label = showInverted\r\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\r\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\r\n\r\n  return (\r\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\r\n      {show ? (\r\n        <>\r\n          {formattedPrice ?? '-'} {label}\r\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n            <AutoRenewIcon width=\"14px\" />\r\n          </StyledBalanceMaxMini>\r\n        </>\r\n      ) : (\r\n        '-'\r\n      )}\r\n    </Text>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport ImportToken from 'components/SearchModal/ImportToken'\r\n\r\ninterface Props extends InjectedModalProps {\r\n  tokens: Token[]\r\n  onCancel: () => void\r\n}\r\n\r\nconst TokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\r\n  return (\r\n    <Modal\r\n      title=\"Import Token\"\r\n      onDismiss={() => {\r\n        if (onDismiss) {\r\n          onDismiss()\r\n        }\r\n        onCancel()\r\n      }}\r\n      style={{ maxWidth: '420px' }}\r\n    >\r\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TokenWarningModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { RowBetween } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\n\r\nconst Grouping = styled(RowBetween)`\r\n  width: 50%;\r\n`\r\n\r\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  background-color: ${({ theme, confirmed, disabled }) =>\r\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\r\n  border-radius: 50%;\r\n  color: #ffffff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  line-height: 8px;\r\n  font-size: 12px;\r\n`\r\n\r\nconst CircleRow = styled.div`\r\n  width: calc(100% - 20px);\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(\r\n    90deg,\r\n    ${({ theme, prevConfirmed, disabled }) =>\r\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\r\n      0%,\r\n    ${({ theme, prevConfirmed, disabled }) =>\r\n        disabled\r\n          ? theme.colors.backgroundDisabled\r\n          : prevConfirmed\r\n          ? theme.colors.primary\r\n          : theme.colors.backgroundDisabled}\r\n      80%\r\n  );\r\n  opacity: 0.6;\r\n`\r\n\r\ninterface ProgressCirclesProps {\r\n  steps: boolean[]\r\n  disabled?: boolean\r\n}\r\n\r\n/**\r\n * Based on array of steps, create a step counter of circles.\r\n * A circle can be enabled, disabled, or confirmed. States are derived\r\n * from previous step.\r\n *\r\n * An extra circle is added to represent the ability to swap, add, or remove.\r\n * This step will never be marked as complete (because no 'txn done' state in body ui).\r\n *\r\n * @param steps  array of booleans where true means step is complete\r\n */\r\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\r\n  return (\r\n    <AutoColumn justify=\"center\" {...rest}>\r\n      <Grouping>\r\n        {steps.map((step, i) => {\r\n          return (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <CircleRow key={i}>\r\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\r\n                {step ? '✓' : i + 1}\r\n              </Circle>\r\n              <Connector prevConfirmed={step} disabled={disabled} />\r\n            </CircleRow>\r\n          )\r\n        })}\r\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\r\n      </Grouping>\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\r\nimport { useTransactionAdder } from '../state/transactions/hooks'\r\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\r\nimport isZero from '../utils/isZero'\r\nimport useTransactionDeadline from './useTransactionDeadline'\r\nimport useENS from './ENS/useENS'\r\n\r\nexport enum SwapCallbackState {\r\n  INVALID,\r\n  LOADING,\r\n  VALID,\r\n}\r\n\r\ninterface SwapCall {\r\n  contract: Contract\r\n  parameters: SwapParameters\r\n}\r\n\r\ninterface SuccessfulCall {\r\n  call: SwapCall\r\n  gasEstimate: BigNumber\r\n}\r\n\r\ninterface FailedCall {\r\n  call: SwapCall\r\n  error: Error\r\n}\r\n\r\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\r\n\r\n/**\r\n * Returns the swap calls that can be used to make the trade\r\n * @param trade trade to execute\r\n * @param allowedSlippage user allowed slippage\r\n * @param recipientAddressOrName\r\n */\r\nfunction useSwapCallArguments(\r\n  trade: Trade | undefined, // trade to execute, required\r\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\r\n): SwapCall[] {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n\r\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\r\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\r\n  const deadline = useTransactionDeadline()\r\n\r\n  return useMemo(() => {\r\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\r\n\r\n    const contract: Contract | null = getRouterContract(chainId, library, account)\r\n    if (!contract) {\r\n      return []\r\n    }\r\n\r\n    const swapMethods = []\r\n\r\n    swapMethods.push(\r\n      Router.swapCallParameters(trade, {\r\n        feeOnTransfer: false,\r\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\r\n        recipient,\r\n        deadline: deadline.toNumber(),\r\n      }),\r\n    )\r\n\r\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\r\n      swapMethods.push(\r\n        Router.swapCallParameters(trade, {\r\n          feeOnTransfer: true,\r\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\r\n          recipient,\r\n          deadline: deadline.toNumber(),\r\n        }),\r\n      )\r\n    }\r\n\r\n    return swapMethods.map((parameters) => ({ parameters, contract }))\r\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\r\n}\r\n\r\n// returns a function that will execute a swap, if the parameters are all valid\r\n// and the user has approved the slippage adjusted input amount for the trade\r\nexport function useSwapCallback(\r\n  trade: Trade | undefined, // trade to execute, required\r\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\r\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n\r\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\r\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\r\n\r\n  return useMemo(() => {\r\n    if (!trade || !library || !account || !chainId) {\r\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\r\n    }\r\n    if (!recipient) {\r\n      if (recipientAddressOrName !== null) {\r\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\r\n      }\r\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\r\n    }\r\n\r\n    return {\r\n      state: SwapCallbackState.VALID,\r\n      callback: async function onSwap(): Promise<string> {\r\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\r\n          swapCalls.map((call) => {\r\n            const {\r\n              parameters: { methodName, args, value },\r\n              contract,\r\n            } = call\r\n            const options = !value || isZero(value) ? {} : { value }\r\n\r\n            return contract.estimateGas[methodName](...args, options)\r\n              .then((gasEstimate) => {\r\n                return {\r\n                  call,\r\n                  gasEstimate,\r\n                }\r\n              })\r\n              .catch((gasError) => {\r\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\r\n\r\n                return contract.callStatic[methodName](...args, options)\r\n                  .then((result) => {\r\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\r\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\r\n                  })\r\n                  .catch((callError) => {\r\n                    console.error('Call threw error', call, callError)\r\n                    const reason: string = callError.reason || callError.data?.message || callError.message\r\n                    const errorMessage = `The transaction cannot succeed due to error: ${\r\n                      reason ?? 'Unknown error, check the logs'\r\n                    }.`\r\n\r\n                    return { call, error: new Error(errorMessage) }\r\n                  })\r\n              })\r\n          }),\r\n        )\r\n\r\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\r\n        const successfulEstimation = estimatedCalls.find(\r\n          (el, ix, list): el is SuccessfulCall =>\r\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\r\n        )\r\n\r\n        if (!successfulEstimation) {\r\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\r\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\r\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\r\n        }\r\n\r\n        const {\r\n          call: {\r\n            contract,\r\n            parameters: { methodName, args, value },\r\n          },\r\n          gasEstimate,\r\n        } = successfulEstimation\r\n\r\n        return contract[methodName](...args, {\r\n          gasLimit: calculateGasMargin(gasEstimate),\r\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\r\n        })\r\n          .then((response: any) => {\r\n            const inputSymbol = trade.inputAmount.currency.symbol\r\n            const outputSymbol = trade.outputAmount.currency.symbol\r\n            const inputAmount = trade.inputAmount.toSignificant(3)\r\n            const outputAmount = trade.outputAmount.toSignificant(3)\r\n\r\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\r\n            const withRecipient =\r\n              recipient === account\r\n                ? base\r\n                : `${base} to ${\r\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\r\n                      ? shortenAddress(recipientAddressOrName)\r\n                      : recipientAddressOrName\r\n                  }`\r\n\r\n            addTransaction(response, {\r\n              summary: withRecipient,\r\n            })\r\n\r\n            return response.hash\r\n          })\r\n          .catch((error: any) => {\r\n            // if the user rejected the tx, pass this along\r\n            if (error?.code === 4001) {\r\n              throw new Error('Transaction rejected.')\r\n            } else {\r\n              // otherwise, the error was unexpected and we need to convey that\r\n              console.error(`Swap failed`, error, methodName, args, value)\r\n              throw new Error(`Swap failed: ${error.message}`)\r\n            }\r\n          })\r\n      },\r\n      error: null,\r\n    }\r\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\r\n}\r\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { tryParseAmount } from '../state/swap/hooks'\r\nimport { useTransactionAdder } from '../state/transactions/hooks'\r\nimport { useCurrencyBalance } from '../state/wallet/hooks'\r\nimport { useWETHContract } from './useContract'\r\n\r\nexport enum WrapType {\r\n  NOT_APPLICABLE,\r\n  WRAP,\r\n  UNWRAP,\r\n}\r\n\r\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\r\n/**\r\n * Given the selected input and output currency, return a wrap callback\r\n * @param inputCurrency the selected input currency\r\n * @param outputCurrency the selected output currency\r\n * @param typedValue the user input value\r\n */\r\nexport default function useWrapCallback(\r\n  inputCurrency: Currency | undefined,\r\n  outputCurrency: Currency | undefined,\r\n  typedValue: string | undefined,\r\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\r\n  const { chainId, account } = useActiveWeb3React()\r\n  const wethContract = useWETHContract()\r\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\r\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\r\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  return useMemo(() => {\r\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\r\n\r\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\r\n\r\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\r\n      return {\r\n        wrapType: WrapType.WRAP,\r\n        execute:\r\n          sufficientBalance && inputAmount\r\n            ? async () => {\r\n                try {\r\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\r\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\r\n                } catch (error) {\r\n                  console.error('Could not deposit', error)\r\n                }\r\n              }\r\n            : undefined,\r\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\r\n      }\r\n    }\r\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\r\n      return {\r\n        wrapType: WrapType.UNWRAP,\r\n        execute:\r\n          sufficientBalance && inputAmount\r\n            ? async () => {\r\n                try {\r\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\r\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\r\n                } catch (error) {\r\n                  console.error('Could not withdraw', error)\r\n                }\r\n              }\r\n            : undefined,\r\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\r\n      }\r\n    }\r\n    return NOT_APPLICABLE\r\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\r\n}\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\r\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit'\r\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\r\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport AddressInputPanel from './components/AddressInputPanel'\r\nimport { GreyCard } from '../../components/Card'\r\nimport Column, { AutoColumn } from '../../components/Layout/Column'\r\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\r\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\r\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\r\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\r\nimport TradePrice from './components/TradePrice'\r\nimport TokenWarningModal from './components/TokenWarningModal'\r\nimport ProgressSteps from './components/ProgressSteps'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport UnlockButton from '../../components/UnlockButton'\r\n\r\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\r\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\r\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\r\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\r\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\r\nimport { Field } from '../../state/swap/actions'\r\nimport {\r\n  useDefaultsFromURLSearch,\r\n  useDerivedSwapInfo,\r\n  useSwapActionHandlers,\r\n  useSwapState,\r\n} from '../../state/swap/hooks'\r\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\r\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\r\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\r\nimport CircleLoader from '../../components/Loader/CircleLoader'\r\nimport Page from '../Page'\r\n\r\nconst Label = styled(Text)`\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n`\r\n\r\nexport default function Swap({ history }: RouteComponentProps) {\r\n  const loadedUrlParams = useDefaultsFromURLSearch()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // token warning stuff\r\n  const [loadedInputCurrency, loadedOutputCurrency] = [\r\n    useCurrency(loadedUrlParams?.inputCurrencyId),\r\n    useCurrency(loadedUrlParams?.outputCurrencyId),\r\n  ]\r\n  const urlLoadedTokens: Token[] = useMemo(\r\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\r\n    [loadedInputCurrency, loadedOutputCurrency],\r\n  )\r\n\r\n  // dismiss warning if all imported tokens are in active lists\r\n  const defaultTokens = useAllTokens()\r\n  const importTokensNotInDefault =\r\n    urlLoadedTokens &&\r\n    urlLoadedTokens.filter((token: Token) => {\r\n      return !(token.address in defaultTokens)\r\n    })\r\n\r\n  const { account } = useActiveWeb3React()\r\n\r\n  // for expert mode\r\n  const [isExpertMode] = useExpertModeManager()\r\n\r\n  // get custom setting values for user\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  // swap state\r\n  const { independentField, typedValue, recipient } = useSwapState()\r\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\r\n\r\n  const {\r\n    wrapType,\r\n    execute: onWrap,\r\n    inputError: wrapInputError,\r\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\r\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\r\n  const trade = showWrap ? undefined : v2Trade\r\n\r\n  const parsedAmounts = showWrap\r\n    ? {\r\n      [Field.INPUT]: parsedAmount,\r\n      [Field.OUTPUT]: parsedAmount,\r\n    }\r\n    : {\r\n      [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\r\n      [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\r\n    }\r\n\r\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\r\n  const isValid = !swapInputError\r\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n\r\n  const handleTypeInput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.INPUT, value)\r\n    },\r\n    [onUserInput],\r\n  )\r\n  const handleTypeOutput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.OUTPUT, value)\r\n    },\r\n    [onUserInput],\r\n  )\r\n\r\n  // modal and loading\r\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\r\n    tradeToConfirm: Trade | undefined\r\n    attemptingTxn: boolean\r\n    swapErrorMessage: string | undefined\r\n    txHash: string | undefined\r\n  }>({\r\n    tradeToConfirm: undefined,\r\n    attemptingTxn: false,\r\n    swapErrorMessage: undefined,\r\n    txHash: undefined,\r\n  })\r\n\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: showWrap\r\n      ? parsedAmounts[independentField]?.toExact() ?? ''\r\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const route = trade?.route\r\n  const userHasSpecifiedInputOutput = Boolean(\r\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\r\n  )\r\n\r\n  const noRoute = !route\r\n\r\n  // check whether the user has approved the router on the input token\r\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\r\n\r\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\r\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\r\n\r\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\r\n  useEffect(() => {\r\n    if (approval === ApprovalState.PENDING) {\r\n      setApprovalSubmitted(true)\r\n    }\r\n  }, [approval, approvalSubmitted])\r\n\r\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\r\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\r\n\r\n  // the callback to execute the swap\r\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\r\n\r\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\r\n\r\n  const [singleHopOnly] = useUserSingleHopOnly()\r\n\r\n  const handleSwap = useCallback(() => {\r\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\r\n      return\r\n    }\r\n    if (!swapCallback) {\r\n      return\r\n    }\r\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\r\n    swapCallback()\r\n      .then((hash) => {\r\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\r\n      })\r\n      .catch((error) => {\r\n        setSwapState({\r\n          attemptingTxn: false,\r\n          tradeToConfirm,\r\n          swapErrorMessage: error.message,\r\n          txHash: undefined,\r\n        })\r\n      })\r\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\r\n\r\n  // errors\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n\r\n  // warnings on slippage\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\r\n  // never show if price impact is above threshold in non expert mode\r\n  const showApproveFlow =\r\n    !swapInputError &&\r\n    (approval === ApprovalState.NOT_APPROVED ||\r\n      approval === ApprovalState.PENDING ||\r\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\r\n    !(priceImpactSeverity > 3 && !isExpertMode)\r\n\r\n  const handleConfirmDismiss = useCallback(() => {\r\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.INPUT, '')\r\n    }\r\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\r\n\r\n  const handleAcceptChanges = useCallback(() => {\r\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\r\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\r\n\r\n  const handleInputSelect = useCallback(\r\n    (inputCurrency) => {\r\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n      onCurrencySelection(Field.INPUT, inputCurrency)\r\n    },\r\n    [onCurrencySelection],\r\n  )\r\n\r\n  const handleMaxInput = useCallback(() => {\r\n    if (maxAmountInput) {\r\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\r\n    }\r\n  }, [maxAmountInput, onUserInput])\r\n\r\n  const handleOutputSelect = useCallback(\r\n    (outputCurrency) => onCurrencySelection(Field.OUTPUT, outputCurrency),\r\n    [onCurrencySelection],\r\n  )\r\n\r\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\r\n\r\n  const [onPresentTokenWarningModal] = useModal(\r\n    <TokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (importTokensNotInDefault.length > 0) {\r\n      onPresentTokenWarningModal()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [importTokensNotInDefault.length])\r\n\r\n  const [onPresentConfirmModal] = useModal(\r\n    <ConfirmSwapModal\r\n      trade={trade}\r\n      originalTrade={tradeToConfirm}\r\n      onAcceptChanges={handleAcceptChanges}\r\n      attemptingTxn={attemptingTxn}\r\n      txHash={txHash}\r\n      recipient={recipient}\r\n      allowedSlippage={allowedSlippage}\r\n      onConfirm={handleSwap}\r\n      swapErrorMessage={swapErrorMessage}\r\n      customOnDismiss={handleConfirmDismiss}\r\n    />,\r\n    true,\r\n    true,\r\n    'confirmSwapModal',\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <AppBody>\r\n        <AppHeader title={t('Swap')} subtitle={t('Trade tokens in an instant')} />\r\n        <Wrapper id=\"swap-page\">\r\n          <AutoColumn gap=\"md\">\r\n            <CurrencyInputPanel\r\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\r\n              value={formattedAmounts[Field.INPUT]}\r\n              showMaxButton={!atMaxAmountInput}\r\n              currency={currencies[Field.INPUT]}\r\n              onUserInput={handleTypeInput}\r\n              onMax={handleMaxInput}\r\n              onCurrencySelect={handleInputSelect}\r\n              otherCurrency={currencies[Field.OUTPUT]}\r\n              id=\"swap-currency-input\"\r\n            />\r\n            <AutoColumn justify=\"space-between\">\r\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\r\n                <ArrowWrapper clickable>\r\n                  <ArrowDownIcon\r\n                    width=\"16px\"\r\n                    onClick={() => {\r\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n                      onSwitchTokens()\r\n                    }}\r\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\r\n                  />\r\n                </ArrowWrapper>\r\n                {recipient === null && !showWrap && isExpertMode ? (\r\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\r\n                    {t('+ Add a send (optional)')}\r\n                  </Button>\r\n                ) : null}\r\n              </AutoRow>\r\n            </AutoColumn>\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.OUTPUT]}\r\n              onUserInput={handleTypeOutput}\r\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\r\n              showMaxButton={false}\r\n              currency={currencies[Field.OUTPUT]}\r\n              onCurrencySelect={handleOutputSelect}\r\n              otherCurrency={currencies[Field.INPUT]}\r\n              id=\"swap-currency-output\"\r\n            />\r\n\r\n            {isExpertMode && recipient !== null && !showWrap ? (\r\n              <>\r\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\r\n                  <ArrowWrapper clickable={false}>\r\n                    <ArrowDownIcon width=\"16px\" />\r\n                  </ArrowWrapper>\r\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\r\n                    {t('- Remove send')}\r\n                  </Button>\r\n                </AutoRow>\r\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\r\n              </>\r\n            ) : null}\r\n\r\n            {showWrap ? null : (\r\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\r\n                {Boolean(trade) && (\r\n                  <RowBetween align=\"center\">\r\n                    <Label>{t('Price')}</Label>\r\n                    <TradePrice\r\n                      price={trade?.executionPrice}\r\n                      showInverted={showInverted}\r\n                      setShowInverted={setShowInverted}\r\n                    />\r\n                  </RowBetween>\r\n                )}\r\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\r\n                  <RowBetween align=\"center\">\r\n                    <Label>{t('Slippage Tolerance')}</Label>\r\n                    <Text bold color=\"primary\">\r\n                      {allowedSlippage / 100}%\r\n                    </Text>\r\n                  </RowBetween>\r\n                )}\r\n              </AutoColumn>\r\n            )}\r\n          </AutoColumn>\r\n          <Box mt=\"2rem\" >\r\n            {swapIsUnsupported ? (\r\n              <Button style={{ borderRadius: '15px' }} width=\"100%\" disabled mb=\"4px\">\r\n                {t('Unsupported Asset')}\r\n              </Button>\r\n            ) : !account ? (\r\n              <UnlockButton />\r\n            ) : showWrap ? (\r\n              <Button style={{ borderRadius: '15px' }} width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\r\n                {wrapInputError ??\r\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\r\n              </Button>\r\n            ) : noRoute && userHasSpecifiedInputOutput ? (\r\n              <GreyCard style={{ textAlign: 'center' }}>\r\n                <Text color=\"textSubtle\" mb=\"4px\">\r\n                  {t('Insufficient liquidity for this trade.')}\r\n                </Text>\r\n                {singleHopOnly && (\r\n                  <Text color=\"textSubtle\" mb=\"4px\">\r\n                    {t('Try enabling multi-hop trades.')}\r\n                  </Text>\r\n                )}\r\n              </GreyCard>\r\n            ) : showApproveFlow ? (\r\n              <RowBetween>\r\n                <Button\r\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\r\n                  onClick={approveCallback}\r\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\r\n                  width=\"48%\"\r\n                  style={{ borderRadius: '15px' }}\r\n                >\r\n                  {approval === ApprovalState.PENDING ? (\r\n                    <AutoRow gap=\"6px\" justify=\"center\">\r\n                      {t('Approving')} <CircleLoader stroke=\"white\" />\r\n                    </AutoRow>\r\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\r\n                    t('Approved')\r\n                  ) : (\r\n                    t('Approve %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\r\n                  )}\r\n                </Button>\r\n                <Button\r\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\r\n                  onClick={() => {\r\n                    if (isExpertMode) {\r\n                      handleSwap()\r\n                    } else {\r\n                      setSwapState({\r\n                        tradeToConfirm: trade,\r\n                        attemptingTxn: false,\r\n                        swapErrorMessage: undefined,\r\n                        txHash: undefined,\r\n                      })\r\n                      onPresentConfirmModal()\r\n                    }\r\n                  }}\r\n                  width=\"48%\"\r\n                  style={{ borderRadius: '15px' }}\r\n                  id=\"swap-button\"\r\n                  disabled={\r\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\r\n                  }\r\n                >\r\n                  {priceImpactSeverity > 3 && !isExpertMode\r\n                    ? t('Price Impact High')\r\n                    : priceImpactSeverity > 2\r\n                      ? t('Swap Anyway')\r\n                      : t('Swap')}\r\n                </Button>\r\n              </RowBetween>\r\n            ) : (\r\n              <Button\r\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\r\n                onClick={() => {\r\n                  if (isExpertMode) {\r\n                    handleSwap()\r\n                  } else {\r\n                    setSwapState({\r\n                      tradeToConfirm: trade,\r\n                      attemptingTxn: false,\r\n                      swapErrorMessage: undefined,\r\n                      txHash: undefined,\r\n                    })\r\n                    onPresentConfirmModal()\r\n                  }\r\n                }}\r\n                id=\"swap-button\"\r\n                width=\"100%\"\r\n                style={{ borderRadius: '15px' }}\r\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\r\n              >\r\n                {swapInputError ||\r\n                  (priceImpactSeverity > 3 && !isExpertMode\r\n                    ? `Price Impact Too High`\r\n                    : priceImpactSeverity > 2\r\n                      ? t('Swap Anyway')\r\n                      : t('Swap'))}\r\n              </Button>\r\n            )}\r\n            {showApproveFlow && (\r\n              <Column style={{ marginTop: '1rem' }}>\r\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\r\n              </Column>\r\n            )}\r\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n          </Box>\r\n        </Wrapper>\r\n      </AppBody>\r\n      {!swapIsUnsupported ? (\r\n        <AdvancedSwapDetailsDropdown trade={trade} />\r\n      ) : (\r\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\r\n      )}\r\n    </Page>\r\n  )\r\n}\r\n","import { Percent } from '@pancakeswap/sdk'\r\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\r\n\r\n/**\r\n * Given the price impact, get user confirmation.\r\n *\r\n * @param priceImpactWithoutFee price impact of the trade without the fee.\r\n */\r\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\r\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\r\n    return (\r\n      // eslint-disable-next-line no-alert\r\n      window.prompt(\r\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\r\n          0,\r\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\r\n      ) === 'confirm'\r\n    )\r\n  }\r\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\r\n    // eslint-disable-next-line no-alert\r\n    return window.confirm(\r\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\r\n        0,\r\n      )}%. Please confirm that you would like to continue with this swap.`,\r\n    )\r\n  }\r\n  return true\r\n}\r\n","import React from 'react'\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\r\nimport AddLiquidity from './index'\r\n\r\nexport function RedirectToAddLiquidity() {\r\n  return <Redirect to=\"/add/\" />\r\n}\r\n\r\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|CXS)-(0x[a-fA-F0-9]{40}|CXS)$/\r\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\r\n  const {\r\n    match: {\r\n      params: { currencyIdA },\r\n    },\r\n  } = props\r\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\r\n  if (match?.length) {\r\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\r\n  }\r\n\r\n  return <AddLiquidity {...props} />\r\n}\r\n\r\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\r\n  const {\r\n    match: {\r\n      params: { currencyIdA, currencyIdB },\r\n    },\r\n  } = props\r\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\r\n    return <Redirect to={`/add/${currencyIdA}`} />\r\n  }\r\n  return <AddLiquidity {...props} />\r\n}\r\n","import React from 'react'\r\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\r\n\r\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\r\n\r\nfunction RedirectOldRemoveLiquidityPathStructure({\r\n  match: {\r\n    params: { tokens },\r\n  },\r\n}: RouteComponentProps<{ tokens: string }>) {\r\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\r\n    return <Redirect to=\"/pool\" />\r\n  }\r\n  const [currency0, currency1] = tokens.split('-')\r\n\r\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\r\n}\r\nexport default RedirectOldRemoveLiquidityPathStructure\r\n","import React from 'react'\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\r\n\r\n// Redirects to swap but only replace the pathname\r\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\r\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\r\n}\r\n\r\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\r\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\r\n  const {\r\n    location,\r\n    location: { search },\r\n    match: {\r\n      params: { outputCurrency },\r\n    },\r\n  } = props\r\n\r\n  return (\r\n    <Redirect\r\n      to={{\r\n        ...location,\r\n        pathname: '/swap',\r\n        search:\r\n          search && search.length > 1\r\n            ? `${search}&outputCurrency=${outputCurrency}`\r\n            : `?outputCurrency=${outputCurrency}`,\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React, { lazy } from 'react'\r\nimport { Router, Redirect, Route, Switch } from 'react-router-dom';\r\nimport { ResetCSS } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport useEagerConnect from 'hooks/useEagerConnect'\r\nimport { usePollCoreFarmData, useFetchProfile, usePollBlockNumber } from 'state/hooks'\r\nimport { DatePickerPortal } from 'components/DatePicker'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\r\nimport { ToastListener } from './contexts/ToastsContext'\r\nimport PageLoader from './components/Loader/PageLoader'\r\nimport EasterEgg from './components/EasterEgg'\r\nimport history from './routerHistory'\r\n// Views included in the main bundle\r\nimport Pools from './views/Pools'\r\nimport Swap from './views/Swap'\r\nimport {\r\n  RedirectDuplicateTokenIds,\r\n  RedirectOldAddLiquidityPathStructure,\r\n  RedirectToAddLiquidity,\r\n} from './views/AddLiquidity/redirects'\r\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\r\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\r\nconst Pool = lazy(() => import('./views/Pool'))\r\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\r\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\r\n\r\n// This config is required for number formatting\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  usePollBlockNumber()\r\n  useEagerConnect()\r\n  useFetchProfile()\r\n  usePollCoreFarmData()\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <SuspenseWithChunkError fallback={<PageLoader />}>\r\n          <Switch>\r\n            {/* <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route> */}\r\n            <Route exact path=\"/farms/auction\">\r\n              <FarmAuction />\r\n            </Route>\r\n            <Route path=\"/farms\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/pools\">\r\n              <Pools />\r\n            </Route>\r\n\r\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\r\n            <Route exact strict path=\"/\" component={Swap} />\r\n            <Route exact strict path=\"/swap\" component={Swap} />\r\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\r\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\r\n            <Route exact strict path=\"/find\" component={PoolFinder} />\r\n            <Route exact strict path=\"/pool\" component={Pool} />\r\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\r\n            <Route exact path=\"/add\" component={AddLiquidity} />\r\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\r\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\r\n            <Route exact path=\"/create\" component={AddLiquidity} />\r\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\r\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\r\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\r\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\r\n\r\n            {/* Redirect */}\r\n            <Route path=\"/staking\">\r\n              <Redirect to=\"/pools\" />\r\n            </Route>\r\n            <Route path=\"/syrup\">\r\n              <Redirect to=\"/pools\" />\r\n            </Route>\r\n            <Route path=\"/nft\">\r\n              <Redirect to=\"/collectibles\" />\r\n            </Route>\r\n\r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </SuspenseWithChunkError>\r\n      </Menu>\r\n      <EasterEgg iterations={2} />\r\n      <ToastListener />\r\n      <DatePickerPortal />\r\n    </Router >\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport { ModalProvider } from '@pancakeswap/uikit'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { HelmetProvider } from 'react-helmet-async'\r\nimport { Provider } from 'react-redux'\r\nimport { getLibrary } from 'utils/web3React'\r\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\r\nimport { LanguageProvider } from 'contexts/Localization'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport { ToastsProvider } from 'contexts/ToastsContext'\r\nimport store from 'state'\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ToastsProvider>\r\n          <HelmetProvider>\r\n            <ThemeContextProvider>\r\n              <LanguageProvider>\r\n                <RefreshContextProvider>\r\n                  <ModalProvider>{children}</ModalProvider>\r\n                </RefreshContextProvider>\r\n              </LanguageProvider>\r\n            </ThemeContextProvider>\r\n          </HelmetProvider>\r\n        </ToastsProvider>\r\n      </Provider>\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import React, { useMemo, ReactNode } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\r\nimport { BLOCKED_ADDRESSES } from './config/constants'\r\nimport ApplicationUpdater from './state/application/updater'\r\nimport ListsUpdater from './state/lists/updater'\r\nimport MulticallUpdater from './state/multicall/updater'\r\nimport TransactionUpdater from './state/transactions/updater'\r\nimport App from './App'\r\nimport Providers from './Providers'\r\nimport \"./assets/css/style.css\";\r\n\r\nconst bodyStyle = {\r\n  background: `url(\"/images/background.webp\")`,\r\n  backgroundSize: \"cover\"\r\n\r\n}\r\n\r\nfunction Updaters() {\r\n  return (\r\n    <>\r\n      <ListsUpdater />\r\n      <ApplicationUpdater />\r\n      <TransactionUpdater />\r\n      <MulticallUpdater />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Blocklist({ children }: { children: ReactNode }) {\r\n  const { account } = useActiveWeb3React()\r\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\r\n  if (blocked) {\r\n    return <div>Blocked address</div>\r\n  }\r\n  return <>{children}</>\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Blocklist>\r\n      <Providers>\r\n        <Updaters />\r\n        <div >\r\n          <App />\r\n        </div>\r\n      </Providers>\r\n    </Blocklist>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}